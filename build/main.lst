                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _update_tile_position
                                     13 	.globl _update_tile_sprite
                                     14 	.globl _update_cursor_position
                                     15 	.globl _update_cursor_sprite
                                     16 	.globl _wait_vbls_done
                                     17 	.globl _is_input_held
                                     18 	.globl _was_input_released
                                     19 	.globl _was_input_depressed
                                     20 	.globl _update_input_state
                                     21 	.globl _set_sprite_data
                                     22 	.globl _set_bkg_tiles
                                     23 	.globl _set_bkg_data
                                     24 	.globl _wait_vbl_done
                                     25 	.globl _joypad
                                     26 	.globl _k_sprites
                                     27 	.globl _k_cursor_sprite_index
                                     28 	.globl _k_cursor_live_tile_index
                                     29 	.globl _k_cursor_empty_tile_index
                                     30 	.globl _k_live_tile_index
                                     31 	.globl _k_empty_tile_index
                                     32 	.globl _k_tile_was_alive_mask
                                     33 	.globl _k_tile_is_alive_mask
                                     34 	.globl _k_execution_state_active_mask
                                     35 	.globl _k_background_tiles
                                     36 	.globl _k_background_map
                                     37 ;--------------------------------------------------------
                                     38 ; special function registers
                                     39 ;--------------------------------------------------------
                                     40 ;--------------------------------------------------------
                                     41 ; ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area _DATA
                                     44 ;--------------------------------------------------------
                                     45 ; ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area _INITIALIZED
      000000                         48 _k_sprites::
      000000                         49 	.ds 64
                                     50 ;--------------------------------------------------------
                                     51 ; absolute external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area _DABS (ABS)
                                     54 ;--------------------------------------------------------
                                     55 ; global & static initialisations
                                     56 ;--------------------------------------------------------
                                     57 	.area _HOME
                                     58 	.area _GSINIT
                                     59 	.area _GSFINAL
                                     60 	.area _GSINIT
                                     61 ;--------------------------------------------------------
                                     62 ; Home
                                     63 ;--------------------------------------------------------
                                     64 	.area _HOME
                                     65 	.area _HOME
                                     66 ;--------------------------------------------------------
                                     67 ; code
                                     68 ;--------------------------------------------------------
                                     69 	.area _CODE
                                     70 ;input.h:31: void update_input_state(struct input_state* is, uint8_t button_state)
                                     71 ;	---------------------------------
                                     72 ; Function update_input_state
                                     73 ; ---------------------------------
      000000                         74 _update_input_state::
      000000 E8 FB                   75 	add	sp, #-5
                                     76 ;input.h:34: is->previous_state = is->current_state;
      000002 F8 07                   77 	ldhl	sp,	#7
      000004 7E                      78 	ld	a, (hl)
      000005 F8 00                   79 	ldhl	sp,	#0
      000007 77                      80 	ld	(hl), a
      000008 F8 08                   81 	ldhl	sp,	#8
      00000A 7E                      82 	ld	a, (hl)
      00000B F8 01                   83 	ldhl	sp,	#1
      00000D 22                      84 	ld	(hl+), a
      00000E C1                      85 	pop	bc
      00000F C5                      86 	push	bc
      000010 03                      87 	inc	bc
      000011 0A                      88 	ld	a, (bc)
      000012 77                      89 	ld	(hl), a
      000013 D1                      90 	pop	de
      000014 D5                      91 	push	de
      000015 7E                      92 	ld	a, (hl)
      000016 12                      93 	ld	(de), a
                                     94 ;input.h:37: is->current_state = ((button_state & J_A) == J_A) << btn_a;
      000017 F8 09                   95 	ldhl	sp,	#9
      000019 7E                      96 	ld	a, (hl)
      00001A F8 03                   97 	ldhl	sp,	#3
      00001C 22                      98 	ld	(hl+), a
      00001D AF                      99 	xor	a, a
      00001E 32                     100 	ld	(hl-), a
      00001F 7E                     101 	ld	a, (hl)
      000020 E6 10                  102 	and	a, #0x10
      000022 5F                     103 	ld	e, a
      000023 16 00                  104 	ld	d, #0x00
      000025 7B                     105 	ld	a, e
      000026 D6 10                  106 	sub	a, #0x10
      000028 B2                     107 	or	a, d
      000029 3E 01                  108 	ld	a, #0x01
      00002B 28 01                  109 	jr	Z, 00104$
      00002D AF                     110 	xor	a, a
      00002E                        111 00104$:
                                    112 ;input.h:38: is->current_state |= ((button_state & J_B) == J_B) << btn_b;
      00002E 02                     113 	ld	(bc), a
      00002F 5F                     114 	ld	e, a
      000030 F8 03                  115 	ldhl	sp,	#3
      000032 7E                     116 	ld	a, (hl)
      000033 E6 20                  117 	and	a, #0x20
                                    118 ;	spillPairReg hl
                                    119 ;	spillPairReg hl
      000035 2E 00                  120 	ld	l, #0x00
      000037 D6 20                  121 	sub	a, #0x20
      000039 B5                     122 	or	a, l
      00003A 3E 01                  123 	ld	a, #0x01
      00003C 28 01                  124 	jr	Z, 00106$
      00003E AF                     125 	xor	a, a
      00003F                        126 00106$:
      00003F 87                     127 	add	a, a
      000040 B3                     128 	or	a, e
      000041 5F                     129 	ld	e, a
      000042 02                     130 	ld	(bc), a
                                    131 ;input.h:39: is->current_state |= ((button_state & J_UP) == J_UP) << btn_up;
      000043 F8 03                  132 	ldhl	sp,	#3
      000045 7E                     133 	ld	a, (hl)
      000046 E6 04                  134 	and	a, #0x04
                                    135 ;	spillPairReg hl
                                    136 ;	spillPairReg hl
      000048 2E 00                  137 	ld	l, #0x00
      00004A D6 04                  138 	sub	a, #0x04
      00004C B5                     139 	or	a, l
      00004D 3E 01                  140 	ld	a, #0x01
      00004F 28 01                  141 	jr	Z, 00108$
      000051 AF                     142 	xor	a, a
      000052                        143 00108$:
      000052 87                     144 	add	a, a
      000053 87                     145 	add	a, a
      000054 B3                     146 	or	a, e
      000055 5F                     147 	ld	e, a
      000056 02                     148 	ld	(bc), a
                                    149 ;input.h:40: is->current_state |= ((button_state & J_DOWN) == J_DOWN) << btn_down;
      000057 F8 03                  150 	ldhl	sp,	#3
      000059 7E                     151 	ld	a, (hl)
      00005A E6 08                  152 	and	a, #0x08
                                    153 ;	spillPairReg hl
                                    154 ;	spillPairReg hl
      00005C 2E 00                  155 	ld	l, #0x00
      00005E D6 08                  156 	sub	a, #0x08
      000060 B5                     157 	or	a, l
      000061 3E 01                  158 	ld	a, #0x01
      000063 28 01                  159 	jr	Z, 00110$
      000065 AF                     160 	xor	a, a
      000066                        161 00110$:
      000066 87                     162 	add	a, a
      000067 87                     163 	add	a, a
      000068 87                     164 	add	a, a
      000069 B3                     165 	or	a, e
      00006A 5F                     166 	ld	e, a
      00006B 02                     167 	ld	(bc), a
                                    168 ;input.h:41: is->current_state |= ((button_state & J_LEFT) == J_LEFT) << btn_left;
      00006C F8 03                  169 	ldhl	sp,	#3
      00006E 7E                     170 	ld	a, (hl)
      00006F E6 02                  171 	and	a, #0x02
                                    172 ;	spillPairReg hl
                                    173 ;	spillPairReg hl
      000071 2E 00                  174 	ld	l, #0x00
      000073 D6 02                  175 	sub	a, #0x02
      000075 B5                     176 	or	a, l
      000076 3E 01                  177 	ld	a, #0x01
      000078 28 01                  178 	jr	Z, 00112$
      00007A AF                     179 	xor	a, a
      00007B                        180 00112$:
      00007B CB 37                  181 	swap	a
      00007D E6 F0                  182 	and	a, #0xf0
      00007F B3                     183 	or	a, e
      000080 5F                     184 	ld	e, a
      000081 02                     185 	ld	(bc), a
                                    186 ;input.h:42: is->current_state |= ((button_state & J_RIGHT) == J_RIGHT) << btn_right;
      000082 F8 03                  187 	ldhl	sp,	#3
      000084 7E                     188 	ld	a, (hl)
      000085 E6 01                  189 	and	a, #0x01
                                    190 ;	spillPairReg hl
                                    191 ;	spillPairReg hl
      000087 2E 00                  192 	ld	l, #0x00
      000089 3D                     193 	dec	a
      00008A B5                     194 	or	a, l
      00008B 3E 01                  195 	ld	a, #0x01
      00008D 28 01                  196 	jr	Z, 00114$
      00008F AF                     197 	xor	a, a
      000090                        198 00114$:
      000090 CB 37                  199 	swap	a
      000092 07                     200 	rlca
      000093 E6 E0                  201 	and	a, #0xe0
      000095 B3                     202 	or	a, e
      000096 5F                     203 	ld	e, a
      000097 02                     204 	ld	(bc), a
                                    205 ;input.h:43: is->current_state |= ((button_state & J_START) == J_START) << btn_start;
      000098 F8 03                  206 	ldhl	sp,	#3
      00009A 7E                     207 	ld	a, (hl)
      00009B E6 80                  208 	and	a, #0x80
                                    209 ;	spillPairReg hl
                                    210 ;	spillPairReg hl
      00009D 2E 00                  211 	ld	l, #0x00
      00009F D6 80                  212 	sub	a, #0x80
      0000A1 B5                     213 	or	a, l
      0000A2 3E 01                  214 	ld	a, #0x01
      0000A4 28 01                  215 	jr	Z, 00116$
      0000A6 AF                     216 	xor	a, a
      0000A7                        217 00116$:
      0000A7 0F                     218 	rrca
      0000A8 0F                     219 	rrca
      0000A9 E6 C0                  220 	and	a, #0xc0
      0000AB B3                     221 	or	a, e
      0000AC 5F                     222 	ld	e, a
      0000AD 02                     223 	ld	(bc), a
                                    224 ;input.h:44: is->current_state |= ((button_state & J_SELECT) == J_SELECT) << btn_select;
      0000AE F8 03                  225 	ldhl	sp,	#3
      0000B0 7E                     226 	ld	a, (hl)
      0000B1 E6 40                  227 	and	a, #0x40
                                    228 ;	spillPairReg hl
                                    229 ;	spillPairReg hl
      0000B3 2E 00                  230 	ld	l, #0x00
      0000B5 D6 40                  231 	sub	a, #0x40
      0000B7 B5                     232 	or	a, l
      0000B8 3E 01                  233 	ld	a, #0x01
      0000BA 28 01                  234 	jr	Z, 00118$
      0000BC AF                     235 	xor	a, a
      0000BD                        236 00118$:
      0000BD 0F                     237 	rrca
      0000BE E6 80                  238 	and	a, #0x80
      0000C0 B3                     239 	or	a, e
      0000C1 57                     240 	ld	d, a
      0000C2 02                     241 	ld	(bc), a
                                    242 ;input.h:47: is->held_buttons = is->previous_state & is->current_state;
      0000C3 C1                     243 	pop	bc
      0000C4 C5                     244 	push	bc
      0000C5 03                     245 	inc	bc
      0000C6 03                     246 	inc	bc
      0000C7 F8 02                  247 	ldhl	sp,	#2
                                    248 ;input.h:50: is->depressed_buttons = (is->current_state ^ is->held_buttons);
                                    249 ;input.h:53: is->released_buttons = (is->previous_state ^ is->held_buttons);
      0000C9 3A                     250 	ld	a, (hl-)
      0000CA 2B                     251 	dec	hl
      0000CB A2                     252 	and	a, d
      0000CC 5F                     253 	ld	e, a
      0000CD 02                     254 	ld	(bc), a
      0000CE C1                     255 	pop	bc
      0000CF C5                     256 	push	bc
      0000D0 03                     257 	inc	bc
      0000D1 03                     258 	inc	bc
      0000D2 03                     259 	inc	bc
      0000D3 7A                     260 	ld	a, d
      0000D4 AB                     261 	xor	a, e
      0000D5 02                     262 	ld	(bc), a
      0000D6 D5                     263 	push	de
      0000D7 2A                     264 	ld	a, (hl+)
      0000D8 5F                     265 	ld	e, a
      0000D9 56                     266 	ld	d, (hl)
      0000DA 21 04 00               267 	ld	hl, #0x0004
      0000DD 19                     268 	add	hl, de
      0000DE D1                     269 	pop	de
      0000DF 4D                     270 	ld	c, l
      0000E0 44                     271 	ld	b, h
      0000E1 F8 02                  272 	ldhl	sp,	#2
      0000E3 7E                     273 	ld	a, (hl)
      0000E4 AB                     274 	xor	a, e
      0000E5 02                     275 	ld	(bc), a
                                    276 ;input.h:54: }
      0000E6 E8 05                  277 	add	sp, #5
      0000E8 C9                     278 	ret
      0000E9                        279 _k_background_map:
      0000E9 00                     280 	.db #0x00	; 0
      0000EA 00                     281 	.db #0x00	; 0
      0000EB 00                     282 	.db #0x00	; 0
      0000EC 00                     283 	.db #0x00	; 0
      0000ED 00                     284 	.db #0x00	; 0
      0000EE 00                     285 	.db #0x00	; 0
      0000EF 00                     286 	.db #0x00	; 0
      0000F0 00                     287 	.db #0x00	; 0
      0000F1 00                     288 	.db #0x00	; 0
      0000F2 00                     289 	.db #0x00	; 0
      0000F3 00                     290 	.db #0x00	; 0
      0000F4 00                     291 	.db #0x00	; 0
      0000F5 00                     292 	.db #0x00	; 0
      0000F6 00                     293 	.db #0x00	; 0
      0000F7 00                     294 	.db #0x00	; 0
      0000F8 00                     295 	.db #0x00	; 0
      0000F9 00                     296 	.db #0x00	; 0
      0000FA 00                     297 	.db #0x00	; 0
      0000FB 00                     298 	.db #0x00	; 0
      0000FC 00                     299 	.db #0x00	; 0
      0000FD 00                     300 	.db #0x00	; 0
      0000FE 00                     301 	.db #0x00	; 0
      0000FF 00                     302 	.db #0x00	; 0
      000100 00                     303 	.db #0x00	; 0
      000101 00                     304 	.db #0x00	; 0
      000102 00                     305 	.db #0x00	; 0
      000103 00                     306 	.db #0x00	; 0
      000104 00                     307 	.db #0x00	; 0
      000105 00                     308 	.db #0x00	; 0
      000106 00                     309 	.db #0x00	; 0
      000107 00                     310 	.db #0x00	; 0
      000108 00                     311 	.db #0x00	; 0
      000109 00                     312 	.db #0x00	; 0
      00010A 00                     313 	.db #0x00	; 0
      00010B 00                     314 	.db #0x00	; 0
      00010C 00                     315 	.db #0x00	; 0
      00010D 00                     316 	.db #0x00	; 0
      00010E 00                     317 	.db #0x00	; 0
      00010F 00                     318 	.db #0x00	; 0
      000110 00                     319 	.db #0x00	; 0
      000111 00                     320 	.db #0x00	; 0
      000112 00                     321 	.db #0x00	; 0
      000113 00                     322 	.db #0x00	; 0
      000114 00                     323 	.db #0x00	; 0
      000115 00                     324 	.db #0x00	; 0
      000116 00                     325 	.db #0x00	; 0
      000117 00                     326 	.db #0x00	; 0
      000118 00                     327 	.db #0x00	; 0
      000119 00                     328 	.db #0x00	; 0
      00011A 00                     329 	.db #0x00	; 0
      00011B 00                     330 	.db #0x00	; 0
      00011C 00                     331 	.db #0x00	; 0
      00011D 00                     332 	.db #0x00	; 0
      00011E 00                     333 	.db #0x00	; 0
      00011F 00                     334 	.db #0x00	; 0
      000120 00                     335 	.db #0x00	; 0
      000121 00                     336 	.db #0x00	; 0
      000122 00                     337 	.db #0x00	; 0
      000123 00                     338 	.db #0x00	; 0
      000124 00                     339 	.db #0x00	; 0
      000125 00                     340 	.db #0x00	; 0
      000126 00                     341 	.db #0x00	; 0
      000127 00                     342 	.db #0x00	; 0
      000128 00                     343 	.db #0x00	; 0
      000129 00                     344 	.db #0x00	; 0
      00012A 00                     345 	.db #0x00	; 0
      00012B 00                     346 	.db #0x00	; 0
      00012C 00                     347 	.db #0x00	; 0
      00012D 00                     348 	.db #0x00	; 0
      00012E 00                     349 	.db #0x00	; 0
      00012F 00                     350 	.db #0x00	; 0
      000130 00                     351 	.db #0x00	; 0
      000131 00                     352 	.db #0x00	; 0
      000132 00                     353 	.db #0x00	; 0
      000133 00                     354 	.db #0x00	; 0
      000134 00                     355 	.db #0x00	; 0
      000135 00                     356 	.db #0x00	; 0
      000136 00                     357 	.db #0x00	; 0
      000137 00                     358 	.db #0x00	; 0
      000138 00                     359 	.db #0x00	; 0
      000139 00                     360 	.db #0x00	; 0
      00013A 00                     361 	.db #0x00	; 0
      00013B 00                     362 	.db #0x00	; 0
      00013C 00                     363 	.db #0x00	; 0
      00013D 00                     364 	.db #0x00	; 0
      00013E 00                     365 	.db #0x00	; 0
      00013F 00                     366 	.db #0x00	; 0
      000140 00                     367 	.db #0x00	; 0
      000141 00                     368 	.db #0x00	; 0
      000142 00                     369 	.db #0x00	; 0
      000143 00                     370 	.db #0x00	; 0
      000144 00                     371 	.db #0x00	; 0
      000145 00                     372 	.db #0x00	; 0
      000146 00                     373 	.db #0x00	; 0
      000147 00                     374 	.db #0x00	; 0
      000148 00                     375 	.db #0x00	; 0
      000149 00                     376 	.db #0x00	; 0
      00014A 00                     377 	.db #0x00	; 0
      00014B 00                     378 	.db #0x00	; 0
      00014C 00                     379 	.db #0x00	; 0
      00014D 00                     380 	.db #0x00	; 0
      00014E 00                     381 	.db #0x00	; 0
      00014F 00                     382 	.db #0x00	; 0
      000150 00                     383 	.db #0x00	; 0
      000151 00                     384 	.db #0x00	; 0
      000152 00                     385 	.db #0x00	; 0
      000153 00                     386 	.db #0x00	; 0
      000154 00                     387 	.db #0x00	; 0
      000155 00                     388 	.db #0x00	; 0
      000156 00                     389 	.db #0x00	; 0
      000157 00                     390 	.db #0x00	; 0
      000158 00                     391 	.db #0x00	; 0
      000159 00                     392 	.db #0x00	; 0
      00015A 00                     393 	.db #0x00	; 0
      00015B 00                     394 	.db #0x00	; 0
      00015C 00                     395 	.db #0x00	; 0
      00015D 00                     396 	.db #0x00	; 0
      00015E 00                     397 	.db #0x00	; 0
      00015F 00                     398 	.db #0x00	; 0
      000160 00                     399 	.db #0x00	; 0
      000161 00                     400 	.db #0x00	; 0
      000162 00                     401 	.db #0x00	; 0
      000163 00                     402 	.db #0x00	; 0
      000164 00                     403 	.db #0x00	; 0
      000165 00                     404 	.db #0x00	; 0
      000166 00                     405 	.db #0x00	; 0
      000167 00                     406 	.db #0x00	; 0
      000168 00                     407 	.db #0x00	; 0
      000169 00                     408 	.db #0x00	; 0
      00016A 00                     409 	.db #0x00	; 0
      00016B 00                     410 	.db #0x00	; 0
      00016C 00                     411 	.db #0x00	; 0
      00016D 00                     412 	.db #0x00	; 0
      00016E 00                     413 	.db #0x00	; 0
      00016F 00                     414 	.db #0x00	; 0
      000170 00                     415 	.db #0x00	; 0
      000171 00                     416 	.db #0x00	; 0
      000172 00                     417 	.db #0x00	; 0
      000173 00                     418 	.db #0x00	; 0
      000174 00                     419 	.db #0x00	; 0
      000175 00                     420 	.db #0x00	; 0
      000176 00                     421 	.db #0x00	; 0
      000177 00                     422 	.db #0x00	; 0
      000178 00                     423 	.db #0x00	; 0
      000179 00                     424 	.db #0x00	; 0
      00017A 00                     425 	.db #0x00	; 0
      00017B 00                     426 	.db #0x00	; 0
      00017C 00                     427 	.db #0x00	; 0
      00017D 00                     428 	.db #0x00	; 0
      00017E 00                     429 	.db #0x00	; 0
      00017F 00                     430 	.db #0x00	; 0
      000180 00                     431 	.db #0x00	; 0
      000181 00                     432 	.db #0x00	; 0
      000182 00                     433 	.db #0x00	; 0
      000183 00                     434 	.db #0x00	; 0
      000184 00                     435 	.db #0x00	; 0
      000185 00                     436 	.db #0x00	; 0
      000186 00                     437 	.db #0x00	; 0
      000187 00                     438 	.db #0x00	; 0
      000188 00                     439 	.db #0x00	; 0
      000189 00                     440 	.db #0x00	; 0
      00018A 00                     441 	.db #0x00	; 0
      00018B 00                     442 	.db #0x00	; 0
      00018C 00                     443 	.db #0x00	; 0
      00018D 00                     444 	.db #0x00	; 0
      00018E 00                     445 	.db #0x00	; 0
      00018F 00                     446 	.db #0x00	; 0
      000190 00                     447 	.db #0x00	; 0
      000191 00                     448 	.db #0x00	; 0
      000192 00                     449 	.db #0x00	; 0
      000193 00                     450 	.db #0x00	; 0
      000194 00                     451 	.db #0x00	; 0
      000195 00                     452 	.db #0x00	; 0
      000196 00                     453 	.db #0x00	; 0
      000197 00                     454 	.db #0x00	; 0
      000198 00                     455 	.db #0x00	; 0
      000199 00                     456 	.db #0x00	; 0
      00019A 00                     457 	.db #0x00	; 0
      00019B 00                     458 	.db #0x00	; 0
      00019C 00                     459 	.db #0x00	; 0
      00019D 00                     460 	.db #0x00	; 0
      00019E 00                     461 	.db #0x00	; 0
      00019F 00                     462 	.db #0x00	; 0
      0001A0 00                     463 	.db #0x00	; 0
      0001A1 00                     464 	.db #0x00	; 0
      0001A2 00                     465 	.db #0x00	; 0
      0001A3 00                     466 	.db #0x00	; 0
      0001A4 00                     467 	.db #0x00	; 0
      0001A5 00                     468 	.db #0x00	; 0
      0001A6 00                     469 	.db #0x00	; 0
      0001A7 00                     470 	.db #0x00	; 0
      0001A8 00                     471 	.db #0x00	; 0
      0001A9 00                     472 	.db #0x00	; 0
      0001AA 00                     473 	.db #0x00	; 0
      0001AB 00                     474 	.db #0x00	; 0
      0001AC 00                     475 	.db #0x00	; 0
      0001AD 00                     476 	.db #0x00	; 0
      0001AE 00                     477 	.db #0x00	; 0
      0001AF 00                     478 	.db #0x00	; 0
      0001B0 00                     479 	.db #0x00	; 0
      0001B1 00                     480 	.db #0x00	; 0
      0001B2 00                     481 	.db #0x00	; 0
      0001B3 00                     482 	.db #0x00	; 0
      0001B4 00                     483 	.db #0x00	; 0
      0001B5 00                     484 	.db #0x00	; 0
      0001B6 00                     485 	.db #0x00	; 0
      0001B7 00                     486 	.db #0x00	; 0
      0001B8 00                     487 	.db #0x00	; 0
      0001B9 00                     488 	.db #0x00	; 0
      0001BA 00                     489 	.db #0x00	; 0
      0001BB 00                     490 	.db #0x00	; 0
      0001BC 00                     491 	.db #0x00	; 0
      0001BD 00                     492 	.db #0x00	; 0
      0001BE 00                     493 	.db #0x00	; 0
      0001BF 00                     494 	.db #0x00	; 0
      0001C0 00                     495 	.db #0x00	; 0
      0001C1 00                     496 	.db #0x00	; 0
      0001C2 00                     497 	.db #0x00	; 0
      0001C3 00                     498 	.db #0x00	; 0
      0001C4 00                     499 	.db #0x00	; 0
      0001C5 00                     500 	.db #0x00	; 0
      0001C6 00                     501 	.db #0x00	; 0
      0001C7 00                     502 	.db #0x00	; 0
      0001C8 00                     503 	.db #0x00	; 0
      0001C9 00                     504 	.db #0x00	; 0
      0001CA 00                     505 	.db #0x00	; 0
      0001CB 00                     506 	.db #0x00	; 0
      0001CC 00                     507 	.db #0x00	; 0
      0001CD 00                     508 	.db #0x00	; 0
      0001CE 00                     509 	.db #0x00	; 0
      0001CF 00                     510 	.db #0x00	; 0
      0001D0 00                     511 	.db #0x00	; 0
      0001D1 00                     512 	.db #0x00	; 0
      0001D2 00                     513 	.db #0x00	; 0
      0001D3 00                     514 	.db #0x00	; 0
      0001D4 00                     515 	.db #0x00	; 0
      0001D5 00                     516 	.db #0x00	; 0
      0001D6 00                     517 	.db #0x00	; 0
      0001D7 00                     518 	.db #0x00	; 0
      0001D8 00                     519 	.db #0x00	; 0
      0001D9 00                     520 	.db #0x00	; 0
      0001DA 00                     521 	.db #0x00	; 0
      0001DB 00                     522 	.db #0x00	; 0
      0001DC 00                     523 	.db #0x00	; 0
      0001DD 00                     524 	.db #0x00	; 0
      0001DE 00                     525 	.db #0x00	; 0
      0001DF 00                     526 	.db #0x00	; 0
      0001E0 00                     527 	.db #0x00	; 0
      0001E1 00                     528 	.db #0x00	; 0
      0001E2 00                     529 	.db #0x00	; 0
      0001E3 00                     530 	.db #0x00	; 0
      0001E4 00                     531 	.db #0x00	; 0
      0001E5 00                     532 	.db #0x00	; 0
      0001E6 00                     533 	.db #0x00	; 0
      0001E7 00                     534 	.db #0x00	; 0
      0001E8 00                     535 	.db #0x00	; 0
      0001E9 00                     536 	.db #0x00	; 0
      0001EA 00                     537 	.db #0x00	; 0
      0001EB 00                     538 	.db #0x00	; 0
      0001EC 00                     539 	.db #0x00	; 0
      0001ED 00                     540 	.db #0x00	; 0
      0001EE 00                     541 	.db #0x00	; 0
      0001EF 00                     542 	.db #0x00	; 0
      0001F0 00                     543 	.db #0x00	; 0
      0001F1 00                     544 	.db #0x00	; 0
      0001F2 00                     545 	.db #0x00	; 0
      0001F3 00                     546 	.db #0x00	; 0
      0001F4 00                     547 	.db #0x00	; 0
      0001F5 00                     548 	.db #0x00	; 0
      0001F6 00                     549 	.db #0x00	; 0
      0001F7 00                     550 	.db #0x00	; 0
      0001F8 00                     551 	.db #0x00	; 0
      0001F9 00                     552 	.db #0x00	; 0
      0001FA 00                     553 	.db #0x00	; 0
      0001FB 00                     554 	.db #0x00	; 0
      0001FC 00                     555 	.db #0x00	; 0
      0001FD 00                     556 	.db #0x00	; 0
      0001FE 00                     557 	.db #0x00	; 0
      0001FF 00                     558 	.db #0x00	; 0
      000200 00                     559 	.db #0x00	; 0
      000201 00                     560 	.db #0x00	; 0
      000202 00                     561 	.db #0x00	; 0
      000203 00                     562 	.db #0x00	; 0
      000204 00                     563 	.db #0x00	; 0
      000205 00                     564 	.db #0x00	; 0
      000206 00                     565 	.db #0x00	; 0
      000207 00                     566 	.db #0x00	; 0
      000208 00                     567 	.db #0x00	; 0
      000209 00                     568 	.db #0x00	; 0
      00020A 00                     569 	.db #0x00	; 0
      00020B 00                     570 	.db #0x00	; 0
      00020C 00                     571 	.db #0x00	; 0
      00020D 00                     572 	.db #0x00	; 0
      00020E 00                     573 	.db #0x00	; 0
      00020F 00                     574 	.db #0x00	; 0
      000210 00                     575 	.db #0x00	; 0
      000211 00                     576 	.db #0x00	; 0
      000212 00                     577 	.db #0x00	; 0
      000213 00                     578 	.db #0x00	; 0
      000214 00                     579 	.db #0x00	; 0
      000215 00                     580 	.db #0x00	; 0
      000216 00                     581 	.db #0x00	; 0
      000217 00                     582 	.db #0x00	; 0
      000218 00                     583 	.db #0x00	; 0
      000219 00                     584 	.db #0x00	; 0
      00021A 00                     585 	.db #0x00	; 0
      00021B 00                     586 	.db #0x00	; 0
      00021C 00                     587 	.db #0x00	; 0
      00021D 00                     588 	.db #0x00	; 0
      00021E 00                     589 	.db #0x00	; 0
      00021F 00                     590 	.db #0x00	; 0
      000220 00                     591 	.db #0x00	; 0
      000221 00                     592 	.db #0x00	; 0
      000222 00                     593 	.db #0x00	; 0
      000223 00                     594 	.db #0x00	; 0
      000224 00                     595 	.db #0x00	; 0
      000225 00                     596 	.db #0x00	; 0
      000226 00                     597 	.db #0x00	; 0
      000227 00                     598 	.db #0x00	; 0
      000228 00                     599 	.db #0x00	; 0
      000229 00                     600 	.db #0x00	; 0
      00022A 00                     601 	.db #0x00	; 0
      00022B 00                     602 	.db #0x00	; 0
      00022C 00                     603 	.db #0x00	; 0
      00022D 00                     604 	.db #0x00	; 0
      00022E 00                     605 	.db #0x00	; 0
      00022F 00                     606 	.db #0x00	; 0
      000230 00                     607 	.db #0x00	; 0
      000231 00                     608 	.db #0x00	; 0
      000232 00                     609 	.db #0x00	; 0
      000233 00                     610 	.db #0x00	; 0
      000234 00                     611 	.db #0x00	; 0
      000235 00                     612 	.db #0x00	; 0
      000236 00                     613 	.db #0x00	; 0
      000237 00                     614 	.db #0x00	; 0
      000238 00                     615 	.db #0x00	; 0
      000239 00                     616 	.db #0x00	; 0
      00023A 00                     617 	.db #0x00	; 0
      00023B 00                     618 	.db #0x00	; 0
      00023C 00                     619 	.db #0x00	; 0
      00023D 00                     620 	.db #0x00	; 0
      00023E 00                     621 	.db #0x00	; 0
      00023F 00                     622 	.db #0x00	; 0
      000240 00                     623 	.db #0x00	; 0
      000241 00                     624 	.db #0x00	; 0
      000242 00                     625 	.db #0x00	; 0
      000243 00                     626 	.db #0x00	; 0
      000244 00                     627 	.db #0x00	; 0
      000245 00                     628 	.db #0x00	; 0
      000246 00                     629 	.db #0x00	; 0
      000247 00                     630 	.db #0x00	; 0
      000248 00                     631 	.db #0x00	; 0
      000249 00                     632 	.db #0x00	; 0
      00024A 00                     633 	.db #0x00	; 0
      00024B 00                     634 	.db #0x00	; 0
      00024C 00                     635 	.db #0x00	; 0
      00024D 00                     636 	.db #0x00	; 0
      00024E 00                     637 	.db #0x00	; 0
      00024F 00                     638 	.db #0x00	; 0
      000250 00                     639 	.db #0x00	; 0
      000251                        640 _k_background_tiles:
      000251 FF                     641 	.db #0xff	; 255
      000252 00                     642 	.db #0x00	; 0
      000253 80                     643 	.db #0x80	; 128
      000254 00                     644 	.db #0x00	; 0
      000255 80                     645 	.db #0x80	; 128
      000256 00                     646 	.db #0x00	; 0
      000257 80                     647 	.db #0x80	; 128
      000258 00                     648 	.db #0x00	; 0
      000259 80                     649 	.db #0x80	; 128
      00025A 00                     650 	.db #0x00	; 0
      00025B 80                     651 	.db #0x80	; 128
      00025C 00                     652 	.db #0x00	; 0
      00025D 80                     653 	.db #0x80	; 128
      00025E 00                     654 	.db #0x00	; 0
      00025F 80                     655 	.db #0x80	; 128
      000260 00                     656 	.db #0x00	; 0
      000261 FF                     657 	.db #0xff	; 255
      000262 00                     658 	.db #0x00	; 0
      000263 80                     659 	.db #0x80	; 128
      000264 00                     660 	.db #0x00	; 0
      000265 80                     661 	.db #0x80	; 128
      000266 00                     662 	.db #0x00	; 0
      000267 80                     663 	.db #0x80	; 128
      000268 00                     664 	.db #0x00	; 0
      000269 80                     665 	.db #0x80	; 128
      00026A 00                     666 	.db #0x00	; 0
      00026B 80                     667 	.db #0x80	; 128
      00026C 00                     668 	.db #0x00	; 0
      00026D 80                     669 	.db #0x80	; 128
      00026E 00                     670 	.db #0x00	; 0
      00026F 80                     671 	.db #0x80	; 128
      000270 00                     672 	.db #0x00	; 0
      000271                        673 _SCREEN_MIN_X:
      000271 08                     674 	.db #0x08	; 8
      000272                        675 _SCREEN_MIN_Y:
      000272 10                     676 	.db #0x10	; 16
      000273                        677 _SCREEN_WIDTH:
      000273 A0                     678 	.db #0xa0	; 160
      000274                        679 _SCREEN_HEIGHT:
      000274 90                     680 	.db #0x90	; 144
      000275                        681 _SPRITE_TILE_WIDTH:
      000275 08                     682 	.db #0x08	; 8
      000276                        683 _SPRITE_TILE_HEIGHT:
      000276 08                     684 	.db #0x08	; 8
                                    685 ;input.h:58: uint8_t was_input_depressed(struct input_state* is, uint8_t button)
                                    686 ;	---------------------------------
                                    687 ; Function was_input_depressed
                                    688 ; ---------------------------------
      000277                        689 _was_input_depressed::
                                    690 ;input.h:60: return is->depressed_buttons & (1 << button);
      000277 F8 02                  691 	ldhl	sp,	#2
      000279 2A                     692 	ld	a, (hl+)
      00027A 4F                     693 	ld	c, a
      00027B 2A                     694 	ld	a, (hl+)
      00027C 47                     695 	ld	b, a
      00027D 03                     696 	inc	bc
      00027E 03                     697 	inc	bc
      00027F 03                     698 	inc	bc
      000280 0A                     699 	ld	a, (bc)
      000281 4E                     700 	ld	c, (hl)
      000282 06 01                  701 	ld	b, #0x01
      000284 0C                     702 	inc	c
      000285 18 02                  703 	jr	00104$
      000287                        704 00103$:
      000287 CB 20                  705 	sla	b
      000289                        706 00104$:
      000289 0D                     707 	dec	c
      00028A 20 FB                  708 	jr	NZ,00103$
      00028C A0                     709 	and	a, b
      00028D 5F                     710 	ld	e, a
                                    711 ;input.h:61: }
      00028E C9                     712 	ret
                                    713 ;input.h:63: uint8_t was_input_released(struct input_state* is, uint8_t button)
                                    714 ;	---------------------------------
                                    715 ; Function was_input_released
                                    716 ; ---------------------------------
      00028F                        717 _was_input_released::
                                    718 ;input.h:65: return is->released_buttons & (1 << button);
      00028F F8 02                  719 	ldhl	sp,	#2
      000291 2A                     720 	ld	a, (hl+)
      000292 4F                     721 	ld	c, a
      000293 46                     722 	ld	b, (hl)
      000294 21 04 00               723 	ld	hl, #0x0004
      000297 09                     724 	add	hl, bc
      000298 4E                     725 	ld	c, (hl)
      000299 F8 04                  726 	ldhl	sp,	#4
      00029B 46                     727 	ld	b, (hl)
      00029C 3E 01                  728 	ld	a, #0x01
      00029E 04                     729 	inc	b
      00029F 18 01                  730 	jr	00104$
      0002A1                        731 00103$:
      0002A1 87                     732 	add	a, a
      0002A2                        733 00104$:
      0002A2 05                     734 	dec	b
      0002A3 20 FC                  735 	jr	NZ,00103$
      0002A5 A1                     736 	and	a, c
      0002A6 5F                     737 	ld	e, a
                                    738 ;input.h:66: }
      0002A7 C9                     739 	ret
                                    740 ;input.h:68: uint8_t is_input_held(struct input_state* is, uint8_t button)
                                    741 ;	---------------------------------
                                    742 ; Function is_input_held
                                    743 ; ---------------------------------
      0002A8                        744 _is_input_held::
                                    745 ;input.h:70: return is->held_buttons & (1 << button);
      0002A8 F8 02                  746 	ldhl	sp,	#2
      0002AA 2A                     747 	ld	a, (hl+)
      0002AB 4F                     748 	ld	c, a
      0002AC 2A                     749 	ld	a, (hl+)
      0002AD 47                     750 	ld	b, a
      0002AE 03                     751 	inc	bc
      0002AF 03                     752 	inc	bc
      0002B0 0A                     753 	ld	a, (bc)
      0002B1 4E                     754 	ld	c, (hl)
      0002B2 06 01                  755 	ld	b, #0x01
      0002B4 0C                     756 	inc	c
      0002B5 18 02                  757 	jr	00104$
      0002B7                        758 00103$:
      0002B7 CB 20                  759 	sla	b
      0002B9                        760 00104$:
      0002B9 0D                     761 	dec	c
      0002BA 20 FB                  762 	jr	NZ,00103$
      0002BC A0                     763 	and	a, b
      0002BD 5F                     764 	ld	e, a
                                    765 ;input.h:71: }
      0002BE C9                     766 	ret
                                    767 ;utility.h:6: void wait_vbls_done(uint8_t num_loops)
                                    768 ;	---------------------------------
                                    769 ; Function wait_vbls_done
                                    770 ; ---------------------------------
      0002BF                        771 _wait_vbls_done::
                                    772 ;utility.h:8: for (uint8_t loop_counter = 0; loop_counter < num_loops; ++loop_counter)
      0002BF 0E 00                  773 	ld	c, #0x00
      0002C1                        774 00103$:
      0002C1 79                     775 	ld	a, c
      0002C2 F8 02                  776 	ldhl	sp,	#2
      0002C4 96                     777 	sub	a, (hl)
      0002C5 D0                     778 	ret	NC
                                    779 ;utility.h:10: wait_vbl_done();
      0002C6 CDr00r00               780 	call	_wait_vbl_done
                                    781 ;utility.h:8: for (uint8_t loop_counter = 0; loop_counter < num_loops; ++loop_counter)
      0002C9 0C                     782 	inc	c
                                    783 ;utility.h:12: }
      0002CA 18 F5                  784 	jr	00103$
                                    785 ;main.c:55: void update_cursor_sprite(uint8_t tile_index)
                                    786 ;	---------------------------------
                                    787 ; Function update_cursor_sprite
                                    788 ; ---------------------------------
      0002CC                        789 _update_cursor_sprite::
                                    790 ;main.c:57: set_sprite_tile(k_cursor_sprite_index, tile_index);
      0002CC F8 02                  791 	ldhl	sp,	#2
      0002CE 4E                     792 	ld	c, (hl)
      0002CF 21rE6r02               793 	ld	hl, #_k_cursor_sprite_index
                                    794 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0002D2 6E                     795 	ld	l, (hl)
                                    796 ;	spillPairReg hl
                                    797 ;	spillPairReg hl
      0002D3 26 00                  798 	ld	h, #0x00
                                    799 ;	spillPairReg hl
                                    800 ;	spillPairReg hl
      0002D5 29                     801 	add	hl, hl
      0002D6 29                     802 	add	hl, hl
      0002D7 11r00r00               803 	ld	de, #_shadow_OAM
      0002DA 19                     804 	add	hl, de
      0002DB 23                     805 	inc	hl
      0002DC 23                     806 	inc	hl
      0002DD 71                     807 	ld	(hl), c
                                    808 ;main.c:57: set_sprite_tile(k_cursor_sprite_index, tile_index);
                                    809 ;main.c:58: }
      0002DE C9                     810 	ret
      0002DF                        811 _k_execution_state_active_mask:
      0002DF 02                     812 	.db #0x02	; 2
      0002E0                        813 _k_tile_is_alive_mask:
      0002E0 01                     814 	.db #0x01	; 1
      0002E1                        815 _k_tile_was_alive_mask:
      0002E1 02                     816 	.db #0x02	; 2
      0002E2                        817 _k_empty_tile_index:
      0002E2 00                     818 	.db #0x00	; 0
      0002E3                        819 _k_live_tile_index:
      0002E3 01                     820 	.db #0x01	; 1
      0002E4                        821 _k_cursor_empty_tile_index:
      0002E4 02                     822 	.db #0x02	; 2
      0002E5                        823 _k_cursor_live_tile_index:
      0002E5 03                     824 	.db #0x03	; 3
      0002E6                        825 _k_cursor_sprite_index:
      0002E6 00                     826 	.db #0x00	; 0
                                    827 ;main.c:60: void update_cursor_position(uint8_t tile_x, uint8_t tile_y)
                                    828 ;	---------------------------------
                                    829 ; Function update_cursor_position
                                    830 ; ---------------------------------
      0002E7                        831 _update_cursor_position::
                                    832 ;main.c:64: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
      0002E7 FAr76r02               833 	ld	a, (#_SPRITE_TILE_HEIGHT)
      0002EA F5                     834 	push	af
      0002EB 33                     835 	inc	sp
      0002EC F8 04                  836 	ldhl	sp,	#4
      0002EE 7E                     837 	ld	a, (hl)
      0002EF F5                     838 	push	af
      0002F0 33                     839 	inc	sp
      0002F1 CDr00r00               840 	call	__muluchar
      0002F4 E1                     841 	pop	hl
      0002F5 FAr72r02               842 	ld	a, (#_SCREEN_MIN_Y)
      0002F8 83                     843 	add	a, e
      0002F9 47                     844 	ld	b, a
                                    845 ;main.c:63: SCREEN_MIN_X + (tile_x * SPRITE_TILE_WIDTH),
      0002FA FAr75r02               846 	ld	a, (#_SPRITE_TILE_WIDTH)
      0002FD C5                     847 	push	bc
      0002FE F5                     848 	push	af
      0002FF 33                     849 	inc	sp
      000300 F8 05                  850 	ldhl	sp,	#5
      000302 7E                     851 	ld	a, (hl)
      000303 F5                     852 	push	af
      000304 33                     853 	inc	sp
      000305 CDr00r00               854 	call	__muluchar
      000308 E1                     855 	pop	hl
      000309 C1                     856 	pop	bc
      00030A FAr71r02               857 	ld	a, (#_SCREEN_MIN_X)
      00030D 83                     858 	add	a, e
      00030E 21rE6r02               859 	ld	hl, #_k_cursor_sprite_index
                                    860 ;main.c:64: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
                                    861 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000311 6E                     862 	ld	l, (hl)
      000312 4F                     863 	ld	c, a
                                    864 ;	spillPairReg hl
                                    865 ;	spillPairReg hl
      000313 26 00                  866 	ld	h, #0x00
                                    867 ;	spillPairReg hl
                                    868 ;	spillPairReg hl
      000315 29                     869 	add	hl, hl
      000316 29                     870 	add	hl, hl
      000317 11r00r00               871 	ld	de, #_shadow_OAM
      00031A 19                     872 	add	hl, de
                                    873 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00031B 78                     874 	ld	a, b
      00031C 22                     875 	ld	(hl+), a
      00031D 71                     876 	ld	(hl), c
                                    877 ;main.c:64: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
                                    878 ;main.c:65: }
      00031E C9                     879 	ret
                                    880 ;main.c:67: void update_tile_sprite(uint8_t sprite_index, uint8_t tile_index)
                                    881 ;	---------------------------------
                                    882 ; Function update_tile_sprite
                                    883 ; ---------------------------------
      00031F                        884 _update_tile_sprite::
                                    885 ;main.c:69: set_sprite_tile(sprite_index, tile_index);
      00031F F8 03                  886 	ldhl	sp,	#3
      000321 3A                     887 	ld	a, (hl-)
      000322 4F                     888 	ld	c, a
                                    889 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000323 6E                     890 	ld	l, (hl)
      000324 11r00r00               891 	ld	de, #_shadow_OAM+0
                                    892 ;	spillPairReg hl
                                    893 ;	spillPairReg hl
      000327 26 00                  894 	ld	h, #0x00
                                    895 ;	spillPairReg hl
                                    896 ;	spillPairReg hl
      000329 29                     897 	add	hl, hl
      00032A 29                     898 	add	hl, hl
      00032B 19                     899 	add	hl, de
      00032C 23                     900 	inc	hl
      00032D 23                     901 	inc	hl
      00032E 71                     902 	ld	(hl), c
                                    903 ;main.c:69: set_sprite_tile(sprite_index, tile_index);
                                    904 ;main.c:70: }
      00032F C9                     905 	ret
                                    906 ;main.c:72: void update_tile_position(uint8_t tile_index, uint8_t tile_x, uint8_t tile_y)
                                    907 ;	---------------------------------
                                    908 ; Function update_tile_position
                                    909 ; ---------------------------------
      000330                        910 _update_tile_position::
                                    911 ;main.c:76: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
      000330 FAr76r02               912 	ld	a, (#_SPRITE_TILE_HEIGHT)
      000333 F5                     913 	push	af
      000334 33                     914 	inc	sp
      000335 F8 05                  915 	ldhl	sp,	#5
      000337 7E                     916 	ld	a, (hl)
      000338 F5                     917 	push	af
      000339 33                     918 	inc	sp
      00033A CDr00r00               919 	call	__muluchar
      00033D E1                     920 	pop	hl
      00033E FAr72r02               921 	ld	a, (#_SCREEN_MIN_Y)
      000341 83                     922 	add	a, e
      000342 47                     923 	ld	b, a
                                    924 ;main.c:75: SCREEN_MIN_X + (tile_x * SPRITE_TILE_WIDTH),
      000343 FAr75r02               925 	ld	a, (#_SPRITE_TILE_WIDTH)
      000346 C5                     926 	push	bc
      000347 F5                     927 	push	af
      000348 33                     928 	inc	sp
      000349 F8 06                  929 	ldhl	sp,	#6
      00034B 7E                     930 	ld	a, (hl)
      00034C F5                     931 	push	af
      00034D 33                     932 	inc	sp
      00034E CDr00r00               933 	call	__muluchar
      000351 E1                     934 	pop	hl
      000352 C1                     935 	pop	bc
      000353 FAr71r02               936 	ld	a, (#_SCREEN_MIN_X)
      000356 83                     937 	add	a, e
      000357 F8 02                  938 	ldhl	sp,	#2
                                    939 ;main.c:76: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
                                    940 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000359 6E                     941 	ld	l, (hl)
      00035A 4F                     942 	ld	c, a
                                    943 ;	spillPairReg hl
                                    944 ;	spillPairReg hl
      00035B 26 00                  945 	ld	h, #0x00
                                    946 ;	spillPairReg hl
                                    947 ;	spillPairReg hl
      00035D 29                     948 	add	hl, hl
      00035E 29                     949 	add	hl, hl
      00035F 11r00r00               950 	ld	de, #_shadow_OAM
      000362 19                     951 	add	hl, de
                                    952 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000363 78                     953 	ld	a, b
      000364 22                     954 	ld	(hl+), a
      000365 71                     955 	ld	(hl), c
                                    956 ;main.c:76: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
                                    957 ;main.c:77: }
      000366 C9                     958 	ret
                                    959 ;main.c:81: int main()
                                    960 ;	---------------------------------
                                    961 ; Function main
                                    962 ; ---------------------------------
      000367                        963 _main::
      000367 21 DB FC               964 	ld	hl, #-805
      00036A 39                     965 	add	hl, sp
      00036B F9                     966 	ld	sp, hl
                                    967 ;main.c:85: input_state.previous_state = 0x00;
      00036C F8 00                  968 	ldhl	sp,	#0
      00036E 4D                     969 	ld	c, l
      00036F 44                     970 	ld	b, h
      000370 AF                     971 	xor	a, a
      000371 02                     972 	ld	(bc), a
                                    973 ;main.c:86: input_state.current_state = 0x00;
      000372 F8 00                  974 	ldhl	sp,	#0
      000374 7D                     975 	ld	a, l
      000375 54                     976 	ld	d, h
      000376 21 FE 02               977 	ld	hl, #766
      000379 39                     978 	add	hl, sp
      00037A 22                     979 	ld	(hl+), a
      00037B 7A                     980 	ld	a, d
      00037C 32                     981 	ld	(hl-), a
      00037D 2A                     982 	ld	a, (hl+)
      00037E 4F                     983 	ld	c, a
                                    984 ;main.c:87: input_state.held_buttons = 0x00;
      00037F 3A                     985 	ld	a, (hl-)
      000380 47                     986 	ld	b, a
      000381 03                     987 	inc	bc
      000382 AF                     988 	xor	a, a
      000383 02                     989 	ld	(bc), a
      000384 2A                     990 	ld	a, (hl+)
      000385 4F                     991 	ld	c, a
                                    992 ;main.c:88: input_state.depressed_buttons = 0x00;
      000386 3A                     993 	ld	a, (hl-)
      000387 47                     994 	ld	b, a
      000388 03                     995 	inc	bc
      000389 03                     996 	inc	bc
      00038A AF                     997 	xor	a, a
      00038B 02                     998 	ld	(bc), a
      00038C 2A                     999 	ld	a, (hl+)
      00038D 4F                    1000 	ld	c, a
                                   1001 ;main.c:89: input_state.released_buttons = 0x00;
      00038E 3A                    1002 	ld	a, (hl-)
      00038F 47                    1003 	ld	b, a
      000390 03                    1004 	inc	bc
      000391 03                    1005 	inc	bc
      000392 03                    1006 	inc	bc
      000393 AF                    1007 	xor	a, a
      000394 02                    1008 	ld	(bc), a
      000395 2A                    1009 	ld	a, (hl+)
      000396 5F                    1010 	ld	e, a
      000397 56                    1011 	ld	d, (hl)
      000398 21 04 00              1012 	ld	hl, #0x0004
      00039B 19                    1013 	add	hl, de
      00039C 4D                    1014 	ld	c, l
      00039D 44                    1015 	ld	b, h
      00039E AF                    1016 	xor	a, a
      00039F 02                    1017 	ld	(bc), a
                                   1018 ;main.c:92: uint8_t execution_state = 0x00;
      0003A0 21 21 03              1019 	ld	hl, #801
      0003A3 39                    1020 	add	hl, sp
      0003A4 36 00                 1021 	ld	(hl), #0x00
                                   1022 ;main.c:95: uint8_t cursor_tile_x = 10;
      0003A6 21 00 03              1023 	ld	hl, #768
      0003A9 39                    1024 	add	hl, sp
                                   1025 ;main.c:96: uint8_t cursor_tile_y = 9;
      0003AA 3E 0A                 1026 	ld	a, #0x0a
      0003AC 22                    1027 	ld	(hl+), a
      0003AD 36 09                 1028 	ld	(hl), #0x09
                                   1029 ;main.c:104: uint8_t next_available_sprite_index = 0;
      0003AF 21 22 03              1030 	ld	hl, #802
      0003B2 39                    1031 	add	hl, sp
      0003B3 36 00                 1032 	ld	(hl), #0x00
                                   1033 ;main.c:106: for (uint8_t i = 0; i < 39; ++i)
      0003B5 21 D5 02              1034 	ld	hl, #725
      0003B8 39                    1035 	add	hl, sp
      0003B9 7D                    1036 	ld	a, l
      0003BA 54                    1037 	ld	d, h
      0003BB 21 02 03              1038 	ld	hl, #770
      0003BE 39                    1039 	add	hl, sp
      0003BF 22                    1040 	ld	(hl+), a
      0003C0 72                    1041 	ld	(hl), d
      0003C1 1E 00                 1042 	ld	e, #0x00
      0003C3                       1043 00173$:
      0003C3 7B                    1044 	ld	a, e
      0003C4 D6 27                 1045 	sub	a, #0x27
      0003C6 30 2F                 1046 	jr	NC, 00101$
                                   1047 ;main.c:108: available_sprites[i] = i + 1;
      0003C8 D5                    1048 	push	de
      0003C9 16 00                 1049 	ld	d, #0x00
      0003CB 21 04 03              1050 	ld	hl, #772
      0003CE 39                    1051 	add	hl, sp
      0003CF 2A                    1052 	ld	a,	(hl+)
      0003D0 66                    1053 	ld	h, (hl)
      0003D1 6F                    1054 	ld	l, a
      0003D2 19                    1055 	add	hl, de
      0003D3 D1                    1056 	pop	de
      0003D4 4D                    1057 	ld	c, l
      0003D5 44                    1058 	ld	b, h
      0003D6 53                    1059 	ld	d, e
      0003D7 14                    1060 	inc	d
      0003D8 7A                    1061 	ld	a, d
      0003D9 02                    1062 	ld	(bc), a
                                   1063 ;main.c:109: update_tile_sprite(i + 1, k_live_tile_index);
      0003DA FArE3r02              1064 	ld	a, (#_k_live_tile_index)
      0003DD D5                    1065 	push	de
      0003DE F5                    1066 	push	af
      0003DF 33                    1067 	inc	sp
      0003E0 D5                    1068 	push	de
      0003E1 33                    1069 	inc	sp
      0003E2 CDr1Fr03              1070 	call	_update_tile_sprite
      0003E5 E1                    1071 	pop	hl
      0003E6 D1                    1072 	pop	de
                                   1073 ;main.c:110: update_tile_position(i + 1, 0, 19);
      0003E7 D5                    1074 	push	de
      0003E8 21 00 13              1075 	ld	hl, #0x1300
      0003EB E5                    1076 	push	hl
      0003EC D5                    1077 	push	de
      0003ED 33                    1078 	inc	sp
      0003EE CDr30r03              1079 	call	_update_tile_position
      0003F1 E8 03                 1080 	add	sp, #3
      0003F3 D1                    1081 	pop	de
                                   1082 ;main.c:106: for (uint8_t i = 0; i < 39; ++i)
      0003F4 1C                    1083 	inc	e
      0003F5 18 CC                 1084 	jr	00173$
      0003F7                       1085 00101$:
                                   1086 ;main.c:113: for (uint8_t x = 0; x < 20; ++x)
      0003F7 21 FC 02              1087 	ld	hl, #764
      0003FA 39                    1088 	add	hl, sp
      0003FB 7D                    1089 	ld	a, l
      0003FC 54                    1090 	ld	d, h
      0003FD 21 19 03              1091 	ld	hl, #793
      000400 39                    1092 	add	hl, sp
      000401 22                    1093 	ld	(hl+), a
      000402 7A                    1094 	ld	a, d
      000403 32                    1095 	ld	(hl-), a
      000404 2A                    1096 	ld	a, (hl+)
      000405 23                    1097 	inc	hl
      000406 32                    1098 	ld	(hl-), a
      000407 2A                    1099 	ld	a, (hl+)
      000408 23                    1100 	inc	hl
      000409 77                    1101 	ld	(hl), a
      00040A F8 05                 1102 	ldhl	sp,	#5
      00040C 7D                    1103 	ld	a, l
      00040D 54                    1104 	ld	d, h
      00040E 21 04 03              1105 	ld	hl, #772
      000411 39                    1106 	add	hl, sp
      000412 22                    1107 	ld	(hl+), a
      000413 72                    1108 	ld	(hl), d
      000414 21 23 03              1109 	ld	hl, #803
      000417 39                    1110 	add	hl, sp
      000418 36 00                 1111 	ld	(hl), #0x00
      00041A                       1112 00179$:
      00041A 21 23 03              1113 	ld	hl, #803
      00041D 39                    1114 	add	hl, sp
      00041E 7E                    1115 	ld	a, (hl)
      00041F D6 14                 1116 	sub	a, #0x14
      000421 D2rA3r04              1117 	jp	NC, 00103$
                                   1118 ;main.c:115: for (uint8_t y = 0; y < 18; ++y)
      000424 4E                    1119 	ld	c, (hl)
      000425 06 00                 1120 	ld	b, #0x00
      000427 69                    1121 	ld	l, c
      000428 60                    1122 	ld	h, b
      000429 29                    1123 	add	hl, hl
      00042A 29                    1124 	add	hl, hl
      00042B 29                    1125 	add	hl, hl
      00042C 09                    1126 	add	hl, bc
      00042D 29                    1127 	add	hl, hl
      00042E 29                    1128 	add	hl, hl
      00042F 4D                    1129 	ld	c, l
      000430 44                    1130 	ld	b, h
      000431 21 04 03              1131 	ld	hl, #772
      000434 39                    1132 	add	hl, sp
      000435 2A                    1133 	ld	a,	(hl+)
      000436 66                    1134 	ld	h, (hl)
      000437 6F                    1135 	ld	l, a
      000438 09                    1136 	add	hl, bc
      000439 E5                    1137 	push	hl
      00043A 7D                    1138 	ld	a, l
      00043B 21 1F 03              1139 	ld	hl, #799
      00043E 39                    1140 	add	hl, sp
      00043F 77                    1141 	ld	(hl), a
      000440 E1                    1142 	pop	hl
      000441 7C                    1143 	ld	a, h
      000442 21 1E 03              1144 	ld	hl, #798
      000445 39                    1145 	add	hl, sp
      000446 77                    1146 	ld	(hl), a
      000447 21 24 03              1147 	ld	hl, #804
      00044A 39                    1148 	add	hl, sp
      00044B 36 00                 1149 	ld	(hl), #0x00
      00044D                       1150 00176$:
      00044D 21 24 03              1151 	ld	hl, #804
      000450 39                    1152 	add	hl, sp
      000451 7E                    1153 	ld	a, (hl)
      000452 D6 12                 1154 	sub	a, #0x12
      000454 30 45                 1155 	jr	NC, 00180$
                                   1156 ;main.c:118: tile_data.sprite_index = 0x00;
      000456 21 FC 02              1157 	ld	hl, #764
      000459 39                    1158 	add	hl, sp
      00045A 7D                    1159 	ld	a, l
      00045B 54                    1160 	ld	d, h
      00045C 21 1F 03              1161 	ld	hl, #799
      00045F 39                    1162 	add	hl, sp
      000460 22                    1163 	ld	(hl+), a
      000461 7A                    1164 	ld	a, d
      000462 32                    1165 	ld	(hl-), a
      000463 2A                    1166 	ld	a,	(hl+)
      000464 66                    1167 	ld	h, (hl)
      000465 6F                    1168 	ld	l, a
      000466 36 00                 1169 	ld	(hl), #0x00
                                   1170 ;main.c:119: tile_data.tile_flags = 0x00;
      000468 21 19 03              1171 	ld	hl, #793
      00046B 39                    1172 	add	hl, sp
      00046C 2A                    1173 	ld	a, (hl+)
      00046D 4F                    1174 	ld	c, a
                                   1175 ;main.c:120: board[x][y] = tile_data;
      00046E 2A                    1176 	ld	a, (hl+)
      00046F 47                    1177 	ld	b, a
      000470 03                    1178 	inc	bc
      000471 AF                    1179 	xor	a, a
      000472 02                    1180 	ld	(bc), a
      000473 2A                    1181 	ld	a, (hl+)
      000474 4F                    1182 	ld	c, a
      000475 46                    1183 	ld	b, (hl)
      000476 21 24 03              1184 	ld	hl, #804
      000479 39                    1185 	add	hl, sp
      00047A 7E                    1186 	ld	a, (hl)
      00047B 87                    1187 	add	a, a
      00047C 5F                    1188 	ld	e, a
      00047D 16 00                 1189 	ld	d, #0x00
      00047F 21 1D 03              1190 	ld	hl, #797
      000482 39                    1191 	add	hl, sp
      000483 2A                    1192 	ld	a,	(hl+)
      000484 66                    1193 	ld	h, (hl)
      000485 6F                    1194 	ld	l, a
      000486 19                    1195 	add	hl, de
      000487 5D                    1196 	ld	e, l
      000488 54                    1197 	ld	d, h
      000489 21 02 00              1198 	ld	hl, #0x0002
      00048C E5                    1199 	push	hl
      00048D C5                    1200 	push	bc
      00048E D5                    1201 	push	de
      00048F CDr00r00              1202 	call	___memcpy
      000492 E8 06                 1203 	add	sp, #6
                                   1204 ;main.c:115: for (uint8_t y = 0; y < 18; ++y)
      000494 21 24 03              1205 	ld	hl, #804
      000497 39                    1206 	add	hl, sp
      000498 34                    1207 	inc	(hl)
      000499 18 B2                 1208 	jr	00176$
      00049B                       1209 00180$:
                                   1210 ;main.c:113: for (uint8_t x = 0; x < 20; ++x)
      00049B 21 23 03              1211 	ld	hl, #803
      00049E 39                    1212 	add	hl, sp
      00049F 34                    1213 	inc	(hl)
      0004A0 C3r1Ar04              1214 	jp	00179$
      0004A3                       1215 00103$:
                                   1216 ;main.c:125: set_sprite_data(0, 3, k_sprites);
      0004A3 11r00r00              1217 	ld	de, #_k_sprites
      0004A6 D5                    1218 	push	de
      0004A7 21 00 03              1219 	ld	hl, #0x300
      0004AA E5                    1220 	push	hl
      0004AB CDr00r00              1221 	call	_set_sprite_data
      0004AE E8 04                 1222 	add	sp, #4
                                   1223 ;main.c:126: set_bkg_data(0, 2, k_background_tiles);
      0004B0 11r51r02              1224 	ld	de, #_k_background_tiles
      0004B3 D5                    1225 	push	de
      0004B4 21 00 02              1226 	ld	hl, #0x200
      0004B7 E5                    1227 	push	hl
      0004B8 CDr00r00              1228 	call	_set_bkg_data
      0004BB E8 04                 1229 	add	sp, #4
                                   1230 ;main.c:129: set_bkg_tiles(0, 0, 20, 18, k_background_map);
      0004BD 11rE9r00              1231 	ld	de, #_k_background_map
      0004C0 D5                    1232 	push	de
      0004C1 21 14 12              1233 	ld	hl, #0x1214
      0004C4 E5                    1234 	push	hl
      0004C5 AF                    1235 	xor	a, a
      0004C6 0F                    1236 	rrca
      0004C7 F5                    1237 	push	af
      0004C8 CDr00r00              1238 	call	_set_bkg_tiles
      0004CB E8 06                 1239 	add	sp, #6
                                   1240 ;main.c:132: update_cursor_sprite(k_cursor_empty_tile_index);
      0004CD FArE4r02              1241 	ld	a, (#_k_cursor_empty_tile_index)
      0004D0 F5                    1242 	push	af
      0004D1 33                    1243 	inc	sp
      0004D2 CDrCCr02              1244 	call	_update_cursor_sprite
      0004D5 33                    1245 	inc	sp
                                   1246 ;main.c:133: update_cursor_position(cursor_tile_x, cursor_tile_y);
      0004D6 21 0A 09              1247 	ld	hl, #0x90a
      0004D9 E5                    1248 	push	hl
      0004DA CDrE7r02              1249 	call	_update_cursor_position
      0004DD E1                    1250 	pop	hl
                                   1251 ;main.c:135: SHOW_BKG;
      0004DE F0r00                 1252 	ldh	a, (_LCDC_REG + 0)
      0004E0 F6 01                 1253 	or	a, #0x01
      0004E2 E0r00                 1254 	ldh	(_LCDC_REG + 0), a
                                   1255 ;main.c:136: SHOW_SPRITES;
      0004E4 F0r00                 1256 	ldh	a, (_LCDC_REG + 0)
      0004E6 F6 02                 1257 	or	a, #0x02
      0004E8 E0r00                 1258 	ldh	(_LCDC_REG + 0), a
                                   1259 ;main.c:137: DISPLAY_ON;
      0004EA F0r00                 1260 	ldh	a, (_LCDC_REG + 0)
      0004EC F6 80                 1261 	or	a, #0x80
      0004EE E0r00                 1262 	ldh	(_LCDC_REG + 0), a
                                   1263 ;main.c:139: while (1)
      0004F0                       1264 00170$:
                                   1265 ;main.c:142: update_input_state(&input_state, joypad());
      0004F0 CDr00r00              1266 	call	_joypad
      0004F3 7B                    1267 	ld	a, e
      0004F4 21 FE 02              1268 	ld	hl, #766
      0004F7 39                    1269 	add	hl, sp
      0004F8 4E                    1270 	ld	c, (hl)
      0004F9 23                    1271 	inc	hl
      0004FA 46                    1272 	ld	b, (hl)
      0004FB F5                    1273 	push	af
      0004FC 33                    1274 	inc	sp
      0004FD C5                    1275 	push	bc
      0004FE CDr00r00              1276 	call	_update_input_state
      000501 E8 03                 1277 	add	sp, #3
                                   1278 ;main.c:145: if (was_input_released(&input_state, btn_start))
      000503 21 FE 02              1279 	ld	hl, #766
      000506 39                    1280 	add	hl, sp
      000507 2A                    1281 	ld	a, (hl+)
      000508 4F                    1282 	ld	c, a
      000509 46                    1283 	ld	b, (hl)
      00050A 3E 06                 1284 	ld	a, #0x06
      00050C F5                    1285 	push	af
      00050D 33                    1286 	inc	sp
      00050E C5                    1287 	push	bc
      00050F CDr8Fr02              1288 	call	_was_input_released
      000512 E8 03                 1289 	add	sp, #3
      000514 7B                    1290 	ld	a, e
      000515 B7                    1291 	or	a, a
      000516 28 1E                 1292 	jr	Z, 00105$
                                   1293 ;main.c:147: execution_state ^= k_execution_state_active_mask;
      000518 21rDFr02              1294 	ld	hl, #_k_execution_state_active_mask
      00051B 4E                    1295 	ld	c, (hl)
      00051C 21 21 03              1296 	ld	hl, #801
      00051F 39                    1297 	add	hl, sp
      000520 7E                    1298 	ld	a, (hl)
      000521 A9                    1299 	xor	a, c
      000522 77                    1300 	ld	(hl), a
                                   1301 ;main.c:150: (execution_state & k_execution_state_active_mask) == k_execution_state_active_mask
      000523 7E                    1302 	ld	a, (hl)
      000524 A1                    1303 	and	a, c
      000525 91                    1304 	sub	a, c
      000526 20 05                 1305 	jr	NZ, 00195$
                                   1306 ;main.c:151: ? k_empty_tile_index
      000528 FArE2r02              1307 	ld	a, (#_k_empty_tile_index)
      00052B 18 03                 1308 	jr	00196$
      00052D                       1309 00195$:
                                   1310 ;main.c:152: : k_cursor_empty_tile_index);
      00052D FArE4r02              1311 	ld	a, (#_k_cursor_empty_tile_index)
      000530                       1312 00196$:
      000530 F5                    1313 	push	af
      000531 33                    1314 	inc	sp
      000532 CDrCCr02              1315 	call	_update_cursor_sprite
      000535 33                    1316 	inc	sp
      000536                       1317 00105$:
                                   1318 ;main.c:156: if ((execution_state & k_execution_state_active_mask) == k_execution_state_active_mask)
      000536 21rDFr02              1319 	ld	hl, #_k_execution_state_active_mask
      000539 4E                    1320 	ld	c, (hl)
      00053A 21 21 03              1321 	ld	hl, #801
      00053D 39                    1322 	add	hl, sp
      00053E 7E                    1323 	ld	a, (hl)
      00053F A1                    1324 	and	a, c
      000540 91                    1325 	sub	a, c
      000541 C2r71r0A              1326 	jp	NZ,00167$
                                   1327 ;main.c:158: for (uint8_t x = 0; x < 20; ++x)
      000544 21 04 03              1328 	ld	hl, #772
      000547 39                    1329 	add	hl, sp
      000548 7E                    1330 	ld	a, (hl)
      000549 21 1D 03              1331 	ld	hl, #797
      00054C 39                    1332 	add	hl, sp
      00054D 77                    1333 	ld	(hl), a
      00054E 21 05 03              1334 	ld	hl, #773
      000551 39                    1335 	add	hl, sp
      000552 7E                    1336 	ld	a, (hl)
      000553 21 1E 03              1337 	ld	hl, #798
      000556 39                    1338 	add	hl, sp
      000557 77                    1339 	ld	(hl), a
      000558 21 24 03              1340 	ld	hl, #804
      00055B 39                    1341 	add	hl, sp
      00055C 36 00                 1342 	ld	(hl), #0x00
      00055E                       1343 00185$:
      00055E 21 24 03              1344 	ld	hl, #804
      000561 39                    1345 	add	hl, sp
      000562 7E                    1346 	ld	a, (hl)
      000563 D6 14                 1347 	sub	a, #0x14
      000565 30 5D                 1348 	jr	NC, 00107$
                                   1349 ;main.c:160: for (uint8_t y = 0; y < 18; ++y)
      000567 4E                    1350 	ld	c, (hl)
      000568 06 00                 1351 	ld	b, #0x00
      00056A 69                    1352 	ld	l, c
      00056B 60                    1353 	ld	h, b
      00056C 29                    1354 	add	hl, hl
      00056D 29                    1355 	add	hl, hl
      00056E 29                    1356 	add	hl, hl
      00056F 09                    1357 	add	hl, bc
      000570 29                    1358 	add	hl, hl
      000571 29                    1359 	add	hl, hl
      000572 4D                    1360 	ld	c, l
      000573 44                    1361 	ld	b, h
      000574 21 1D 03              1362 	ld	hl, #797
      000577 39                    1363 	add	hl, sp
      000578 2A                    1364 	ld	a,	(hl+)
      000579 66                    1365 	ld	h, (hl)
      00057A 6F                    1366 	ld	l, a
      00057B 09                    1367 	add	hl, bc
      00057C 4D                    1368 	ld	c, l
      00057D 44                    1369 	ld	b, h
      00057E 1E 00                 1370 	ld	e, #0x00
      000580                       1371 00182$:
                                   1372 ;main.c:162: uint8_t tile_flags = board[x][y].tile_flags;
      000580 7B                    1373 	ld	a,e
      000581 FE 12                 1374 	cp	a,#0x12
      000583 30 38                 1375 	jr	NC, 00186$
      000585 87                    1376 	add	a, a
      000586 21 23 03              1377 	ld	hl, #803
      000589 39                    1378 	add	hl, sp
      00058A 77                    1379 	ld	(hl), a
      00058B 6E                    1380 	ld	l, (hl)
      00058C 26 00                 1381 	ld	h, #0x00
      00058E 09                    1382 	add	hl, bc
      00058F E5                    1383 	push	hl
      000590 7D                    1384 	ld	a, l
      000591 21 21 03              1385 	ld	hl, #801
      000594 39                    1386 	add	hl, sp
      000595 77                    1387 	ld	(hl), a
      000596 E1                    1388 	pop	hl
      000597 7C                    1389 	ld	a, h
      000598 21 20 03              1390 	ld	hl, #800
      00059B 39                    1391 	add	hl, sp
      00059C 32                    1392 	ld	(hl-), a
      00059D 2A                    1393 	ld	a, (hl+)
      00059E 66                    1394 	ld	h, (hl)
                                   1395 ;	spillPairReg hl
                                   1396 ;	spillPairReg hl
      00059F 6F                    1397 	ld	l, a
                                   1398 ;	spillPairReg hl
                                   1399 ;	spillPairReg hl
      0005A0 23                    1400 	inc	hl
      0005A1 56                    1401 	ld	d, (hl)
                                   1402 ;main.c:165: tile_flags &= ~k_tile_was_alive_mask;
      0005A2 E5                    1403 	push	hl
      0005A3 FArE1r02              1404 	ld	a, (#_k_tile_was_alive_mask)
      0005A6 E1                    1405 	pop	hl
      0005A7 2F                    1406 	cpl
      0005A8 A2                    1407 	and	a, d
      0005A9 57                    1408 	ld	d, a
                                   1409 ;main.c:168: tile_flags |= ((tile_flags & k_tile_is_alive_mask) != 0x00) << tile_was_alive;
      0005AA E5                    1410 	push	hl
      0005AB FArE0r02              1411 	ld	a, (#_k_tile_is_alive_mask)
      0005AE E1                    1412 	pop	hl
      0005AF A2                    1413 	and	a, d
      0005B0 D6 01                 1414 	sub	a,#0x01
      0005B2 3E 00                 1415 	ld	a, #0x00
      0005B4 17                    1416 	rla
      0005B5 EE 01                 1417 	xor	a, #0x01
      0005B7 87                    1418 	add	a, a
      0005B8 B2                    1419 	or	a, d
                                   1420 ;main.c:171: board[x][y].tile_flags = tile_flags;
      0005B9 77                    1421 	ld	(hl), a
                                   1422 ;main.c:160: for (uint8_t y = 0; y < 18; ++y)
      0005BA 1C                    1423 	inc	e
      0005BB 18 C3                 1424 	jr	00182$
      0005BD                       1425 00186$:
                                   1426 ;main.c:158: for (uint8_t x = 0; x < 20; ++x)
      0005BD 21 24 03              1427 	ld	hl, #804
      0005C0 39                    1428 	add	hl, sp
      0005C1 34                    1429 	inc	(hl)
      0005C2 18 9A                 1430 	jr	00185$
      0005C4                       1431 00107$:
                                   1432 ;main.c:176: for (uint8_t x = 0; x < 20; ++x)
      0005C4 21 04 03              1433 	ld	hl, #772
      0005C7 39                    1434 	add	hl, sp
      0005C8 2A                    1435 	ld	a, (hl+)
      0005C9 23                    1436 	inc	hl
      0005CA 32                    1437 	ld	(hl-), a
      0005CB 2A                    1438 	ld	a, (hl+)
      0005CC 23                    1439 	inc	hl
      0005CD 77                    1440 	ld	(hl), a
      0005CE 21 02 03              1441 	ld	hl, #770
      0005D1 39                    1442 	add	hl, sp
      0005D2 7E                    1443 	ld	a, (hl)
      0005D3 21 08 03              1444 	ld	hl, #776
      0005D6 39                    1445 	add	hl, sp
      0005D7 77                    1446 	ld	(hl), a
      0005D8 21 03 03              1447 	ld	hl, #771
      0005DB 39                    1448 	add	hl, sp
      0005DC 7E                    1449 	ld	a, (hl)
      0005DD 21 09 03              1450 	ld	hl, #777
      0005E0 39                    1451 	add	hl, sp
      0005E1 77                    1452 	ld	(hl), a
      0005E2 21 02 03              1453 	ld	hl, #770
      0005E5 39                    1454 	add	hl, sp
      0005E6 7E                    1455 	ld	a, (hl)
      0005E7 21 0A 03              1456 	ld	hl, #778
      0005EA 39                    1457 	add	hl, sp
      0005EB 77                    1458 	ld	(hl), a
      0005EC 21 03 03              1459 	ld	hl, #771
      0005EF 39                    1460 	add	hl, sp
      0005F0 7E                    1461 	ld	a, (hl)
      0005F1 21 0B 03              1462 	ld	hl, #779
      0005F4 39                    1463 	add	hl, sp
      0005F5 77                    1464 	ld	(hl), a
      0005F6 21 23 03              1465 	ld	hl, #803
      0005F9 39                    1466 	add	hl, sp
      0005FA 36 00                 1467 	ld	(hl), #0x00
      0005FC                       1468 00191$:
      0005FC 21 23 03              1469 	ld	hl, #803
      0005FF 39                    1470 	add	hl, sp
      000600 7E                    1471 	ld	a, (hl)
      000601 D6 14                 1472 	sub	a, #0x14
      000603 D2rB2r0C              1473 	jp	NC, 00168$
                                   1474 ;main.c:178: for (uint8_t y = 0; y < 18; ++y)
      000606 4E                    1475 	ld	c, (hl)
      000607 06 00                 1476 	ld	b, #0x00
      000609 69                    1477 	ld	l, c
      00060A 60                    1478 	ld	h, b
      00060B 29                    1479 	add	hl, hl
      00060C 29                    1480 	add	hl, hl
      00060D 29                    1481 	add	hl, hl
      00060E 09                    1482 	add	hl, bc
      00060F 29                    1483 	add	hl, hl
      000610 29                    1484 	add	hl, hl
      000611 4D                    1485 	ld	c, l
      000612 44                    1486 	ld	b, h
      000613 21 06 03              1487 	ld	hl, #774
      000616 39                    1488 	add	hl, sp
      000617 2A                    1489 	ld	a,	(hl+)
      000618 66                    1490 	ld	h, (hl)
      000619 6F                    1491 	ld	l, a
      00061A 09                    1492 	add	hl, bc
      00061B E5                    1493 	push	hl
      00061C 7D                    1494 	ld	a, l
      00061D 21 0E 03              1495 	ld	hl, #782
      000620 39                    1496 	add	hl, sp
      000621 77                    1497 	ld	(hl), a
      000622 E1                    1498 	pop	hl
      000623 7C                    1499 	ld	a, h
      000624 21 0D 03              1500 	ld	hl, #781
      000627 39                    1501 	add	hl, sp
      000628 77                    1502 	ld	(hl), a
      000629 21 23 03              1503 	ld	hl, #803
      00062C 39                    1504 	add	hl, sp
      00062D 7E                    1505 	ld	a, (hl)
      00062E D6 13                 1506 	sub	a, #0x13
      000630 3E 00                 1507 	ld	a, #0x00
      000632 17                    1508 	rla
      000633 21 0E 03              1509 	ld	hl, #782
      000636 39                    1510 	add	hl, sp
      000637 77                    1511 	ld	(hl), a
      000638 21 24 03              1512 	ld	hl, #804
      00063B 39                    1513 	add	hl, sp
      00063C 36 00                 1514 	ld	(hl), #0x00
      00063E                       1515 00188$:
      00063E 21 24 03              1516 	ld	hl, #804
      000641 39                    1517 	add	hl, sp
      000642 7E                    1518 	ld	a, (hl)
      000643 D6 12                 1519 	sub	a, #0x12
      000645 D2r69r0A              1520 	jp	NC, 00192$
                                   1521 ;main.c:180: uint8_t tile_flags = board[x][y].tile_flags;
      000648 7E                    1522 	ld	a, (hl)
      000649 87                    1523 	add	a, a
      00064A 21 0F 03              1524 	ld	hl, #783
      00064D 39                    1525 	add	hl, sp
      00064E 32                    1526 	ld	(hl-), a
      00064F 2B                    1527 	dec	hl
      000650 2B                    1528 	dec	hl
      000651 2A                    1529 	ld	a, (hl+)
      000652 5F                    1530 	ld	e, a
      000653 2A                    1531 	ld	a, (hl+)
      000654 23                    1532 	inc	hl
      000655 57                    1533 	ld	d, a
      000656 6E                    1534 	ld	l, (hl)
      000657 26 00                 1535 	ld	h, #0x00
      000659 19                    1536 	add	hl, de
      00065A E5                    1537 	push	hl
      00065B 7D                    1538 	ld	a, l
      00065C 21 12 03              1539 	ld	hl, #786
      00065F 39                    1540 	add	hl, sp
      000660 77                    1541 	ld	(hl), a
      000661 E1                    1542 	pop	hl
      000662 7C                    1543 	ld	a, h
      000663 21 11 03              1544 	ld	hl, #785
      000666 39                    1545 	add	hl, sp
      000667 32                    1546 	ld	(hl-), a
      000668 2A                    1547 	ld	a, (hl+)
      000669 5F                    1548 	ld	e, a
      00066A 56                    1549 	ld	d, (hl)
      00066B 6B                    1550 	ld	l, e
      00066C 62                    1551 	ld	h, d
      00066D 23                    1552 	inc	hl
      00066E E5                    1553 	push	hl
      00066F 7D                    1554 	ld	a, l
      000670 21 14 03              1555 	ld	hl, #788
      000673 39                    1556 	add	hl, sp
      000674 77                    1557 	ld	(hl), a
      000675 E1                    1558 	pop	hl
      000676 7C                    1559 	ld	a, h
      000677 21 13 03              1560 	ld	hl, #787
      00067A 39                    1561 	add	hl, sp
      00067B 32                    1562 	ld	(hl-), a
      00067C 2A                    1563 	ld	a, (hl+)
      00067D 5F                    1564 	ld	e, a
      00067E 2A                    1565 	ld	a, (hl+)
      00067F 57                    1566 	ld	d, a
      000680 1A                    1567 	ld	a, (de)
      000681 77                    1568 	ld	(hl), a
                                   1569 ;main.c:181: uint8_t sprite_index = board[x][y].sprite_index;
      000682 21 10 03              1570 	ld	hl,#0x310
      000685 39                    1571 	add	hl,sp
      000686 2A                    1572 	ld	a, (hl+)
      000687 5F                    1573 	ld	e, a
      000688 56                    1574 	ld	d, (hl)
      000689 1A                    1575 	ld	a, (de)
      00068A 21 15 03              1576 	ld	hl, #789
      00068D 39                    1577 	add	hl, sp
                                   1578 ;main.c:182: uint8_t neighbour_count = 0;
      00068E 22                    1579 	ld	(hl+), a
      00068F 36 00                 1580 	ld	(hl), #0x00
                                   1581 ;main.c:165: tile_flags &= ~k_tile_was_alive_mask;
      000691 FArE1r02              1582 	ld	a, (#_k_tile_was_alive_mask)
      000694 21 17 03              1583 	ld	hl, #791
      000697 39                    1584 	add	hl, sp
      000698 77                    1585 	ld	(hl), a
                                   1586 ;main.c:186: && (board[x][y - 1].tile_flags & k_tile_was_alive_mask) != 0x00)
      000699 21 24 03              1587 	ld	hl, #804
      00069C 39                    1588 	add	hl, sp
      00069D 7E                    1589 	ld	a, (hl)
      00069E 21 20 03              1590 	ld	hl, #800
      0006A1 39                    1591 	add	hl, sp
      0006A2 77                    1592 	ld	(hl), a
      0006A3 7E                    1593 	ld	a, (hl)
      0006A4 3D                    1594 	dec	a
      0006A5 87                    1595 	add	a, a
      0006A6 21 18 03              1596 	ld	hl, #792
      0006A9 39                    1597 	add	hl, sp
      0006AA 77                    1598 	ld	(hl), a
                                   1599 ;main.c:185: if (y > 0
      0006AB 21 24 03              1600 	ld	hl, #804
      0006AE 39                    1601 	add	hl, sp
      0006AF 7E                    1602 	ld	a, (hl)
      0006B0 B7                    1603 	or	a, a
      0006B1 28 3F                 1604 	jr	Z, 00109$
                                   1605 ;main.c:186: && (board[x][y - 1].tile_flags & k_tile_was_alive_mask) != 0x00)
      0006B3 21 0C 03              1606 	ld	hl,#0x30c
      0006B6 39                    1607 	add	hl,sp
      0006B7 2A                    1608 	ld	a, (hl+)
      0006B8 5F                    1609 	ld	e, a
      0006B9 56                    1610 	ld	d, (hl)
      0006BA 21 18 03              1611 	ld	hl, #792
      0006BD 39                    1612 	add	hl, sp
      0006BE 6E                    1613 	ld	l, (hl)
      0006BF 26 00                 1614 	ld	h, #0x00
      0006C1 19                    1615 	add	hl, de
      0006C2 E5                    1616 	push	hl
      0006C3 7D                    1617 	ld	a, l
      0006C4 21 1E 03              1618 	ld	hl, #798
      0006C7 39                    1619 	add	hl, sp
      0006C8 77                    1620 	ld	(hl), a
      0006C9 E1                    1621 	pop	hl
      0006CA 7C                    1622 	ld	a, h
      0006CB 21 1D 03              1623 	ld	hl, #797
      0006CE 39                    1624 	add	hl, sp
      0006CF 32                    1625 	ld	(hl-), a
      0006D0 2A                    1626 	ld	a, (hl+)
      0006D1 5F                    1627 	ld	e, a
      0006D2 56                    1628 	ld	d, (hl)
      0006D3 6B                    1629 	ld	l, e
      0006D4 62                    1630 	ld	h, d
      0006D5 23                    1631 	inc	hl
      0006D6 E5                    1632 	push	hl
      0006D7 7D                    1633 	ld	a, l
      0006D8 21 20 03              1634 	ld	hl, #800
      0006DB 39                    1635 	add	hl, sp
      0006DC 77                    1636 	ld	(hl), a
      0006DD E1                    1637 	pop	hl
      0006DE 7C                    1638 	ld	a, h
      0006DF 21 1F 03              1639 	ld	hl, #799
      0006E2 39                    1640 	add	hl, sp
      0006E3 32                    1641 	ld	(hl-), a
      0006E4 2A                    1642 	ld	a, (hl+)
      0006E5 5F                    1643 	ld	e, a
      0006E6 56                    1644 	ld	d, (hl)
      0006E7 1A                    1645 	ld	a, (de)
      0006E8 21 17 03              1646 	ld	hl, #791
      0006EB 39                    1647 	add	hl, sp
      0006EC A6                    1648 	and	a,(hl)
      0006ED 28 03                 1649 	jr	Z, 00109$
                                   1650 ;main.c:188: neighbour_count += 1;
      0006EF 2B                    1651 	dec	hl
      0006F0 36 01                 1652 	ld	(hl), #0x01
      0006F2                       1653 00109$:
                                   1654 ;main.c:194: && (board[x + 1][y - 1].tile_flags & k_tile_was_alive_mask) != 0x00)
      0006F2 21 23 03              1655 	ld	hl, #803
      0006F5 39                    1656 	add	hl, sp
      0006F6 7E                    1657 	ld	a, (hl)
      0006F7 21 19 03              1658 	ld	hl, #793
      0006FA 39                    1659 	add	hl, sp
      0006FB 22                    1660 	ld	(hl+), a
      0006FC AF                    1661 	xor	a, a
      0006FD 32                    1662 	ld	(hl-), a
      0006FE 2A                    1663 	ld	a, (hl+)
      0006FF 5F                    1664 	ld	e, a
      000700 56                    1665 	ld	d, (hl)
      000701 6B                    1666 	ld	l, e
      000702 62                    1667 	ld	h, d
      000703 23                    1668 	inc	hl
      000704 E5                    1669 	push	hl
      000705 7D                    1670 	ld	a, l
      000706 21 20 03              1671 	ld	hl, #800
      000709 39                    1672 	add	hl, sp
      00070A 77                    1673 	ld	(hl), a
      00070B E1                    1674 	pop	hl
      00070C 7C                    1675 	ld	a, h
      00070D 21 1F 03              1676 	ld	hl, #799
      000710 39                    1677 	add	hl, sp
      000711 32                    1678 	ld	(hl-), a
      000712 2A                    1679 	ld	a, (hl+)
      000713 4F                    1680 	ld	c, a
      000714 46                    1681 	ld	b, (hl)
      000715 69                    1682 	ld	l, c
      000716 60                    1683 	ld	h, b
      000717 29                    1684 	add	hl, hl
      000718 29                    1685 	add	hl, hl
      000719 29                    1686 	add	hl, hl
      00071A 09                    1687 	add	hl, bc
      00071B 29                    1688 	add	hl, hl
      00071C 29                    1689 	add	hl, hl
      00071D E5                    1690 	push	hl
      00071E 7D                    1691 	ld	a, l
      00071F 21 1D 03              1692 	ld	hl, #797
      000722 39                    1693 	add	hl, sp
      000723 77                    1694 	ld	(hl), a
      000724 E1                    1695 	pop	hl
      000725 7C                    1696 	ld	a, h
      000726 21 1C 03              1697 	ld	hl, #796
      000729 39                    1698 	add	hl, sp
      00072A 77                    1699 	ld	(hl), a
      00072B 21 06 03              1700 	ld	hl,#0x306
      00072E 39                    1701 	add	hl,sp
      00072F 2A                    1702 	ld	a, (hl+)
      000730 5F                    1703 	ld	e, a
      000731 56                    1704 	ld	d, (hl)
      000732 21 1B 03              1705 	ld	hl, #795
      000735 39                    1706 	add	hl, sp
      000736 2A                    1707 	ld	a,	(hl+)
      000737 66                    1708 	ld	h, (hl)
      000738 6F                    1709 	ld	l, a
      000739 19                    1710 	add	hl, de
      00073A E5                    1711 	push	hl
      00073B 7D                    1712 	ld	a, l
      00073C 21 1F 03              1713 	ld	hl, #799
      00073F 39                    1714 	add	hl, sp
      000740 77                    1715 	ld	(hl), a
      000741 E1                    1716 	pop	hl
      000742 7C                    1717 	ld	a, h
      000743 21 1E 03              1718 	ld	hl, #798
      000746 39                    1719 	add	hl, sp
      000747 77                    1720 	ld	(hl), a
                                   1721 ;main.c:193: && y > 0
      000748 21 0E 03              1722 	ld	hl, #782
      00074B 39                    1723 	add	hl, sp
      00074C 7E                    1724 	ld	a, (hl)
      00074D B7                    1725 	or	a, a
      00074E 28 34                 1726 	jr	Z, 00112$
      000750 21 24 03              1727 	ld	hl, #804
      000753 39                    1728 	add	hl, sp
      000754 7E                    1729 	ld	a, (hl)
      000755 B7                    1730 	or	a, a
      000756 28 2C                 1731 	jr	Z, 00112$
                                   1732 ;main.c:194: && (board[x + 1][y - 1].tile_flags & k_tile_was_alive_mask) != 0x00)
      000758 21 1D 03              1733 	ld	hl,#0x31d
      00075B 39                    1734 	add	hl,sp
      00075C 2A                    1735 	ld	a, (hl+)
      00075D 5F                    1736 	ld	e, a
      00075E 56                    1737 	ld	d, (hl)
      00075F 21 18 03              1738 	ld	hl, #792
      000762 39                    1739 	add	hl, sp
      000763 6E                    1740 	ld	l, (hl)
      000764 26 00                 1741 	ld	h, #0x00
      000766 19                    1742 	add	hl, de
      000767 E5                    1743 	push	hl
      000768 7D                    1744 	ld	a, l
      000769 21 1D 03              1745 	ld	hl, #797
      00076C 39                    1746 	add	hl, sp
      00076D 77                    1747 	ld	(hl), a
      00076E E1                    1748 	pop	hl
      00076F 7C                    1749 	ld	a, h
      000770 21 1C 03              1750 	ld	hl, #796
      000773 39                    1751 	add	hl, sp
      000774 32                    1752 	ld	(hl-), a
      000775 2A                    1753 	ld	a, (hl+)
      000776 4F                    1754 	ld	c, a
      000777 46                    1755 	ld	b, (hl)
      000778 03                    1756 	inc	bc
      000779 0A                    1757 	ld	a, (bc)
      00077A 21 17 03              1758 	ld	hl, #791
      00077D 39                    1759 	add	hl, sp
      00077E A6                    1760 	and	a,(hl)
      00077F 28 03                 1761 	jr	Z, 00112$
                                   1762 ;main.c:196: neighbour_count += 1;
      000781 2B                    1763 	dec	hl
      000782 34                    1764 	inc	(hl)
      000783 7E                    1765 	ld	a, (hl)
      000784                       1766 00112$:
                                   1767 ;main.c:201: && (board[x + 1][y].tile_flags & k_tile_was_alive_mask) != 0x00)
      000784 21 0E 03              1768 	ld	hl, #782
      000787 39                    1769 	add	hl, sp
      000788 7E                    1770 	ld	a, (hl)
      000789 B7                    1771 	or	a, a
      00078A 28 1D                 1772 	jr	Z, 00116$
      00078C 21 1D 03              1773 	ld	hl,#0x31d
      00078F 39                    1774 	add	hl,sp
      000790 2A                    1775 	ld	a, (hl+)
      000791 5F                    1776 	ld	e, a
      000792 56                    1777 	ld	d, (hl)
      000793 21 0F 03              1778 	ld	hl, #783
      000796 39                    1779 	add	hl, sp
      000797 6E                    1780 	ld	l, (hl)
      000798 26 00                 1781 	ld	h, #0x00
      00079A 19                    1782 	add	hl, de
      00079B 23                    1783 	inc	hl
      00079C 4D                    1784 	ld	c, l
      00079D 44                    1785 	ld	b, h
      00079E 0A                    1786 	ld	a, (bc)
      00079F 21 17 03              1787 	ld	hl, #791
      0007A2 39                    1788 	add	hl, sp
      0007A3 A6                    1789 	and	a,(hl)
      0007A4 28 03                 1790 	jr	Z, 00116$
                                   1791 ;main.c:203: neighbour_count += 1;
      0007A6 2B                    1792 	dec	hl
      0007A7 34                    1793 	inc	(hl)
      0007A8 7E                    1794 	ld	a, (hl)
      0007A9                       1795 00116$:
                                   1796 ;main.c:209: && (board[x + 1][y + 1].tile_flags & k_tile_was_alive_mask) != 0x00)
      0007A9 21 24 03              1797 	ld	hl, #804
      0007AC 39                    1798 	add	hl, sp
      0007AD 7E                    1799 	ld	a, (hl)
      0007AE D6 11                 1800 	sub	a, #0x11
      0007B0 3E 00                 1801 	ld	a, #0x00
      0007B2 17                    1802 	rla
      0007B3 21 1B 03              1803 	ld	hl, #795
      0007B6 39                    1804 	add	hl, sp
      0007B7 77                    1805 	ld	(hl), a
      0007B8 21 20 03              1806 	ld	hl, #800
      0007BB 39                    1807 	add	hl, sp
      0007BC 7E                    1808 	ld	a, (hl)
      0007BD 3C                    1809 	inc	a
      0007BE 87                    1810 	add	a, a
      0007BF 21 1C 03              1811 	ld	hl, #796
      0007C2 39                    1812 	add	hl, sp
      0007C3 77                    1813 	ld	(hl), a
                                   1814 ;main.c:208: && y < 17
      0007C4 21 0E 03              1815 	ld	hl, #782
      0007C7 39                    1816 	add	hl, sp
      0007C8 7E                    1817 	ld	a, (hl)
      0007C9 B7                    1818 	or	a, a
      0007CA 28 32                 1819 	jr	Z, 00119$
                                   1820 ;main.c:209: && (board[x + 1][y + 1].tile_flags & k_tile_was_alive_mask) != 0x00)
      0007CC 21 1B 03              1821 	ld	hl, #795
      0007CF 39                    1822 	add	hl, sp
      0007D0 7E                    1823 	ld	a, (hl)
      0007D1 B7                    1824 	or	a, a
      0007D2 28 2A                 1825 	jr	Z, 00119$
      0007D4 21 1D 03              1826 	ld	hl,#0x31d
      0007D7 39                    1827 	add	hl,sp
      0007D8 2A                    1828 	ld	a, (hl+)
      0007D9 5F                    1829 	ld	e, a
      0007DA 3A                    1830 	ld	a, (hl-)
      0007DB 2B                    1831 	dec	hl
      0007DC 57                    1832 	ld	d, a
      0007DD 6E                    1833 	ld	l, (hl)
      0007DE 26 00                 1834 	ld	h, #0x00
      0007E0 19                    1835 	add	hl, de
      0007E1 E5                    1836 	push	hl
      0007E2 7D                    1837 	ld	a, l
      0007E3 21 21 03              1838 	ld	hl, #801
      0007E6 39                    1839 	add	hl, sp
      0007E7 77                    1840 	ld	(hl), a
      0007E8 E1                    1841 	pop	hl
      0007E9 7C                    1842 	ld	a, h
      0007EA 21 20 03              1843 	ld	hl, #800
      0007ED 39                    1844 	add	hl, sp
      0007EE 32                    1845 	ld	(hl-), a
      0007EF 2A                    1846 	ld	a, (hl+)
      0007F0 4F                    1847 	ld	c, a
      0007F1 46                    1848 	ld	b, (hl)
      0007F2 03                    1849 	inc	bc
      0007F3 0A                    1850 	ld	a, (bc)
      0007F4 21 17 03              1851 	ld	hl, #791
      0007F7 39                    1852 	add	hl, sp
      0007F8 A6                    1853 	and	a,(hl)
      0007F9 28 03                 1854 	jr	Z, 00119$
                                   1855 ;main.c:211: neighbour_count += 1;
      0007FB 2B                    1856 	dec	hl
      0007FC 34                    1857 	inc	(hl)
      0007FD 7E                    1858 	ld	a, (hl)
      0007FE                       1859 00119$:
                                   1860 ;main.c:216: && (board[x][y + 1].tile_flags & k_tile_was_alive_mask) != 0x00)
      0007FE 21 1B 03              1861 	ld	hl, #795
      000801 39                    1862 	add	hl, sp
      000802 7E                    1863 	ld	a, (hl)
      000803 B7                    1864 	or	a, a
      000804 28 3F                 1865 	jr	Z, 00123$
      000806 21 0C 03              1866 	ld	hl,#0x30c
      000809 39                    1867 	add	hl,sp
      00080A 2A                    1868 	ld	a, (hl+)
      00080B 5F                    1869 	ld	e, a
      00080C 56                    1870 	ld	d, (hl)
      00080D 21 1C 03              1871 	ld	hl, #796
      000810 39                    1872 	add	hl, sp
      000811 6E                    1873 	ld	l, (hl)
      000812 26 00                 1874 	ld	h, #0x00
      000814 19                    1875 	add	hl, de
      000815 E5                    1876 	push	hl
      000816 7D                    1877 	ld	a, l
      000817 21 1F 03              1878 	ld	hl, #799
      00081A 39                    1879 	add	hl, sp
      00081B 77                    1880 	ld	(hl), a
      00081C E1                    1881 	pop	hl
      00081D 7C                    1882 	ld	a, h
      00081E 21 1E 03              1883 	ld	hl, #798
      000821 39                    1884 	add	hl, sp
      000822 32                    1885 	ld	(hl-), a
      000823 2A                    1886 	ld	a, (hl+)
      000824 5F                    1887 	ld	e, a
      000825 56                    1888 	ld	d, (hl)
      000826 6B                    1889 	ld	l, e
      000827 62                    1890 	ld	h, d
      000828 23                    1891 	inc	hl
      000829 E5                    1892 	push	hl
      00082A 7D                    1893 	ld	a, l
      00082B 21 21 03              1894 	ld	hl, #801
      00082E 39                    1895 	add	hl, sp
      00082F 77                    1896 	ld	(hl), a
      000830 E1                    1897 	pop	hl
      000831 7C                    1898 	ld	a, h
      000832 21 20 03              1899 	ld	hl, #800
      000835 39                    1900 	add	hl, sp
      000836 32                    1901 	ld	(hl-), a
      000837 2A                    1902 	ld	a, (hl+)
      000838 5F                    1903 	ld	e, a
      000839 56                    1904 	ld	d, (hl)
      00083A 1A                    1905 	ld	a, (de)
      00083B 21 17 03              1906 	ld	hl, #791
      00083E 39                    1907 	add	hl, sp
      00083F A6                    1908 	and	a,(hl)
      000840 28 03                 1909 	jr	Z, 00123$
                                   1910 ;main.c:218: neighbour_count += 1;
      000842 2B                    1911 	dec	hl
      000843 34                    1912 	inc	(hl)
      000844 7E                    1913 	ld	a, (hl)
      000845                       1914 00123$:
                                   1915 ;main.c:224: && (board[x - 1][y + 1].tile_flags & k_tile_was_alive_mask) != 0x00)
      000845 21 19 03              1916 	ld	hl,#0x319
      000848 39                    1917 	add	hl,sp
      000849 2A                    1918 	ld	a, (hl+)
      00084A 4F                    1919 	ld	c, a
      00084B 46                    1920 	ld	b, (hl)
      00084C 0B                    1921 	dec	bc
      00084D 69                    1922 	ld	l, c
      00084E 60                    1923 	ld	h, b
      00084F 29                    1924 	add	hl, hl
      000850 29                    1925 	add	hl, hl
      000851 29                    1926 	add	hl, hl
      000852 09                    1927 	add	hl, bc
      000853 29                    1928 	add	hl, hl
      000854 29                    1929 	add	hl, hl
      000855 4D                    1930 	ld	c, l
      000856 44                    1931 	ld	b, h
      000857 21 06 03              1932 	ld	hl, #774
      00085A 39                    1933 	add	hl, sp
      00085B 2A                    1934 	ld	a,	(hl+)
      00085C 66                    1935 	ld	h, (hl)
      00085D 6F                    1936 	ld	l, a
      00085E 09                    1937 	add	hl, bc
      00085F E5                    1938 	push	hl
      000860 7D                    1939 	ld	a, l
      000861 21 21 03              1940 	ld	hl, #801
      000864 39                    1941 	add	hl, sp
      000865 77                    1942 	ld	(hl), a
      000866 E1                    1943 	pop	hl
      000867 7C                    1944 	ld	a, h
      000868 21 20 03              1945 	ld	hl, #800
      00086B 39                    1946 	add	hl, sp
      00086C 77                    1947 	ld	(hl), a
                                   1948 ;main.c:222: if (x > 0
      00086D 21 23 03              1949 	ld	hl, #803
      000870 39                    1950 	add	hl, sp
      000871 7E                    1951 	ld	a, (hl)
      000872 B7                    1952 	or	a, a
      000873 28 31                 1953 	jr	Z, 00126$
                                   1954 ;main.c:224: && (board[x - 1][y + 1].tile_flags & k_tile_was_alive_mask) != 0x00)
      000875 21 1B 03              1955 	ld	hl, #795
      000878 39                    1956 	add	hl, sp
      000879 7E                    1957 	ld	a, (hl)
      00087A B7                    1958 	or	a, a
      00087B 28 29                 1959 	jr	Z, 00126$
      00087D 23                    1960 	inc	hl
      00087E 5E                    1961 	ld	e, (hl)
      00087F 16 00                 1962 	ld	d, #0x00
      000881 21 1F 03              1963 	ld	hl, #799
      000884 39                    1964 	add	hl, sp
      000885 2A                    1965 	ld	a,	(hl+)
      000886 66                    1966 	ld	h, (hl)
      000887 6F                    1967 	ld	l, a
      000888 19                    1968 	add	hl, de
      000889 E5                    1969 	push	hl
      00088A 7D                    1970 	ld	a, l
      00088B 21 1F 03              1971 	ld	hl, #799
      00088E 39                    1972 	add	hl, sp
      00088F 77                    1973 	ld	(hl), a
      000890 E1                    1974 	pop	hl
      000891 7C                    1975 	ld	a, h
      000892 21 1E 03              1976 	ld	hl, #798
      000895 39                    1977 	add	hl, sp
      000896 32                    1978 	ld	(hl-), a
      000897 2A                    1979 	ld	a, (hl+)
      000898 4F                    1980 	ld	c, a
      000899 46                    1981 	ld	b, (hl)
      00089A 03                    1982 	inc	bc
      00089B 0A                    1983 	ld	a, (bc)
      00089C 21 17 03              1984 	ld	hl, #791
      00089F 39                    1985 	add	hl, sp
      0008A0 A6                    1986 	and	a,(hl)
      0008A1 28 03                 1987 	jr	Z, 00126$
                                   1988 ;main.c:226: neighbour_count += 1;
      0008A3 2B                    1989 	dec	hl
      0008A4 34                    1990 	inc	(hl)
      0008A5 7E                    1991 	ld	a, (hl)
      0008A6                       1992 00126$:
                                   1993 ;main.c:230: if (x > 0
      0008A6 21 23 03              1994 	ld	hl, #803
      0008A9 39                    1995 	add	hl, sp
      0008AA 7E                    1996 	ld	a, (hl)
      0008AB B7                    1997 	or	a, a
      0008AC 28 3F                 1998 	jr	Z, 00130$
                                   1999 ;main.c:231: && (board[x - 1][y].tile_flags & k_tile_was_alive_mask) != 0x00)
      0008AE 21 0F 03              2000 	ld	hl, #783
      0008B1 39                    2001 	add	hl, sp
      0008B2 5E                    2002 	ld	e, (hl)
      0008B3 16 00                 2003 	ld	d, #0x00
      0008B5 21 1F 03              2004 	ld	hl, #799
      0008B8 39                    2005 	add	hl, sp
      0008B9 2A                    2006 	ld	a,	(hl+)
      0008BA 66                    2007 	ld	h, (hl)
      0008BB 6F                    2008 	ld	l, a
      0008BC 19                    2009 	add	hl, de
      0008BD E5                    2010 	push	hl
      0008BE 7D                    2011 	ld	a, l
      0008BF 21 1F 03              2012 	ld	hl, #799
      0008C2 39                    2013 	add	hl, sp
      0008C3 77                    2014 	ld	(hl), a
      0008C4 E1                    2015 	pop	hl
      0008C5 7C                    2016 	ld	a, h
      0008C6 21 1E 03              2017 	ld	hl, #798
      0008C9 39                    2018 	add	hl, sp
      0008CA 32                    2019 	ld	(hl-), a
      0008CB 2A                    2020 	ld	a, (hl+)
      0008CC 5F                    2021 	ld	e, a
      0008CD 56                    2022 	ld	d, (hl)
      0008CE 6B                    2023 	ld	l, e
      0008CF 62                    2024 	ld	h, d
      0008D0 23                    2025 	inc	hl
      0008D1 E5                    2026 	push	hl
      0008D2 7D                    2027 	ld	a, l
      0008D3 21 1D 03              2028 	ld	hl, #797
      0008D6 39                    2029 	add	hl, sp
      0008D7 77                    2030 	ld	(hl), a
      0008D8 E1                    2031 	pop	hl
      0008D9 7C                    2032 	ld	a, h
      0008DA 21 1C 03              2033 	ld	hl, #796
      0008DD 39                    2034 	add	hl, sp
      0008DE 32                    2035 	ld	(hl-), a
      0008DF 2A                    2036 	ld	a, (hl+)
      0008E0 5F                    2037 	ld	e, a
      0008E1 56                    2038 	ld	d, (hl)
      0008E2 1A                    2039 	ld	a, (de)
      0008E3 21 17 03              2040 	ld	hl, #791
      0008E6 39                    2041 	add	hl, sp
      0008E7 A6                    2042 	and	a,(hl)
      0008E8 28 03                 2043 	jr	Z, 00130$
                                   2044 ;main.c:233: neighbour_count += 1;
      0008EA 2B                    2045 	dec	hl
      0008EB 34                    2046 	inc	(hl)
      0008EC 7E                    2047 	ld	a, (hl)
      0008ED                       2048 00130$:
                                   2049 ;main.c:237: if (x > 0
      0008ED 21 23 03              2050 	ld	hl, #803
      0008F0 39                    2051 	add	hl, sp
      0008F1 7E                    2052 	ld	a, (hl)
      0008F2 B7                    2053 	or	a, a
      0008F3 28 31                 2054 	jr	Z, 00133$
                                   2055 ;main.c:238: && y > 0
      0008F5 23                    2056 	inc	hl
      0008F6 7E                    2057 	ld	a, (hl)
      0008F7 B7                    2058 	or	a, a
      0008F8 28 2C                 2059 	jr	Z, 00133$
                                   2060 ;main.c:239: && (board[x - 1][y - 1].tile_flags & k_tile_was_alive_mask) != 0x00)
      0008FA 21 18 03              2061 	ld	hl, #792
      0008FD 39                    2062 	add	hl, sp
      0008FE 5E                    2063 	ld	e, (hl)
      0008FF 16 00                 2064 	ld	d, #0x00
      000901 21 1F 03              2065 	ld	hl, #799
      000904 39                    2066 	add	hl, sp
      000905 2A                    2067 	ld	a,	(hl+)
      000906 66                    2068 	ld	h, (hl)
      000907 6F                    2069 	ld	l, a
      000908 19                    2070 	add	hl, de
      000909 E5                    2071 	push	hl
      00090A 7D                    2072 	ld	a, l
      00090B 21 1F 03              2073 	ld	hl, #799
      00090E 39                    2074 	add	hl, sp
      00090F 77                    2075 	ld	(hl), a
      000910 E1                    2076 	pop	hl
      000911 7C                    2077 	ld	a, h
      000912 21 1E 03              2078 	ld	hl, #798
      000915 39                    2079 	add	hl, sp
      000916 32                    2080 	ld	(hl-), a
      000917 2A                    2081 	ld	a, (hl+)
      000918 4F                    2082 	ld	c, a
      000919 46                    2083 	ld	b, (hl)
      00091A 03                    2084 	inc	bc
      00091B 0A                    2085 	ld	a, (bc)
      00091C 21 17 03              2086 	ld	hl, #791
      00091F 39                    2087 	add	hl, sp
      000920 A6                    2088 	and	a,(hl)
      000921 28 03                 2089 	jr	Z, 00133$
                                   2090 ;main.c:241: neighbour_count += 1;
      000923 2B                    2091 	dec	hl
      000924 34                    2092 	inc	(hl)
      000925 7E                    2093 	ld	a, (hl)
      000926                       2094 00133$:
                                   2095 ;main.c:168: tile_flags |= ((tile_flags & k_tile_is_alive_mask) != 0x00) << tile_was_alive;
      000926 FArE0r02              2096 	ld	a, (#_k_tile_is_alive_mask)
      000929 21 20 03              2097 	ld	hl, #800
      00092C 39                    2098 	add	hl, sp
      00092D 77                    2099 	ld	(hl), a
                                   2100 ;main.c:245: uint8_t is_alive = (tile_flags & k_tile_is_alive_mask) != 0x00;
      00092E 21 14 03              2101 	ld	hl, #788
      000931 39                    2102 	add	hl, sp
      000932 7E                    2103 	ld	a, (hl)
      000933 21 20 03              2104 	ld	hl, #800
      000936 39                    2105 	add	hl, sp
      000937 A6                    2106 	and	a, (hl)
      000938 D6 01                 2107 	sub	a,#0x01
      00093A 3E 00                 2108 	ld	a, #0x00
      00093C 17                    2109 	rla
      00093D EE 01                 2110 	xor	a, #0x01
                                   2111 ;main.c:246: uint8_t come_to_life = !is_alive && neighbour_count == 3;
      00093F 47                    2112 	ld	b, a
      000940 B7                    2113 	or	a, a
      000941 20 09                 2114 	jr	NZ, 00197$
      000943 21 16 03              2115 	ld	hl, #790
      000946 39                    2116 	add	hl, sp
      000947 7E                    2117 	ld	a, (hl)
      000948 D6 03                 2118 	sub	a, #0x03
      00094A 28 04                 2119 	jr	Z, 00198$
      00094C                       2120 00197$:
      00094C 0E 00                 2121 	ld	c, #0x00
      00094E 18 02                 2122 	jr	00199$
      000950                       2123 00198$:
      000950 0E 01                 2124 	ld	c, #0x01
      000952                       2125 00199$:
                                   2126 ;main.c:251: uint8_t remain_alive = is_alive && neighbour_count >= 2 && neighbour_count <= 3;
      000952 78                    2127 	ld	a, b
      000953 B7                    2128 	or	a, a
      000954 28 0E                 2129 	jr	Z, 00200$
      000956 21 16 03              2130 	ld	hl, #790
      000959 39                    2131 	add	hl, sp
      00095A 7E                    2132 	ld	a, (hl)
      00095B D6 02                 2133 	sub	a, #0x02
      00095D 38 05                 2134 	jr	C, 00200$
      00095F 3E 03                 2135 	ld	a, #0x03
      000961 96                    2136 	sub	a, (hl)
      000962 30 04                 2137 	jr	NC, 00201$
      000964                       2138 00200$:
      000964 1E 00                 2139 	ld	e, #0x00
      000966 18 02                 2140 	jr	00202$
      000968                       2141 00201$:
      000968 1E 01                 2142 	ld	e, #0x01
      00096A                       2143 00202$:
                                   2144 ;main.c:254: tile_flags &= ~k_tile_is_alive_mask;
      00096A 21 20 03              2145 	ld	hl, #800
      00096D 39                    2146 	add	hl, sp
      00096E 3A                    2147 	ld	a, (hl-)
      00096F 2B                    2148 	dec	hl
      000970 2F                    2149 	cpl
      000971 77                    2150 	ld	(hl), a
      000972 21 14 03              2151 	ld	hl, #788
      000975 39                    2152 	add	hl, sp
      000976 7E                    2153 	ld	a, (hl)
      000977 21 1E 03              2154 	ld	hl, #798
      00097A 39                    2155 	add	hl, sp
      00097B A6                    2156 	and	a, (hl)
      00097C 6F                    2157 	ld	l, a
                                   2158 ;	spillPairReg hl
                                   2159 ;	spillPairReg hl
                                   2160 ;main.c:255: tile_flags |= ((come_to_life | remain_alive) != 0x00) << tile_is_alive;
      00097D 79                    2161 	ld	a, c
      00097E B3                    2162 	or	a, e
      00097F D6 01                 2163 	sub	a,#0x01
      000981 3E 00                 2164 	ld	a, #0x00
      000983 17                    2165 	rla
      000984 EE 01                 2166 	xor	a, #0x01
      000986 B5                    2167 	or	a, l
      000987 21 1F 03              2168 	ld	hl, #799
      00098A 39                    2169 	add	hl, sp
      00098B 77                    2170 	ld	(hl), a
                                   2171 ;main.c:258: is_alive = (tile_flags & k_tile_is_alive_mask) != 0x00;
      00098C 2A                    2172 	ld	a, (hl+)
      00098D A6                    2173 	and	a, (hl)
      00098E D6 01                 2174 	sub	a,#0x01
      000990 3E 00                 2175 	ld	a, #0x00
      000992 17                    2176 	rla
      000993 EE 01                 2177 	xor	a, #0x01
                                   2178 ;main.c:259: uint8_t was_alive = (tile_flags & k_tile_was_alive_mask) != 0x00;
      000995 32                    2179 	ld	(hl-), a
      000996 7E                    2180 	ld	a, (hl)
      000997 21 17 03              2181 	ld	hl, #791
      00099A 39                    2182 	add	hl, sp
      00099B A6                    2183 	and	a, (hl)
      00099C D6 01                 2184 	sub	a,#0x01
      00099E 3E 00                 2185 	ld	a, #0x00
      0009A0 17                    2186 	rla
      0009A1 EE 01                 2187 	xor	a, #0x01
      0009A3 21 1C 03              2188 	ld	hl, #796
      0009A6 39                    2189 	add	hl, sp
      0009A7 77                    2190 	ld	(hl), a
      0009A8 2A                    2191 	ld	a, (hl+)
                                   2192 ;main.c:262: if (!was_alive && is_alive)
      0009A9 32                    2193 	ld	(hl-), a
      0009AA 7E                    2194 	ld	a, (hl)
      0009AB B7                    2195 	or	a, a
      0009AC 20 58                 2196 	jr	NZ, 00143$
      0009AE 21 20 03              2197 	ld	hl, #800
      0009B1 39                    2198 	add	hl, sp
      0009B2 7E                    2199 	ld	a, (hl)
      0009B3 B7                    2200 	or	a, a
      0009B4 28 50                 2201 	jr	Z, 00143$
                                   2202 ;main.c:265: if (next_available_sprite_index < 39)
      0009B6 23                    2203 	inc	hl
      0009B7 23                    2204 	inc	hl
      0009B8 7E                    2205 	ld	a, (hl)
      0009B9 D6 27                 2206 	sub	a, #0x27
      0009BB 30 3F                 2207 	jr	NC, 00137$
                                   2208 ;main.c:268: sprite_index = available_sprites[next_available_sprite_index];
      0009BD 21 0A 03              2209 	ld	hl,#0x30a
      0009C0 39                    2210 	add	hl,sp
      0009C1 2A                    2211 	ld	a, (hl+)
      0009C2 5F                    2212 	ld	e, a
      0009C3 56                    2213 	ld	d, (hl)
      0009C4 21 22 03              2214 	ld	hl, #802
      0009C7 39                    2215 	add	hl, sp
      0009C8 6E                    2216 	ld	l, (hl)
      0009C9 26 00                 2217 	ld	h, #0x00
      0009CB 19                    2218 	add	hl, de
      0009CC E5                    2219 	push	hl
      0009CD 7D                    2220 	ld	a, l
      0009CE 21 1F 03              2221 	ld	hl, #799
      0009D1 39                    2222 	add	hl, sp
      0009D2 77                    2223 	ld	(hl), a
      0009D3 E1                    2224 	pop	hl
      0009D4 7C                    2225 	ld	a, h
      0009D5 21 1E 03              2226 	ld	hl, #798
      0009D8 39                    2227 	add	hl, sp
      0009D9 32                    2228 	ld	(hl-), a
      0009DA 2A                    2229 	ld	a, (hl+)
      0009DB 5F                    2230 	ld	e, a
      0009DC 56                    2231 	ld	d, (hl)
      0009DD 1A                    2232 	ld	a, (de)
      0009DE 21 15 03              2233 	ld	hl, #789
      0009E1 39                    2234 	add	hl, sp
      0009E2 77                    2235 	ld	(hl), a
                                   2236 ;main.c:269: next_available_sprite_index++;
      0009E3 21 22 03              2237 	ld	hl, #802
      0009E6 39                    2238 	add	hl, sp
      0009E7 34                    2239 	inc	(hl)
                                   2240 ;main.c:272: update_tile_position(sprite_index, x, y);
      0009E8 23                    2241 	inc	hl
      0009E9 23                    2242 	inc	hl
      0009EA 3A                    2243 	ld	a, (hl-)
      0009EB 57                    2244 	ld	d, a
      0009EC 5E                    2245 	ld	e, (hl)
      0009ED D5                    2246 	push	de
      0009EE 21 17 03              2247 	ld	hl, #791
      0009F1 39                    2248 	add	hl, sp
      0009F2 7E                    2249 	ld	a, (hl)
      0009F3 F5                    2250 	push	af
      0009F4 33                    2251 	inc	sp
      0009F5 CDr30r03              2252 	call	_update_tile_position
      0009F8 E8 03                 2253 	add	sp, #3
      0009FA 18 4B                 2254 	jr	00144$
      0009FC                       2255 00137$:
                                   2256 ;main.c:277: tile_flags &= ~k_tile_is_alive_mask;
      0009FC 21 1F 03              2257 	ld	hl, #799
      0009FF 39                    2258 	add	hl, sp
      000A00 3A                    2259 	ld	a, (hl-)
      000A01 A6                    2260 	and	a, (hl)
      000A02 23                    2261 	inc	hl
      000A03 77                    2262 	ld	(hl), a
      000A04 18 41                 2263 	jr	00144$
      000A06                       2264 00143$:
                                   2265 ;main.c:280: else if (was_alive && !is_alive)
      000A06 21 1D 03              2266 	ld	hl, #797
      000A09 39                    2267 	add	hl, sp
      000A0A 7E                    2268 	ld	a, (hl)
      000A0B B7                    2269 	or	a, a
      000A0C 28 39                 2270 	jr	Z, 00144$
      000A0E 21 20 03              2271 	ld	hl, #800
      000A11 39                    2272 	add	hl, sp
      000A12 7E                    2273 	ld	a, (hl)
      000A13 B7                    2274 	or	a, a
      000A14 20 31                 2275 	jr	NZ, 00144$
                                   2276 ;main.c:283: update_tile_position(sprite_index, 0, 19);
      000A16 3E 13                 2277 	ld	a, #0x13
      000A18 F5                    2278 	push	af
      000A19 33                    2279 	inc	sp
      000A1A AF                    2280 	xor	a, a
      000A1B F5                    2281 	push	af
      000A1C 33                    2282 	inc	sp
      000A1D 21 17 03              2283 	ld	hl, #791
      000A20 39                    2284 	add	hl, sp
      000A21 7E                    2285 	ld	a, (hl)
      000A22 F5                    2286 	push	af
      000A23 33                    2287 	inc	sp
      000A24 CDr30r03              2288 	call	_update_tile_position
      000A27 E8 03                 2289 	add	sp, #3
                                   2290 ;main.c:286: next_available_sprite_index--;
      000A29 21 22 03              2291 	ld	hl, #802
      000A2C 39                    2292 	add	hl, sp
      000A2D 35                    2293 	dec	(hl)
                                   2294 ;main.c:287: available_sprites[next_available_sprite_index] = sprite_index;
      000A2E 21 08 03              2295 	ld	hl,#0x308
      000A31 39                    2296 	add	hl,sp
      000A32 2A                    2297 	ld	a, (hl+)
      000A33 5F                    2298 	ld	e, a
      000A34 56                    2299 	ld	d, (hl)
      000A35 21 22 03              2300 	ld	hl, #802
      000A38 39                    2301 	add	hl, sp
      000A39 6E                    2302 	ld	l, (hl)
      000A3A 26 00                 2303 	ld	h, #0x00
      000A3C 19                    2304 	add	hl, de
      000A3D 4D                    2305 	ld	c, l
      000A3E 44                    2306 	ld	b, h
      000A3F 21 15 03              2307 	ld	hl, #789
      000A42 39                    2308 	add	hl, sp
      000A43 7E                    2309 	ld	a, (hl)
      000A44 02                    2310 	ld	(bc), a
                                   2311 ;main.c:290: sprite_index = 0x00;
      000A45 36 00                 2312 	ld	(hl), #0x00
      000A47                       2313 00144$:
                                   2314 ;main.c:293: board[x][y].tile_flags = tile_flags;
      000A47 21 12 03              2315 	ld	hl,#0x312
      000A4A 39                    2316 	add	hl,sp
      000A4B 2A                    2317 	ld	a, (hl+)
      000A4C 5F                    2318 	ld	e, a
      000A4D 56                    2319 	ld	d, (hl)
      000A4E 21 1F 03              2320 	ld	hl, #799
      000A51 39                    2321 	add	hl, sp
      000A52 7E                    2322 	ld	a, (hl)
      000A53 12                    2323 	ld	(de), a
                                   2324 ;main.c:294: board[x][y].sprite_index = sprite_index;
      000A54 21 10 03              2325 	ld	hl,#0x310
      000A57 39                    2326 	add	hl,sp
      000A58 2A                    2327 	ld	a, (hl+)
      000A59 5F                    2328 	ld	e, a
      000A5A 56                    2329 	ld	d, (hl)
      000A5B 21 15 03              2330 	ld	hl, #789
      000A5E 39                    2331 	add	hl, sp
      000A5F 7E                    2332 	ld	a, (hl)
      000A60 12                    2333 	ld	(de), a
                                   2334 ;main.c:178: for (uint8_t y = 0; y < 18; ++y)
      000A61 21 24 03              2335 	ld	hl, #804
      000A64 39                    2336 	add	hl, sp
      000A65 34                    2337 	inc	(hl)
      000A66 C3r3Er06              2338 	jp	00188$
      000A69                       2339 00192$:
                                   2340 ;main.c:176: for (uint8_t x = 0; x < 20; ++x)
      000A69 21 23 03              2341 	ld	hl, #803
      000A6C 39                    2342 	add	hl, sp
      000A6D 34                    2343 	inc	(hl)
      000A6E C3rFCr05              2344 	jp	00191$
      000A71                       2345 00167$:
                                   2346 ;main.c:307: if (was_input_depressed(&input_state, btn_up))
      000A71 21 FE 02              2347 	ld	hl, #766
      000A74 39                    2348 	add	hl, sp
      000A75 7E                    2349 	ld	a, (hl)
      000A76 21 23 03              2350 	ld	hl, #803
      000A79 39                    2351 	add	hl, sp
      000A7A 77                    2352 	ld	(hl), a
      000A7B 21 FF 02              2353 	ld	hl, #767
      000A7E 39                    2354 	add	hl, sp
      000A7F 7E                    2355 	ld	a, (hl)
      000A80 21 24 03              2356 	ld	hl, #804
      000A83 39                    2357 	add	hl, sp
      000A84 32                    2358 	ld	(hl-), a
      000A85 3E 02                 2359 	ld	a, #0x02
      000A87 F5                    2360 	push	af
      000A88 33                    2361 	inc	sp
      000A89 2A                    2362 	ld	a, (hl+)
      000A8A 5F                    2363 	ld	e, a
      000A8B 56                    2364 	ld	d, (hl)
      000A8C D5                    2365 	push	de
      000A8D CDr77r02              2366 	call	_was_input_depressed
      000A90 E8 03                 2367 	add	sp, #3
      000A92 21 24 03              2368 	ld	hl, #804
      000A95 39                    2369 	add	hl, sp
      000A96 73                    2370 	ld	(hl), e
                                   2371 ;main.c:309: cursor_tile_y -= 1;
      000A97 21 01 03              2372 	ld	hl, #769
      000A9A 39                    2373 	add	hl, sp
      000A9B 7E                    2374 	ld	a, (hl)
      000A9C 21 20 03              2375 	ld	hl, #800
      000A9F 39                    2376 	add	hl, sp
      000AA0 77                    2377 	ld	(hl), a
                                   2378 ;main.c:307: if (was_input_depressed(&input_state, btn_up))
      000AA1 21 24 03              2379 	ld	hl, #804
      000AA4 39                    2380 	add	hl, sp
      000AA5 7E                    2381 	ld	a, (hl)
      000AA6 B7                    2382 	or	a, a
      000AA7 28 0E                 2383 	jr	Z, 00157$
                                   2384 ;main.c:309: cursor_tile_y -= 1;
      000AA9 21 20 03              2385 	ld	hl, #800
      000AAC 39                    2386 	add	hl, sp
      000AAD 7E                    2387 	ld	a, (hl)
      000AAE 3D                    2388 	dec	a
      000AAF 21 01 03              2389 	ld	hl, #769
      000AB2 39                    2390 	add	hl, sp
      000AB3 77                    2391 	ld	(hl), a
      000AB4 C3r51r0B              2392 	jp	00158$
      000AB7                       2393 00157$:
                                   2394 ;main.c:311: else if (was_input_depressed(&input_state, btn_down))
      000AB7 21 FE 02              2395 	ld	hl, #766
      000ABA 39                    2396 	add	hl, sp
      000ABB 7E                    2397 	ld	a, (hl)
      000ABC 21 23 03              2398 	ld	hl, #803
      000ABF 39                    2399 	add	hl, sp
      000AC0 77                    2400 	ld	(hl), a
      000AC1 21 FF 02              2401 	ld	hl, #767
      000AC4 39                    2402 	add	hl, sp
      000AC5 7E                    2403 	ld	a, (hl)
      000AC6 21 24 03              2404 	ld	hl, #804
      000AC9 39                    2405 	add	hl, sp
      000ACA 32                    2406 	ld	(hl-), a
      000ACB 3E 03                 2407 	ld	a, #0x03
      000ACD F5                    2408 	push	af
      000ACE 33                    2409 	inc	sp
      000ACF 2A                    2410 	ld	a, (hl+)
      000AD0 5F                    2411 	ld	e, a
      000AD1 56                    2412 	ld	d, (hl)
      000AD2 D5                    2413 	push	de
      000AD3 CDr77r02              2414 	call	_was_input_depressed
      000AD6 E8 03                 2415 	add	sp, #3
      000AD8 7B                    2416 	ld	a, e
      000AD9 B7                    2417 	or	a, a
      000ADA 28 0D                 2418 	jr	Z, 00154$
                                   2419 ;main.c:313: cursor_tile_y += 1;
      000ADC 21 20 03              2420 	ld	hl, #800
      000ADF 39                    2421 	add	hl, sp
      000AE0 7E                    2422 	ld	a, (hl)
      000AE1 3C                    2423 	inc	a
      000AE2 21 01 03              2424 	ld	hl, #769
      000AE5 39                    2425 	add	hl, sp
      000AE6 77                    2426 	ld	(hl), a
      000AE7 18 68                 2427 	jr	00158$
      000AE9                       2428 00154$:
                                   2429 ;main.c:315: else if (was_input_depressed(&input_state, btn_left))
      000AE9 21 FE 02              2430 	ld	hl, #766
      000AEC 39                    2431 	add	hl, sp
      000AED 7E                    2432 	ld	a, (hl)
      000AEE 21 23 03              2433 	ld	hl, #803
      000AF1 39                    2434 	add	hl, sp
      000AF2 77                    2435 	ld	(hl), a
      000AF3 21 FF 02              2436 	ld	hl, #767
      000AF6 39                    2437 	add	hl, sp
      000AF7 7E                    2438 	ld	a, (hl)
      000AF8 21 24 03              2439 	ld	hl, #804
      000AFB 39                    2440 	add	hl, sp
      000AFC 32                    2441 	ld	(hl-), a
      000AFD 3E 04                 2442 	ld	a, #0x04
      000AFF F5                    2443 	push	af
      000B00 33                    2444 	inc	sp
      000B01 2A                    2445 	ld	a, (hl+)
      000B02 5F                    2446 	ld	e, a
      000B03 56                    2447 	ld	d, (hl)
      000B04 D5                    2448 	push	de
      000B05 CDr77r02              2449 	call	_was_input_depressed
      000B08 E8 03                 2450 	add	sp, #3
                                   2451 ;main.c:317: cursor_tile_x -= 1;
      000B0A 21 00 03              2452 	ld	hl, #768
      000B0D 39                    2453 	add	hl, sp
      000B0E 7E                    2454 	ld	a, (hl)
      000B0F 21 20 03              2455 	ld	hl, #800
      000B12 39                    2456 	add	hl, sp
      000B13 77                    2457 	ld	(hl), a
                                   2458 ;main.c:315: else if (was_input_depressed(&input_state, btn_left))
      000B14 7B                    2459 	ld	a, e
      000B15 B7                    2460 	or	a, a
      000B16 28 09                 2461 	jr	Z, 00151$
                                   2462 ;main.c:317: cursor_tile_x -= 1;
      000B18 7E                    2463 	ld	a, (hl)
      000B19 3D                    2464 	dec	a
      000B1A 21 00 03              2465 	ld	hl, #768
      000B1D 39                    2466 	add	hl, sp
      000B1E 77                    2467 	ld	(hl), a
      000B1F 18 30                 2468 	jr	00158$
      000B21                       2469 00151$:
                                   2470 ;main.c:319: else if (was_input_depressed(&input_state, btn_right))
      000B21 21 FE 02              2471 	ld	hl, #766
      000B24 39                    2472 	add	hl, sp
      000B25 7E                    2473 	ld	a, (hl)
      000B26 21 23 03              2474 	ld	hl, #803
      000B29 39                    2475 	add	hl, sp
      000B2A 77                    2476 	ld	(hl), a
      000B2B 21 FF 02              2477 	ld	hl, #767
      000B2E 39                    2478 	add	hl, sp
      000B2F 7E                    2479 	ld	a, (hl)
      000B30 21 24 03              2480 	ld	hl, #804
      000B33 39                    2481 	add	hl, sp
      000B34 32                    2482 	ld	(hl-), a
      000B35 3E 05                 2483 	ld	a, #0x05
      000B37 F5                    2484 	push	af
      000B38 33                    2485 	inc	sp
      000B39 2A                    2486 	ld	a, (hl+)
      000B3A 5F                    2487 	ld	e, a
      000B3B 56                    2488 	ld	d, (hl)
      000B3C D5                    2489 	push	de
      000B3D CDr77r02              2490 	call	_was_input_depressed
      000B40 E8 03                 2491 	add	sp, #3
      000B42 7B                    2492 	ld	a, e
      000B43 B7                    2493 	or	a, a
      000B44 28 0B                 2494 	jr	Z, 00158$
                                   2495 ;main.c:321: cursor_tile_x += 1;
      000B46 21 20 03              2496 	ld	hl, #800
      000B49 39                    2497 	add	hl, sp
      000B4A 7E                    2498 	ld	a, (hl)
      000B4B 3C                    2499 	inc	a
      000B4C 21 00 03              2500 	ld	hl, #768
      000B4F 39                    2501 	add	hl, sp
      000B50 77                    2502 	ld	(hl), a
      000B51                       2503 00158$:
                                   2504 ;main.c:326: ? 19
      000B51 21 00 03              2505 	ld	hl, #768
      000B54 39                    2506 	add	hl, sp
      000B55 7E                    2507 	ld	a, (hl)
      000B56 3C                    2508 	inc	a
      000B57 20 0B                 2509 	jr	NZ, 00206$
      000B59 21 23 03              2510 	ld	hl, #803
      000B5C 39                    2511 	add	hl, sp
      000B5D 3E 13                 2512 	ld	a, #0x13
      000B5F 22                    2513 	ld	(hl+), a
      000B60 AF                    2514 	xor	a, a
      000B61 77                    2515 	ld	(hl), a
      000B62 18 1E                 2516 	jr	00207$
      000B64                       2517 00206$:
                                   2518 ;main.c:328: ? 0
      000B64 3E 13                 2519 	ld	a, #0x13
      000B66 21 00 03              2520 	ld	hl, #768
      000B69 39                    2521 	add	hl, sp
      000B6A 96                    2522 	sub	a, (hl)
      000B6B 30 09                 2523 	jr	NC, 00208$
      000B6D AF                    2524 	xor	a, a
      000B6E 21 23 03              2525 	ld	hl, #803
      000B71 39                    2526 	add	hl, sp
      000B72 22                    2527 	ld	(hl+), a
      000B73 77                    2528 	ld	(hl), a
      000B74 18 0C                 2529 	jr	00209$
      000B76                       2530 00208$:
                                   2531 ;main.c:329: : cursor_tile_x;
      000B76 21 00 03              2532 	ld	hl, #768
      000B79 39                    2533 	add	hl, sp
      000B7A 7E                    2534 	ld	a, (hl)
      000B7B 21 23 03              2535 	ld	hl, #803
      000B7E 39                    2536 	add	hl, sp
      000B7F 22                    2537 	ld	(hl+), a
      000B80 36 00                 2538 	ld	(hl), #0x00
      000B82                       2539 00209$:
      000B82                       2540 00207$:
      000B82 21 23 03              2541 	ld	hl, #803
      000B85 39                    2542 	add	hl, sp
      000B86 7E                    2543 	ld	a, (hl)
      000B87 21 00 03              2544 	ld	hl, #768
      000B8A 39                    2545 	add	hl, sp
                                   2546 ;main.c:333: ? 17
      000B8B 22                    2547 	ld	(hl+), a
      000B8C 7E                    2548 	ld	a, (hl)
      000B8D 3C                    2549 	inc	a
      000B8E 20 0B                 2550 	jr	NZ, 00210$
      000B90 21 23 03              2551 	ld	hl, #803
      000B93 39                    2552 	add	hl, sp
      000B94 3E 11                 2553 	ld	a, #0x11
      000B96 22                    2554 	ld	(hl+), a
      000B97 AF                    2555 	xor	a, a
      000B98 77                    2556 	ld	(hl), a
      000B99 18 1E                 2557 	jr	00211$
      000B9B                       2558 00210$:
                                   2559 ;main.c:335: ? 0
      000B9B 3E 11                 2560 	ld	a, #0x11
      000B9D 21 01 03              2561 	ld	hl, #769
      000BA0 39                    2562 	add	hl, sp
      000BA1 96                    2563 	sub	a, (hl)
      000BA2 30 09                 2564 	jr	NC, 00212$
      000BA4 AF                    2565 	xor	a, a
      000BA5 21 23 03              2566 	ld	hl, #803
      000BA8 39                    2567 	add	hl, sp
      000BA9 22                    2568 	ld	(hl+), a
      000BAA 77                    2569 	ld	(hl), a
      000BAB 18 0C                 2570 	jr	00213$
      000BAD                       2571 00212$:
                                   2572 ;main.c:336: : cursor_tile_y;
      000BAD 21 01 03              2573 	ld	hl, #769
      000BB0 39                    2574 	add	hl, sp
      000BB1 7E                    2575 	ld	a, (hl)
      000BB2 21 23 03              2576 	ld	hl, #803
      000BB5 39                    2577 	add	hl, sp
      000BB6 22                    2578 	ld	(hl+), a
      000BB7 36 00                 2579 	ld	(hl), #0x00
      000BB9                       2580 00213$:
      000BB9                       2581 00211$:
      000BB9 21 23 03              2582 	ld	hl, #803
      000BBC 39                    2583 	add	hl, sp
      000BBD 7E                    2584 	ld	a, (hl)
      000BBE 21 01 03              2585 	ld	hl, #769
      000BC1 39                    2586 	add	hl, sp
      000BC2 77                    2587 	ld	(hl), a
                                   2588 ;main.c:338: update_cursor_position(cursor_tile_x, cursor_tile_y);
      000BC3 3A                    2589 	ld	a, (hl-)
      000BC4 57                    2590 	ld	d, a
      000BC5 5E                    2591 	ld	e, (hl)
      000BC6 D5                    2592 	push	de
      000BC7 CDrE7r02              2593 	call	_update_cursor_position
      000BCA E1                    2594 	pop	hl
                                   2595 ;main.c:341: if (was_input_depressed(&input_state, btn_b))
      000BCB 21 FE 02              2596 	ld	hl, #766
      000BCE 39                    2597 	add	hl, sp
      000BCF 2A                    2598 	ld	a, (hl+)
      000BD0 4F                    2599 	ld	c, a
      000BD1 46                    2600 	ld	b, (hl)
      000BD2 3E 01                 2601 	ld	a, #0x01
      000BD4 F5                    2602 	push	af
      000BD5 33                    2603 	inc	sp
      000BD6 C5                    2604 	push	bc
      000BD7 CDr77r02              2605 	call	_was_input_depressed
      000BDA E8 03                 2606 	add	sp, #3
      000BDC 7B                    2607 	ld	a, e
      000BDD B7                    2608 	or	a, a
      000BDE CArB2r0C              2609 	jp	Z, 00168$
                                   2610 ;main.c:343: uint8_t tile_flags = board[cursor_tile_x][cursor_tile_y].tile_flags;
      000BE1 21 00 03              2611 	ld	hl, #768
      000BE4 39                    2612 	add	hl, sp
      000BE5 4E                    2613 	ld	c, (hl)
      000BE6 06 00                 2614 	ld	b, #0x00
      000BE8 69                    2615 	ld	l, c
      000BE9 60                    2616 	ld	h, b
      000BEA 29                    2617 	add	hl, hl
      000BEB 29                    2618 	add	hl, hl
      000BEC 29                    2619 	add	hl, hl
      000BED 09                    2620 	add	hl, bc
      000BEE 29                    2621 	add	hl, hl
      000BEF 29                    2622 	add	hl, hl
      000BF0 4D                    2623 	ld	c, l
      000BF1 44                    2624 	ld	b, h
      000BF2 21 04 03              2625 	ld	hl, #772
      000BF5 39                    2626 	add	hl, sp
      000BF6 2A                    2627 	ld	a,	(hl+)
      000BF7 66                    2628 	ld	h, (hl)
      000BF8 6F                    2629 	ld	l, a
      000BF9 09                    2630 	add	hl, bc
      000BFA 4D                    2631 	ld	c, l
      000BFB 44                    2632 	ld	b, h
      000BFC 21 01 03              2633 	ld	hl, #769
      000BFF 39                    2634 	add	hl, sp
      000C00 7E                    2635 	ld	a, (hl)
      000C01 87                    2636 	add	a, a
      000C02 6F                    2637 	ld	l, a
      000C03 26 00                 2638 	ld	h, #0x00
      000C05 09                    2639 	add	hl, bc
      000C06 E5                    2640 	push	hl
      000C07 7D                    2641 	ld	a, l
      000C08 21 21 03              2642 	ld	hl, #801
      000C0B 39                    2643 	add	hl, sp
      000C0C 77                    2644 	ld	(hl), a
      000C0D E1                    2645 	pop	hl
      000C0E 7C                    2646 	ld	a, h
      000C0F 21 20 03              2647 	ld	hl, #800
      000C12 39                    2648 	add	hl, sp
      000C13 32                    2649 	ld	(hl-), a
      000C14 2A                    2650 	ld	a, (hl+)
      000C15 5F                    2651 	ld	e, a
      000C16 56                    2652 	ld	d, (hl)
      000C17 6B                    2653 	ld	l, e
      000C18 62                    2654 	ld	h, d
      000C19 23                    2655 	inc	hl
      000C1A E5                    2656 	push	hl
      000C1B 7D                    2657 	ld	a, l
      000C1C 21 25 03              2658 	ld	hl, #805
      000C1F 39                    2659 	add	hl, sp
      000C20 77                    2660 	ld	(hl), a
      000C21 E1                    2661 	pop	hl
      000C22 7C                    2662 	ld	a, h
      000C23 21 24 03              2663 	ld	hl, #804
      000C26 39                    2664 	add	hl, sp
      000C27 32                    2665 	ld	(hl-), a
      000C28 2A                    2666 	ld	a, (hl+)
      000C29 5F                    2667 	ld	e, a
      000C2A 56                    2668 	ld	d, (hl)
      000C2B 1A                    2669 	ld	a, (de)
      000C2C 4F                    2670 	ld	c, a
                                   2671 ;main.c:344: uint8_t sprite_index = board[cursor_tile_x][cursor_tile_y].sprite_index;
      000C2D 21 1F 03              2672 	ld	hl,#0x31f
      000C30 39                    2673 	add	hl,sp
      000C31 2A                    2674 	ld	a, (hl+)
      000C32 5F                    2675 	ld	e, a
      000C33 56                    2676 	ld	d, (hl)
      000C34 1A                    2677 	ld	a, (de)
      000C35 47                    2678 	ld	b, a
                                   2679 ;main.c:345: uint8_t is_alive = tile_flags & k_tile_is_alive_mask;
      000C36 FArE0r02              2680 	ld	a, (#_k_tile_is_alive_mask)
                                   2681 ;main.c:347: if (!is_alive)
      000C39 A1                    2682 	and	a,c
      000C3A 20 39                 2683 	jr	NZ, 00162$
                                   2684 ;main.c:349: if (next_available_sprite_index < 39)
      000C3C 21 22 03              2685 	ld	hl, #802
      000C3F 39                    2686 	add	hl, sp
      000C40 7E                    2687 	ld	a, (hl)
      000C41 D6 27                 2688 	sub	a, #0x27
      000C43 30 5D                 2689 	jr	NC, 00163$
                                   2690 ;main.c:352: sprite_index = available_sprites[next_available_sprite_index];
      000C45 21 02 03              2691 	ld	hl,#0x302
      000C48 39                    2692 	add	hl,sp
      000C49 2A                    2693 	ld	a, (hl+)
      000C4A 5F                    2694 	ld	e, a
      000C4B 56                    2695 	ld	d, (hl)
      000C4C 21 22 03              2696 	ld	hl, #802
      000C4F 39                    2697 	add	hl, sp
      000C50 6E                    2698 	ld	l, (hl)
      000C51 26 00                 2699 	ld	h, #0x00
      000C53 19                    2700 	add	hl, de
      000C54 5D                    2701 	ld	e, l
      000C55 54                    2702 	ld	d, h
      000C56 1A                    2703 	ld	a, (de)
      000C57 47                    2704 	ld	b, a
                                   2705 ;main.c:353: next_available_sprite_index++;
      000C58 21 22 03              2706 	ld	hl, #802
      000C5B 39                    2707 	add	hl, sp
      000C5C 34                    2708 	inc	(hl)
                                   2709 ;main.c:356: update_tile_position(sprite_index, cursor_tile_x, cursor_tile_y);
      000C5D C5                    2710 	push	bc
      000C5E 21 03 03              2711 	ld	hl, #771
      000C61 39                    2712 	add	hl, sp
      000C62 3A                    2713 	ld	a, (hl-)
      000C63 57                    2714 	ld	d, a
      000C64 5E                    2715 	ld	e, (hl)
      000C65 D5                    2716 	push	de
      000C66 C5                    2717 	push	bc
      000C67 33                    2718 	inc	sp
      000C68 CDr30r03              2719 	call	_update_tile_position
      000C6B E8 03                 2720 	add	sp, #3
      000C6D C1                    2721 	pop	bc
                                   2722 ;main.c:359: tile_flags |= k_tile_is_alive_mask;
      000C6E FArE0r02              2723 	ld	a, (#_k_tile_is_alive_mask)
      000C71 B1                    2724 	or	a, c
      000C72 4F                    2725 	ld	c, a
      000C73 18 2D                 2726 	jr	00163$
      000C75                       2727 00162$:
                                   2728 ;main.c:365: update_tile_position(sprite_index, 0, 19);
      000C75 C5                    2729 	push	bc
      000C76 21 00 13              2730 	ld	hl, #0x1300
      000C79 E5                    2731 	push	hl
      000C7A C5                    2732 	push	bc
      000C7B 33                    2733 	inc	sp
      000C7C CDr30r03              2734 	call	_update_tile_position
      000C7F E8 03                 2735 	add	sp, #3
      000C81 C1                    2736 	pop	bc
                                   2737 ;main.c:368: next_available_sprite_index--;
      000C82 21 22 03              2738 	ld	hl, #802
      000C85 39                    2739 	add	hl, sp
      000C86 35                    2740 	dec	(hl)
                                   2741 ;main.c:369: available_sprites[next_available_sprite_index] = sprite_index;
      000C87 21 02 03              2742 	ld	hl,#0x302
      000C8A 39                    2743 	add	hl,sp
      000C8B 2A                    2744 	ld	a, (hl+)
      000C8C 5F                    2745 	ld	e, a
      000C8D 56                    2746 	ld	d, (hl)
      000C8E 21 22 03              2747 	ld	hl, #802
      000C91 39                    2748 	add	hl, sp
      000C92 6E                    2749 	ld	l, (hl)
      000C93 26 00                 2750 	ld	h, #0x00
      000C95 19                    2751 	add	hl, de
      000C96 5D                    2752 	ld	e, l
      000C97 54                    2753 	ld	d, h
      000C98 78                    2754 	ld	a, b
      000C99 12                    2755 	ld	(de), a
                                   2756 ;main.c:372: sprite_index = 0x00;
      000C9A 06 00                 2757 	ld	b, #0x00
                                   2758 ;main.c:375: tile_flags &= ~k_tile_is_alive_mask;
      000C9C FArE0r02              2759 	ld	a, (#_k_tile_is_alive_mask)
      000C9F 2F                    2760 	cpl
      000CA0 A1                    2761 	and	a, c
      000CA1 4F                    2762 	ld	c, a
      000CA2                       2763 00163$:
                                   2764 ;main.c:379: board[cursor_tile_x][cursor_tile_y].tile_flags = tile_flags;
      000CA2 21 23 03              2765 	ld	hl, #803
      000CA5 39                    2766 	add	hl, sp
      000CA6 2A                    2767 	ld	a,	(hl+)
      000CA7 66                    2768 	ld	h, (hl)
      000CA8 6F                    2769 	ld	l, a
      000CA9 71                    2770 	ld	(hl), c
                                   2771 ;main.c:380: board[cursor_tile_x][cursor_tile_y].sprite_index = sprite_index;
      000CAA 21 1F 03              2772 	ld	hl, #799
      000CAD 39                    2773 	add	hl, sp
      000CAE 2A                    2774 	ld	a,	(hl+)
      000CAF 66                    2775 	ld	h, (hl)
      000CB0 6F                    2776 	ld	l, a
      000CB1 70                    2777 	ld	(hl), b
      000CB2                       2778 00168$:
                                   2779 ;main.c:385: wait_vbls_done(1);
      000CB2 3E 01                 2780 	ld	a, #0x01
      000CB4 F5                    2781 	push	af
      000CB5 33                    2782 	inc	sp
      000CB6 CDrBFr02              2783 	call	_wait_vbls_done
      000CB9 33                    2784 	inc	sp
      000CBA C3rF0r04              2785 	jp	00170$
                                   2786 ;main.c:387: }
      000CBD 21 25 03              2787 	ld	hl, #805
      000CC0 39                    2788 	add	hl, sp
      000CC1 F9                    2789 	ld	sp, hl
      000CC2 C9                    2790 	ret
                                   2791 	.area _CODE
                                   2792 	.area _INITIALIZER
      000000                       2793 __xinit__k_sprites:
      000000 00                    2794 	.db #0x00	; 0
      000001 00                    2795 	.db #0x00	; 0
      000002 00                    2796 	.db #0x00	; 0
      000003 00                    2797 	.db #0x00	; 0
      000004 00                    2798 	.db #0x00	; 0
      000005 00                    2799 	.db #0x00	; 0
      000006 00                    2800 	.db #0x00	; 0
      000007 00                    2801 	.db #0x00	; 0
      000008 00                    2802 	.db #0x00	; 0
      000009 00                    2803 	.db #0x00	; 0
      00000A 00                    2804 	.db #0x00	; 0
      00000B 00                    2805 	.db #0x00	; 0
      00000C 00                    2806 	.db #0x00	; 0
      00000D 00                    2807 	.db #0x00	; 0
      00000E 00                    2808 	.db #0x00	; 0
      00000F 00                    2809 	.db #0x00	; 0
      000010 00                    2810 	.db #0x00	; 0
      000011 00                    2811 	.db #0x00	; 0
      000012 7F                    2812 	.db #0x7f	; 127
      000013 7F                    2813 	.db #0x7f	; 127
      000014 7F                    2814 	.db #0x7f	; 127
      000015 7F                    2815 	.db #0x7f	; 127
      000016 7F                    2816 	.db #0x7f	; 127
      000017 7F                    2817 	.db #0x7f	; 127
      000018 7F                    2818 	.db #0x7f	; 127
      000019 7F                    2819 	.db #0x7f	; 127
      00001A 7F                    2820 	.db #0x7f	; 127
      00001B 7F                    2821 	.db #0x7f	; 127
      00001C 7F                    2822 	.db #0x7f	; 127
      00001D 7F                    2823 	.db #0x7f	; 127
      00001E 7F                    2824 	.db #0x7f	; 127
      00001F 7F                    2825 	.db #0x7f	; 127
      000020 00                    2826 	.db #0x00	; 0
      000021 00                    2827 	.db #0x00	; 0
      000022 00                    2828 	.db #0x00	; 0
      000023 3E                    2829 	.db #0x3e	; 62
      000024 00                    2830 	.db #0x00	; 0
      000025 41                    2831 	.db #0x41	; 65	'A'
      000026 00                    2832 	.db #0x00	; 0
      000027 41                    2833 	.db #0x41	; 65	'A'
      000028 00                    2834 	.db #0x00	; 0
      000029 41                    2835 	.db #0x41	; 65	'A'
      00002A 00                    2836 	.db #0x00	; 0
      00002B 41                    2837 	.db #0x41	; 65	'A'
      00002C 00                    2838 	.db #0x00	; 0
      00002D 41                    2839 	.db #0x41	; 65	'A'
      00002E 00                    2840 	.db #0x00	; 0
      00002F 3E                    2841 	.db #0x3e	; 62
      000030 00                    2842 	.db #0x00	; 0
      000031 00                    2843 	.db #0x00	; 0
      000032 41                    2844 	.db #0x41	; 65	'A'
      000033 7F                    2845 	.db #0x7f	; 127
      000034 3E                    2846 	.db #0x3e	; 62
      000035 7F                    2847 	.db #0x7f	; 127
      000036 3E                    2848 	.db #0x3e	; 62
      000037 7F                    2849 	.db #0x7f	; 127
      000038 3E                    2850 	.db #0x3e	; 62
      000039 7F                    2851 	.db #0x7f	; 127
      00003A 3E                    2852 	.db #0x3e	; 62
      00003B 7F                    2853 	.db #0x7f	; 127
      00003C 3E                    2854 	.db #0x3e	; 62
      00003D 7F                    2855 	.db #0x7f	; 127
      00003E 41                    2856 	.db #0x41	; 65	'A'
      00003F 7F                    2857 	.db #0x7f	; 127
                                   2858 	.area _CABS (ABS)
