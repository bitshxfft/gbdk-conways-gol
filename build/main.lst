                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _update_tile_position
                                     13 	.globl _update_tile_sprite
                                     14 	.globl _update_cursor_position
                                     15 	.globl _update_cursor_sprite
                                     16 	.globl _wait_vbls_done
                                     17 	.globl _is_input_held
                                     18 	.globl _was_input_released
                                     19 	.globl _was_input_depressed
                                     20 	.globl _update_input_state
                                     21 	.globl _set_sprite_data
                                     22 	.globl _set_bkg_tiles
                                     23 	.globl _set_bkg_data
                                     24 	.globl _wait_vbl_done
                                     25 	.globl _joypad
                                     26 	.globl _k_sprites
                                     27 	.globl _k_cursor_sprite_index
                                     28 	.globl _k_cursor_live_tile_index
                                     29 	.globl _k_cursor_empty_tile_index
                                     30 	.globl _k_live_tile_index
                                     31 	.globl _k_empty_tile_index
                                     32 	.globl _k_tile_was_alive_mask
                                     33 	.globl _k_tile_is_alive_mask
                                     34 	.globl _k_tile_sprite_index_mask
                                     35 	.globl _k_execution_state_active_mask
                                     36 	.globl _k_background_tiles
                                     37 	.globl _k_background_map
                                     38 ;--------------------------------------------------------
                                     39 ; special function registers
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area _DATA
                                     45 ;--------------------------------------------------------
                                     46 ; ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area _INITIALIZED
      000000                         49 _k_sprites::
      000000                         50 	.ds 64
                                     51 ;--------------------------------------------------------
                                     52 ; absolute external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area _DABS (ABS)
                                     55 ;--------------------------------------------------------
                                     56 ; global & static initialisations
                                     57 ;--------------------------------------------------------
                                     58 	.area _HOME
                                     59 	.area _GSINIT
                                     60 	.area _GSFINAL
                                     61 	.area _GSINIT
                                     62 ;--------------------------------------------------------
                                     63 ; Home
                                     64 ;--------------------------------------------------------
                                     65 	.area _HOME
                                     66 	.area _HOME
                                     67 ;--------------------------------------------------------
                                     68 ; code
                                     69 ;--------------------------------------------------------
                                     70 	.area _CODE
                                     71 ;input.h:31: void update_input_state(struct input_state* is, uint8_t button_state)
                                     72 ;	---------------------------------
                                     73 ; Function update_input_state
                                     74 ; ---------------------------------
      000000                         75 _update_input_state::
      000000 E8 FB                   76 	add	sp, #-5
                                     77 ;input.h:34: is->previous_state = is->current_state;
      000002 F8 07                   78 	ldhl	sp,	#7
      000004 7E                      79 	ld	a, (hl)
      000005 F8 00                   80 	ldhl	sp,	#0
      000007 77                      81 	ld	(hl), a
      000008 F8 08                   82 	ldhl	sp,	#8
      00000A 7E                      83 	ld	a, (hl)
      00000B F8 01                   84 	ldhl	sp,	#1
      00000D 22                      85 	ld	(hl+), a
      00000E C1                      86 	pop	bc
      00000F C5                      87 	push	bc
      000010 03                      88 	inc	bc
      000011 0A                      89 	ld	a, (bc)
      000012 77                      90 	ld	(hl), a
      000013 D1                      91 	pop	de
      000014 D5                      92 	push	de
      000015 7E                      93 	ld	a, (hl)
      000016 12                      94 	ld	(de), a
                                     95 ;input.h:37: is->current_state = ((button_state & J_A) == J_A) << btn_a;
      000017 F8 09                   96 	ldhl	sp,	#9
      000019 7E                      97 	ld	a, (hl)
      00001A F8 03                   98 	ldhl	sp,	#3
      00001C 22                      99 	ld	(hl+), a
      00001D AF                     100 	xor	a, a
      00001E 32                     101 	ld	(hl-), a
      00001F 7E                     102 	ld	a, (hl)
      000020 E6 10                  103 	and	a, #0x10
      000022 5F                     104 	ld	e, a
      000023 16 00                  105 	ld	d, #0x00
      000025 7B                     106 	ld	a, e
      000026 D6 10                  107 	sub	a, #0x10
      000028 B2                     108 	or	a, d
      000029 3E 01                  109 	ld	a, #0x01
      00002B 28 01                  110 	jr	Z, 00104$
      00002D AF                     111 	xor	a, a
      00002E                        112 00104$:
                                    113 ;input.h:38: is->current_state |= ((button_state & J_B) == J_B) << btn_b;
      00002E 02                     114 	ld	(bc), a
      00002F 5F                     115 	ld	e, a
      000030 F8 03                  116 	ldhl	sp,	#3
      000032 7E                     117 	ld	a, (hl)
      000033 E6 20                  118 	and	a, #0x20
                                    119 ;	spillPairReg hl
                                    120 ;	spillPairReg hl
      000035 2E 00                  121 	ld	l, #0x00
      000037 D6 20                  122 	sub	a, #0x20
      000039 B5                     123 	or	a, l
      00003A 3E 01                  124 	ld	a, #0x01
      00003C 28 01                  125 	jr	Z, 00106$
      00003E AF                     126 	xor	a, a
      00003F                        127 00106$:
      00003F 87                     128 	add	a, a
      000040 B3                     129 	or	a, e
      000041 5F                     130 	ld	e, a
      000042 02                     131 	ld	(bc), a
                                    132 ;input.h:39: is->current_state |= ((button_state & J_UP) == J_UP) << btn_up;
      000043 F8 03                  133 	ldhl	sp,	#3
      000045 7E                     134 	ld	a, (hl)
      000046 E6 04                  135 	and	a, #0x04
                                    136 ;	spillPairReg hl
                                    137 ;	spillPairReg hl
      000048 2E 00                  138 	ld	l, #0x00
      00004A D6 04                  139 	sub	a, #0x04
      00004C B5                     140 	or	a, l
      00004D 3E 01                  141 	ld	a, #0x01
      00004F 28 01                  142 	jr	Z, 00108$
      000051 AF                     143 	xor	a, a
      000052                        144 00108$:
      000052 87                     145 	add	a, a
      000053 87                     146 	add	a, a
      000054 B3                     147 	or	a, e
      000055 5F                     148 	ld	e, a
      000056 02                     149 	ld	(bc), a
                                    150 ;input.h:40: is->current_state |= ((button_state & J_DOWN) == J_DOWN) << btn_down;
      000057 F8 03                  151 	ldhl	sp,	#3
      000059 7E                     152 	ld	a, (hl)
      00005A E6 08                  153 	and	a, #0x08
                                    154 ;	spillPairReg hl
                                    155 ;	spillPairReg hl
      00005C 2E 00                  156 	ld	l, #0x00
      00005E D6 08                  157 	sub	a, #0x08
      000060 B5                     158 	or	a, l
      000061 3E 01                  159 	ld	a, #0x01
      000063 28 01                  160 	jr	Z, 00110$
      000065 AF                     161 	xor	a, a
      000066                        162 00110$:
      000066 87                     163 	add	a, a
      000067 87                     164 	add	a, a
      000068 87                     165 	add	a, a
      000069 B3                     166 	or	a, e
      00006A 5F                     167 	ld	e, a
      00006B 02                     168 	ld	(bc), a
                                    169 ;input.h:41: is->current_state |= ((button_state & J_LEFT) == J_LEFT) << btn_left;
      00006C F8 03                  170 	ldhl	sp,	#3
      00006E 7E                     171 	ld	a, (hl)
      00006F E6 02                  172 	and	a, #0x02
                                    173 ;	spillPairReg hl
                                    174 ;	spillPairReg hl
      000071 2E 00                  175 	ld	l, #0x00
      000073 D6 02                  176 	sub	a, #0x02
      000075 B5                     177 	or	a, l
      000076 3E 01                  178 	ld	a, #0x01
      000078 28 01                  179 	jr	Z, 00112$
      00007A AF                     180 	xor	a, a
      00007B                        181 00112$:
      00007B CB 37                  182 	swap	a
      00007D E6 F0                  183 	and	a, #0xf0
      00007F B3                     184 	or	a, e
      000080 5F                     185 	ld	e, a
      000081 02                     186 	ld	(bc), a
                                    187 ;input.h:42: is->current_state |= ((button_state & J_RIGHT) == J_RIGHT) << btn_right;
      000082 F8 03                  188 	ldhl	sp,	#3
      000084 7E                     189 	ld	a, (hl)
      000085 E6 01                  190 	and	a, #0x01
                                    191 ;	spillPairReg hl
                                    192 ;	spillPairReg hl
      000087 2E 00                  193 	ld	l, #0x00
      000089 3D                     194 	dec	a
      00008A B5                     195 	or	a, l
      00008B 3E 01                  196 	ld	a, #0x01
      00008D 28 01                  197 	jr	Z, 00114$
      00008F AF                     198 	xor	a, a
      000090                        199 00114$:
      000090 CB 37                  200 	swap	a
      000092 07                     201 	rlca
      000093 E6 E0                  202 	and	a, #0xe0
      000095 B3                     203 	or	a, e
      000096 5F                     204 	ld	e, a
      000097 02                     205 	ld	(bc), a
                                    206 ;input.h:43: is->current_state |= ((button_state & J_START) == J_START) << btn_start;
      000098 F8 03                  207 	ldhl	sp,	#3
      00009A 7E                     208 	ld	a, (hl)
      00009B E6 80                  209 	and	a, #0x80
                                    210 ;	spillPairReg hl
                                    211 ;	spillPairReg hl
      00009D 2E 00                  212 	ld	l, #0x00
      00009F D6 80                  213 	sub	a, #0x80
      0000A1 B5                     214 	or	a, l
      0000A2 3E 01                  215 	ld	a, #0x01
      0000A4 28 01                  216 	jr	Z, 00116$
      0000A6 AF                     217 	xor	a, a
      0000A7                        218 00116$:
      0000A7 0F                     219 	rrca
      0000A8 0F                     220 	rrca
      0000A9 E6 C0                  221 	and	a, #0xc0
      0000AB B3                     222 	or	a, e
      0000AC 5F                     223 	ld	e, a
      0000AD 02                     224 	ld	(bc), a
                                    225 ;input.h:44: is->current_state |= ((button_state & J_SELECT) == J_SELECT) << btn_select;
      0000AE F8 03                  226 	ldhl	sp,	#3
      0000B0 7E                     227 	ld	a, (hl)
      0000B1 E6 40                  228 	and	a, #0x40
                                    229 ;	spillPairReg hl
                                    230 ;	spillPairReg hl
      0000B3 2E 00                  231 	ld	l, #0x00
      0000B5 D6 40                  232 	sub	a, #0x40
      0000B7 B5                     233 	or	a, l
      0000B8 3E 01                  234 	ld	a, #0x01
      0000BA 28 01                  235 	jr	Z, 00118$
      0000BC AF                     236 	xor	a, a
      0000BD                        237 00118$:
      0000BD 0F                     238 	rrca
      0000BE E6 80                  239 	and	a, #0x80
      0000C0 B3                     240 	or	a, e
      0000C1 57                     241 	ld	d, a
      0000C2 02                     242 	ld	(bc), a
                                    243 ;input.h:47: is->held_buttons = is->previous_state & is->current_state;
      0000C3 C1                     244 	pop	bc
      0000C4 C5                     245 	push	bc
      0000C5 03                     246 	inc	bc
      0000C6 03                     247 	inc	bc
      0000C7 F8 02                  248 	ldhl	sp,	#2
                                    249 ;input.h:50: is->depressed_buttons = (is->current_state ^ is->held_buttons);
                                    250 ;input.h:53: is->released_buttons = (is->previous_state ^ is->held_buttons);
      0000C9 3A                     251 	ld	a, (hl-)
      0000CA 2B                     252 	dec	hl
      0000CB A2                     253 	and	a, d
      0000CC 5F                     254 	ld	e, a
      0000CD 02                     255 	ld	(bc), a
      0000CE C1                     256 	pop	bc
      0000CF C5                     257 	push	bc
      0000D0 03                     258 	inc	bc
      0000D1 03                     259 	inc	bc
      0000D2 03                     260 	inc	bc
      0000D3 7A                     261 	ld	a, d
      0000D4 AB                     262 	xor	a, e
      0000D5 02                     263 	ld	(bc), a
      0000D6 D5                     264 	push	de
      0000D7 2A                     265 	ld	a, (hl+)
      0000D8 5F                     266 	ld	e, a
      0000D9 56                     267 	ld	d, (hl)
      0000DA 21 04 00               268 	ld	hl, #0x0004
      0000DD 19                     269 	add	hl, de
      0000DE D1                     270 	pop	de
      0000DF 4D                     271 	ld	c, l
      0000E0 44                     272 	ld	b, h
      0000E1 F8 02                  273 	ldhl	sp,	#2
      0000E3 7E                     274 	ld	a, (hl)
      0000E4 AB                     275 	xor	a, e
      0000E5 02                     276 	ld	(bc), a
                                    277 ;input.h:54: }
      0000E6 E8 05                  278 	add	sp, #5
      0000E8 C9                     279 	ret
      0000E9                        280 _k_background_map:
      0000E9 00                     281 	.db #0x00	; 0
      0000EA 00                     282 	.db #0x00	; 0
      0000EB 00                     283 	.db #0x00	; 0
      0000EC 00                     284 	.db #0x00	; 0
      0000ED 00                     285 	.db #0x00	; 0
      0000EE 00                     286 	.db #0x00	; 0
      0000EF 00                     287 	.db #0x00	; 0
      0000F0 00                     288 	.db #0x00	; 0
      0000F1 00                     289 	.db #0x00	; 0
      0000F2 00                     290 	.db #0x00	; 0
      0000F3 00                     291 	.db #0x00	; 0
      0000F4 00                     292 	.db #0x00	; 0
      0000F5 00                     293 	.db #0x00	; 0
      0000F6 00                     294 	.db #0x00	; 0
      0000F7 00                     295 	.db #0x00	; 0
      0000F8 00                     296 	.db #0x00	; 0
      0000F9 00                     297 	.db #0x00	; 0
      0000FA 00                     298 	.db #0x00	; 0
      0000FB 00                     299 	.db #0x00	; 0
      0000FC 00                     300 	.db #0x00	; 0
      0000FD 00                     301 	.db #0x00	; 0
      0000FE 00                     302 	.db #0x00	; 0
      0000FF 00                     303 	.db #0x00	; 0
      000100 00                     304 	.db #0x00	; 0
      000101 00                     305 	.db #0x00	; 0
      000102 00                     306 	.db #0x00	; 0
      000103 00                     307 	.db #0x00	; 0
      000104 00                     308 	.db #0x00	; 0
      000105 00                     309 	.db #0x00	; 0
      000106 00                     310 	.db #0x00	; 0
      000107 00                     311 	.db #0x00	; 0
      000108 00                     312 	.db #0x00	; 0
      000109 00                     313 	.db #0x00	; 0
      00010A 00                     314 	.db #0x00	; 0
      00010B 00                     315 	.db #0x00	; 0
      00010C 00                     316 	.db #0x00	; 0
      00010D 00                     317 	.db #0x00	; 0
      00010E 00                     318 	.db #0x00	; 0
      00010F 00                     319 	.db #0x00	; 0
      000110 00                     320 	.db #0x00	; 0
      000111 00                     321 	.db #0x00	; 0
      000112 00                     322 	.db #0x00	; 0
      000113 00                     323 	.db #0x00	; 0
      000114 00                     324 	.db #0x00	; 0
      000115 00                     325 	.db #0x00	; 0
      000116 00                     326 	.db #0x00	; 0
      000117 00                     327 	.db #0x00	; 0
      000118 00                     328 	.db #0x00	; 0
      000119 00                     329 	.db #0x00	; 0
      00011A 00                     330 	.db #0x00	; 0
      00011B 00                     331 	.db #0x00	; 0
      00011C 00                     332 	.db #0x00	; 0
      00011D 00                     333 	.db #0x00	; 0
      00011E 00                     334 	.db #0x00	; 0
      00011F 00                     335 	.db #0x00	; 0
      000120 00                     336 	.db #0x00	; 0
      000121 00                     337 	.db #0x00	; 0
      000122 00                     338 	.db #0x00	; 0
      000123 00                     339 	.db #0x00	; 0
      000124 00                     340 	.db #0x00	; 0
      000125 00                     341 	.db #0x00	; 0
      000126 00                     342 	.db #0x00	; 0
      000127 00                     343 	.db #0x00	; 0
      000128 00                     344 	.db #0x00	; 0
      000129 00                     345 	.db #0x00	; 0
      00012A 00                     346 	.db #0x00	; 0
      00012B 00                     347 	.db #0x00	; 0
      00012C 00                     348 	.db #0x00	; 0
      00012D 00                     349 	.db #0x00	; 0
      00012E 00                     350 	.db #0x00	; 0
      00012F 00                     351 	.db #0x00	; 0
      000130 00                     352 	.db #0x00	; 0
      000131 00                     353 	.db #0x00	; 0
      000132 00                     354 	.db #0x00	; 0
      000133 00                     355 	.db #0x00	; 0
      000134 00                     356 	.db #0x00	; 0
      000135 00                     357 	.db #0x00	; 0
      000136 00                     358 	.db #0x00	; 0
      000137 00                     359 	.db #0x00	; 0
      000138 00                     360 	.db #0x00	; 0
      000139 00                     361 	.db #0x00	; 0
      00013A 00                     362 	.db #0x00	; 0
      00013B 00                     363 	.db #0x00	; 0
      00013C 00                     364 	.db #0x00	; 0
      00013D 00                     365 	.db #0x00	; 0
      00013E 00                     366 	.db #0x00	; 0
      00013F 00                     367 	.db #0x00	; 0
      000140 00                     368 	.db #0x00	; 0
      000141 00                     369 	.db #0x00	; 0
      000142 00                     370 	.db #0x00	; 0
      000143 00                     371 	.db #0x00	; 0
      000144 00                     372 	.db #0x00	; 0
      000145 00                     373 	.db #0x00	; 0
      000146 00                     374 	.db #0x00	; 0
      000147 00                     375 	.db #0x00	; 0
      000148 00                     376 	.db #0x00	; 0
      000149 00                     377 	.db #0x00	; 0
      00014A 00                     378 	.db #0x00	; 0
      00014B 00                     379 	.db #0x00	; 0
      00014C 00                     380 	.db #0x00	; 0
      00014D 00                     381 	.db #0x00	; 0
      00014E 00                     382 	.db #0x00	; 0
      00014F 00                     383 	.db #0x00	; 0
      000150 00                     384 	.db #0x00	; 0
      000151 00                     385 	.db #0x00	; 0
      000152 00                     386 	.db #0x00	; 0
      000153 00                     387 	.db #0x00	; 0
      000154 00                     388 	.db #0x00	; 0
      000155 00                     389 	.db #0x00	; 0
      000156 00                     390 	.db #0x00	; 0
      000157 00                     391 	.db #0x00	; 0
      000158 00                     392 	.db #0x00	; 0
      000159 00                     393 	.db #0x00	; 0
      00015A 00                     394 	.db #0x00	; 0
      00015B 00                     395 	.db #0x00	; 0
      00015C 00                     396 	.db #0x00	; 0
      00015D 00                     397 	.db #0x00	; 0
      00015E 00                     398 	.db #0x00	; 0
      00015F 00                     399 	.db #0x00	; 0
      000160 00                     400 	.db #0x00	; 0
      000161 00                     401 	.db #0x00	; 0
      000162 00                     402 	.db #0x00	; 0
      000163 00                     403 	.db #0x00	; 0
      000164 00                     404 	.db #0x00	; 0
      000165 00                     405 	.db #0x00	; 0
      000166 00                     406 	.db #0x00	; 0
      000167 00                     407 	.db #0x00	; 0
      000168 00                     408 	.db #0x00	; 0
      000169 00                     409 	.db #0x00	; 0
      00016A 00                     410 	.db #0x00	; 0
      00016B 00                     411 	.db #0x00	; 0
      00016C 00                     412 	.db #0x00	; 0
      00016D 00                     413 	.db #0x00	; 0
      00016E 00                     414 	.db #0x00	; 0
      00016F 00                     415 	.db #0x00	; 0
      000170 00                     416 	.db #0x00	; 0
      000171 00                     417 	.db #0x00	; 0
      000172 00                     418 	.db #0x00	; 0
      000173 00                     419 	.db #0x00	; 0
      000174 00                     420 	.db #0x00	; 0
      000175 00                     421 	.db #0x00	; 0
      000176 00                     422 	.db #0x00	; 0
      000177 00                     423 	.db #0x00	; 0
      000178 00                     424 	.db #0x00	; 0
      000179 00                     425 	.db #0x00	; 0
      00017A 00                     426 	.db #0x00	; 0
      00017B 00                     427 	.db #0x00	; 0
      00017C 00                     428 	.db #0x00	; 0
      00017D 00                     429 	.db #0x00	; 0
      00017E 00                     430 	.db #0x00	; 0
      00017F 00                     431 	.db #0x00	; 0
      000180 00                     432 	.db #0x00	; 0
      000181 00                     433 	.db #0x00	; 0
      000182 00                     434 	.db #0x00	; 0
      000183 00                     435 	.db #0x00	; 0
      000184 00                     436 	.db #0x00	; 0
      000185 00                     437 	.db #0x00	; 0
      000186 00                     438 	.db #0x00	; 0
      000187 00                     439 	.db #0x00	; 0
      000188 00                     440 	.db #0x00	; 0
      000189 00                     441 	.db #0x00	; 0
      00018A 00                     442 	.db #0x00	; 0
      00018B 00                     443 	.db #0x00	; 0
      00018C 00                     444 	.db #0x00	; 0
      00018D 00                     445 	.db #0x00	; 0
      00018E 00                     446 	.db #0x00	; 0
      00018F 00                     447 	.db #0x00	; 0
      000190 00                     448 	.db #0x00	; 0
      000191 00                     449 	.db #0x00	; 0
      000192 00                     450 	.db #0x00	; 0
      000193 00                     451 	.db #0x00	; 0
      000194 00                     452 	.db #0x00	; 0
      000195 00                     453 	.db #0x00	; 0
      000196 00                     454 	.db #0x00	; 0
      000197 00                     455 	.db #0x00	; 0
      000198 00                     456 	.db #0x00	; 0
      000199 00                     457 	.db #0x00	; 0
      00019A 00                     458 	.db #0x00	; 0
      00019B 00                     459 	.db #0x00	; 0
      00019C 00                     460 	.db #0x00	; 0
      00019D 00                     461 	.db #0x00	; 0
      00019E 00                     462 	.db #0x00	; 0
      00019F 00                     463 	.db #0x00	; 0
      0001A0 00                     464 	.db #0x00	; 0
      0001A1 00                     465 	.db #0x00	; 0
      0001A2 00                     466 	.db #0x00	; 0
      0001A3 00                     467 	.db #0x00	; 0
      0001A4 00                     468 	.db #0x00	; 0
      0001A5 00                     469 	.db #0x00	; 0
      0001A6 00                     470 	.db #0x00	; 0
      0001A7 00                     471 	.db #0x00	; 0
      0001A8 00                     472 	.db #0x00	; 0
      0001A9 00                     473 	.db #0x00	; 0
      0001AA 00                     474 	.db #0x00	; 0
      0001AB 00                     475 	.db #0x00	; 0
      0001AC 00                     476 	.db #0x00	; 0
      0001AD 00                     477 	.db #0x00	; 0
      0001AE 00                     478 	.db #0x00	; 0
      0001AF 00                     479 	.db #0x00	; 0
      0001B0 00                     480 	.db #0x00	; 0
      0001B1 00                     481 	.db #0x00	; 0
      0001B2 00                     482 	.db #0x00	; 0
      0001B3 00                     483 	.db #0x00	; 0
      0001B4 00                     484 	.db #0x00	; 0
      0001B5 00                     485 	.db #0x00	; 0
      0001B6 00                     486 	.db #0x00	; 0
      0001B7 00                     487 	.db #0x00	; 0
      0001B8 00                     488 	.db #0x00	; 0
      0001B9 00                     489 	.db #0x00	; 0
      0001BA 00                     490 	.db #0x00	; 0
      0001BB 00                     491 	.db #0x00	; 0
      0001BC 00                     492 	.db #0x00	; 0
      0001BD 00                     493 	.db #0x00	; 0
      0001BE 00                     494 	.db #0x00	; 0
      0001BF 00                     495 	.db #0x00	; 0
      0001C0 00                     496 	.db #0x00	; 0
      0001C1 00                     497 	.db #0x00	; 0
      0001C2 00                     498 	.db #0x00	; 0
      0001C3 00                     499 	.db #0x00	; 0
      0001C4 00                     500 	.db #0x00	; 0
      0001C5 00                     501 	.db #0x00	; 0
      0001C6 00                     502 	.db #0x00	; 0
      0001C7 00                     503 	.db #0x00	; 0
      0001C8 00                     504 	.db #0x00	; 0
      0001C9 00                     505 	.db #0x00	; 0
      0001CA 00                     506 	.db #0x00	; 0
      0001CB 00                     507 	.db #0x00	; 0
      0001CC 00                     508 	.db #0x00	; 0
      0001CD 00                     509 	.db #0x00	; 0
      0001CE 00                     510 	.db #0x00	; 0
      0001CF 00                     511 	.db #0x00	; 0
      0001D0 00                     512 	.db #0x00	; 0
      0001D1 00                     513 	.db #0x00	; 0
      0001D2 00                     514 	.db #0x00	; 0
      0001D3 00                     515 	.db #0x00	; 0
      0001D4 00                     516 	.db #0x00	; 0
      0001D5 00                     517 	.db #0x00	; 0
      0001D6 00                     518 	.db #0x00	; 0
      0001D7 00                     519 	.db #0x00	; 0
      0001D8 00                     520 	.db #0x00	; 0
      0001D9 00                     521 	.db #0x00	; 0
      0001DA 00                     522 	.db #0x00	; 0
      0001DB 00                     523 	.db #0x00	; 0
      0001DC 00                     524 	.db #0x00	; 0
      0001DD 00                     525 	.db #0x00	; 0
      0001DE 00                     526 	.db #0x00	; 0
      0001DF 00                     527 	.db #0x00	; 0
      0001E0 00                     528 	.db #0x00	; 0
      0001E1 00                     529 	.db #0x00	; 0
      0001E2 00                     530 	.db #0x00	; 0
      0001E3 00                     531 	.db #0x00	; 0
      0001E4 00                     532 	.db #0x00	; 0
      0001E5 00                     533 	.db #0x00	; 0
      0001E6 00                     534 	.db #0x00	; 0
      0001E7 00                     535 	.db #0x00	; 0
      0001E8 00                     536 	.db #0x00	; 0
      0001E9 00                     537 	.db #0x00	; 0
      0001EA 00                     538 	.db #0x00	; 0
      0001EB 00                     539 	.db #0x00	; 0
      0001EC 00                     540 	.db #0x00	; 0
      0001ED 00                     541 	.db #0x00	; 0
      0001EE 00                     542 	.db #0x00	; 0
      0001EF 00                     543 	.db #0x00	; 0
      0001F0 00                     544 	.db #0x00	; 0
      0001F1 00                     545 	.db #0x00	; 0
      0001F2 00                     546 	.db #0x00	; 0
      0001F3 00                     547 	.db #0x00	; 0
      0001F4 00                     548 	.db #0x00	; 0
      0001F5 00                     549 	.db #0x00	; 0
      0001F6 00                     550 	.db #0x00	; 0
      0001F7 00                     551 	.db #0x00	; 0
      0001F8 00                     552 	.db #0x00	; 0
      0001F9 00                     553 	.db #0x00	; 0
      0001FA 00                     554 	.db #0x00	; 0
      0001FB 00                     555 	.db #0x00	; 0
      0001FC 00                     556 	.db #0x00	; 0
      0001FD 00                     557 	.db #0x00	; 0
      0001FE 00                     558 	.db #0x00	; 0
      0001FF 00                     559 	.db #0x00	; 0
      000200 00                     560 	.db #0x00	; 0
      000201 00                     561 	.db #0x00	; 0
      000202 00                     562 	.db #0x00	; 0
      000203 00                     563 	.db #0x00	; 0
      000204 00                     564 	.db #0x00	; 0
      000205 00                     565 	.db #0x00	; 0
      000206 00                     566 	.db #0x00	; 0
      000207 00                     567 	.db #0x00	; 0
      000208 00                     568 	.db #0x00	; 0
      000209 00                     569 	.db #0x00	; 0
      00020A 00                     570 	.db #0x00	; 0
      00020B 00                     571 	.db #0x00	; 0
      00020C 00                     572 	.db #0x00	; 0
      00020D 00                     573 	.db #0x00	; 0
      00020E 00                     574 	.db #0x00	; 0
      00020F 00                     575 	.db #0x00	; 0
      000210 00                     576 	.db #0x00	; 0
      000211 00                     577 	.db #0x00	; 0
      000212 00                     578 	.db #0x00	; 0
      000213 00                     579 	.db #0x00	; 0
      000214 00                     580 	.db #0x00	; 0
      000215 00                     581 	.db #0x00	; 0
      000216 00                     582 	.db #0x00	; 0
      000217 00                     583 	.db #0x00	; 0
      000218 00                     584 	.db #0x00	; 0
      000219 00                     585 	.db #0x00	; 0
      00021A 00                     586 	.db #0x00	; 0
      00021B 00                     587 	.db #0x00	; 0
      00021C 00                     588 	.db #0x00	; 0
      00021D 00                     589 	.db #0x00	; 0
      00021E 00                     590 	.db #0x00	; 0
      00021F 00                     591 	.db #0x00	; 0
      000220 00                     592 	.db #0x00	; 0
      000221 00                     593 	.db #0x00	; 0
      000222 00                     594 	.db #0x00	; 0
      000223 00                     595 	.db #0x00	; 0
      000224 00                     596 	.db #0x00	; 0
      000225 00                     597 	.db #0x00	; 0
      000226 00                     598 	.db #0x00	; 0
      000227 00                     599 	.db #0x00	; 0
      000228 00                     600 	.db #0x00	; 0
      000229 00                     601 	.db #0x00	; 0
      00022A 00                     602 	.db #0x00	; 0
      00022B 00                     603 	.db #0x00	; 0
      00022C 00                     604 	.db #0x00	; 0
      00022D 00                     605 	.db #0x00	; 0
      00022E 00                     606 	.db #0x00	; 0
      00022F 00                     607 	.db #0x00	; 0
      000230 00                     608 	.db #0x00	; 0
      000231 00                     609 	.db #0x00	; 0
      000232 00                     610 	.db #0x00	; 0
      000233 00                     611 	.db #0x00	; 0
      000234 00                     612 	.db #0x00	; 0
      000235 00                     613 	.db #0x00	; 0
      000236 00                     614 	.db #0x00	; 0
      000237 00                     615 	.db #0x00	; 0
      000238 00                     616 	.db #0x00	; 0
      000239 00                     617 	.db #0x00	; 0
      00023A 00                     618 	.db #0x00	; 0
      00023B 00                     619 	.db #0x00	; 0
      00023C 00                     620 	.db #0x00	; 0
      00023D 00                     621 	.db #0x00	; 0
      00023E 00                     622 	.db #0x00	; 0
      00023F 00                     623 	.db #0x00	; 0
      000240 00                     624 	.db #0x00	; 0
      000241 00                     625 	.db #0x00	; 0
      000242 00                     626 	.db #0x00	; 0
      000243 00                     627 	.db #0x00	; 0
      000244 00                     628 	.db #0x00	; 0
      000245 00                     629 	.db #0x00	; 0
      000246 00                     630 	.db #0x00	; 0
      000247 00                     631 	.db #0x00	; 0
      000248 00                     632 	.db #0x00	; 0
      000249 00                     633 	.db #0x00	; 0
      00024A 00                     634 	.db #0x00	; 0
      00024B 00                     635 	.db #0x00	; 0
      00024C 00                     636 	.db #0x00	; 0
      00024D 00                     637 	.db #0x00	; 0
      00024E 00                     638 	.db #0x00	; 0
      00024F 00                     639 	.db #0x00	; 0
      000250 00                     640 	.db #0x00	; 0
      000251                        641 _k_background_tiles:
      000251 FF                     642 	.db #0xff	; 255
      000252 00                     643 	.db #0x00	; 0
      000253 80                     644 	.db #0x80	; 128
      000254 00                     645 	.db #0x00	; 0
      000255 80                     646 	.db #0x80	; 128
      000256 00                     647 	.db #0x00	; 0
      000257 80                     648 	.db #0x80	; 128
      000258 00                     649 	.db #0x00	; 0
      000259 80                     650 	.db #0x80	; 128
      00025A 00                     651 	.db #0x00	; 0
      00025B 80                     652 	.db #0x80	; 128
      00025C 00                     653 	.db #0x00	; 0
      00025D 80                     654 	.db #0x80	; 128
      00025E 00                     655 	.db #0x00	; 0
      00025F 80                     656 	.db #0x80	; 128
      000260 00                     657 	.db #0x00	; 0
      000261 FF                     658 	.db #0xff	; 255
      000262 00                     659 	.db #0x00	; 0
      000263 80                     660 	.db #0x80	; 128
      000264 00                     661 	.db #0x00	; 0
      000265 80                     662 	.db #0x80	; 128
      000266 00                     663 	.db #0x00	; 0
      000267 80                     664 	.db #0x80	; 128
      000268 00                     665 	.db #0x00	; 0
      000269 80                     666 	.db #0x80	; 128
      00026A 00                     667 	.db #0x00	; 0
      00026B 80                     668 	.db #0x80	; 128
      00026C 00                     669 	.db #0x00	; 0
      00026D 80                     670 	.db #0x80	; 128
      00026E 00                     671 	.db #0x00	; 0
      00026F 80                     672 	.db #0x80	; 128
      000270 00                     673 	.db #0x00	; 0
      000271                        674 _SCREEN_MIN_X:
      000271 08                     675 	.db #0x08	; 8
      000272                        676 _SCREEN_MIN_Y:
      000272 10                     677 	.db #0x10	; 16
      000273                        678 _SCREEN_WIDTH:
      000273 A0                     679 	.db #0xa0	; 160
      000274                        680 _SCREEN_HEIGHT:
      000274 90                     681 	.db #0x90	; 144
      000275                        682 _SPRITE_TILE_WIDTH:
      000275 08                     683 	.db #0x08	; 8
      000276                        684 _SPRITE_TILE_HEIGHT:
      000276 08                     685 	.db #0x08	; 8
                                    686 ;input.h:58: uint8_t was_input_depressed(struct input_state* is, uint8_t button)
                                    687 ;	---------------------------------
                                    688 ; Function was_input_depressed
                                    689 ; ---------------------------------
      000277                        690 _was_input_depressed::
                                    691 ;input.h:60: return is->depressed_buttons & (1 << button);
      000277 F8 02                  692 	ldhl	sp,	#2
      000279 2A                     693 	ld	a, (hl+)
      00027A 4F                     694 	ld	c, a
      00027B 2A                     695 	ld	a, (hl+)
      00027C 47                     696 	ld	b, a
      00027D 03                     697 	inc	bc
      00027E 03                     698 	inc	bc
      00027F 03                     699 	inc	bc
      000280 0A                     700 	ld	a, (bc)
      000281 4E                     701 	ld	c, (hl)
      000282 06 01                  702 	ld	b, #0x01
      000284 0C                     703 	inc	c
      000285 18 02                  704 	jr	00104$
      000287                        705 00103$:
      000287 CB 20                  706 	sla	b
      000289                        707 00104$:
      000289 0D                     708 	dec	c
      00028A 20 FB                  709 	jr	NZ,00103$
      00028C A0                     710 	and	a, b
      00028D 5F                     711 	ld	e, a
                                    712 ;input.h:61: }
      00028E C9                     713 	ret
                                    714 ;input.h:63: uint8_t was_input_released(struct input_state* is, uint8_t button)
                                    715 ;	---------------------------------
                                    716 ; Function was_input_released
                                    717 ; ---------------------------------
      00028F                        718 _was_input_released::
                                    719 ;input.h:65: return is->released_buttons & (1 << button);
      00028F F8 02                  720 	ldhl	sp,	#2
      000291 2A                     721 	ld	a, (hl+)
      000292 4F                     722 	ld	c, a
      000293 46                     723 	ld	b, (hl)
      000294 21 04 00               724 	ld	hl, #0x0004
      000297 09                     725 	add	hl, bc
      000298 4E                     726 	ld	c, (hl)
      000299 F8 04                  727 	ldhl	sp,	#4
      00029B 46                     728 	ld	b, (hl)
      00029C 3E 01                  729 	ld	a, #0x01
      00029E 04                     730 	inc	b
      00029F 18 01                  731 	jr	00104$
      0002A1                        732 00103$:
      0002A1 87                     733 	add	a, a
      0002A2                        734 00104$:
      0002A2 05                     735 	dec	b
      0002A3 20 FC                  736 	jr	NZ,00103$
      0002A5 A1                     737 	and	a, c
      0002A6 5F                     738 	ld	e, a
                                    739 ;input.h:66: }
      0002A7 C9                     740 	ret
                                    741 ;input.h:68: uint8_t is_input_held(struct input_state* is, uint8_t button)
                                    742 ;	---------------------------------
                                    743 ; Function is_input_held
                                    744 ; ---------------------------------
      0002A8                        745 _is_input_held::
                                    746 ;input.h:70: return is->held_buttons & (1 << button);
      0002A8 F8 02                  747 	ldhl	sp,	#2
      0002AA 2A                     748 	ld	a, (hl+)
      0002AB 4F                     749 	ld	c, a
      0002AC 2A                     750 	ld	a, (hl+)
      0002AD 47                     751 	ld	b, a
      0002AE 03                     752 	inc	bc
      0002AF 03                     753 	inc	bc
      0002B0 0A                     754 	ld	a, (bc)
      0002B1 4E                     755 	ld	c, (hl)
      0002B2 06 01                  756 	ld	b, #0x01
      0002B4 0C                     757 	inc	c
      0002B5 18 02                  758 	jr	00104$
      0002B7                        759 00103$:
      0002B7 CB 20                  760 	sla	b
      0002B9                        761 00104$:
      0002B9 0D                     762 	dec	c
      0002BA 20 FB                  763 	jr	NZ,00103$
      0002BC A0                     764 	and	a, b
      0002BD 5F                     765 	ld	e, a
                                    766 ;input.h:71: }
      0002BE C9                     767 	ret
                                    768 ;utility.h:6: void wait_vbls_done(uint8_t num_loops)
                                    769 ;	---------------------------------
                                    770 ; Function wait_vbls_done
                                    771 ; ---------------------------------
      0002BF                        772 _wait_vbls_done::
                                    773 ;utility.h:8: for (uint8_t loop_counter = 0; loop_counter < num_loops; ++loop_counter)
      0002BF 0E 00                  774 	ld	c, #0x00
      0002C1                        775 00103$:
      0002C1 79                     776 	ld	a, c
      0002C2 F8 02                  777 	ldhl	sp,	#2
      0002C4 96                     778 	sub	a, (hl)
      0002C5 D0                     779 	ret	NC
                                    780 ;utility.h:10: wait_vbl_done();
      0002C6 CDr00r00               781 	call	_wait_vbl_done
                                    782 ;utility.h:8: for (uint8_t loop_counter = 0; loop_counter < num_loops; ++loop_counter)
      0002C9 0C                     783 	inc	c
                                    784 ;utility.h:12: }
      0002CA 18 F5                  785 	jr	00103$
                                    786 ;main.c:38: void update_cursor_sprite(uint8_t tile_index)
                                    787 ;	---------------------------------
                                    788 ; Function update_cursor_sprite
                                    789 ; ---------------------------------
      0002CC                        790 _update_cursor_sprite::
                                    791 ;main.c:40: set_sprite_tile(k_cursor_sprite_index, tile_index);
      0002CC F8 02                  792 	ldhl	sp,	#2
      0002CE 4E                     793 	ld	c, (hl)
      0002CF 21rE7r02               794 	ld	hl, #_k_cursor_sprite_index
                                    795 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0002D2 6E                     796 	ld	l, (hl)
                                    797 ;	spillPairReg hl
                                    798 ;	spillPairReg hl
      0002D3 26 00                  799 	ld	h, #0x00
                                    800 ;	spillPairReg hl
                                    801 ;	spillPairReg hl
      0002D5 29                     802 	add	hl, hl
      0002D6 29                     803 	add	hl, hl
      0002D7 11r00r00               804 	ld	de, #_shadow_OAM
      0002DA 19                     805 	add	hl, de
      0002DB 23                     806 	inc	hl
      0002DC 23                     807 	inc	hl
      0002DD 71                     808 	ld	(hl), c
                                    809 ;main.c:40: set_sprite_tile(k_cursor_sprite_index, tile_index);
                                    810 ;main.c:41: }
      0002DE C9                     811 	ret
      0002DF                        812 _k_execution_state_active_mask:
      0002DF 01                     813 	.db #0x01	; 1
      0002E0                        814 _k_tile_sprite_index_mask:
      0002E0 3F                     815 	.db #0x3f	; 63
      0002E1                        816 _k_tile_is_alive_mask:
      0002E1 40                     817 	.db #0x40	; 64
      0002E2                        818 _k_tile_was_alive_mask:
      0002E2 80                     819 	.db #0x80	; 128
      0002E3                        820 _k_empty_tile_index:
      0002E3 00                     821 	.db #0x00	; 0
      0002E4                        822 _k_live_tile_index:
      0002E4 01                     823 	.db #0x01	; 1
      0002E5                        824 _k_cursor_empty_tile_index:
      0002E5 02                     825 	.db #0x02	; 2
      0002E6                        826 _k_cursor_live_tile_index:
      0002E6 03                     827 	.db #0x03	; 3
      0002E7                        828 _k_cursor_sprite_index:
      0002E7 00                     829 	.db #0x00	; 0
                                    830 ;main.c:43: void update_cursor_position(uint8_t tile_x, uint8_t tile_y)
                                    831 ;	---------------------------------
                                    832 ; Function update_cursor_position
                                    833 ; ---------------------------------
      0002E8                        834 _update_cursor_position::
                                    835 ;main.c:47: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
      0002E8 FAr76r02               836 	ld	a, (#_SPRITE_TILE_HEIGHT)
      0002EB F5                     837 	push	af
      0002EC 33                     838 	inc	sp
      0002ED F8 04                  839 	ldhl	sp,	#4
      0002EF 7E                     840 	ld	a, (hl)
      0002F0 F5                     841 	push	af
      0002F1 33                     842 	inc	sp
      0002F2 CDr00r00               843 	call	__muluchar
      0002F5 E1                     844 	pop	hl
      0002F6 FAr72r02               845 	ld	a, (#_SCREEN_MIN_Y)
      0002F9 83                     846 	add	a, e
      0002FA 47                     847 	ld	b, a
                                    848 ;main.c:46: SCREEN_MIN_X + (tile_x * SPRITE_TILE_WIDTH),
      0002FB FAr75r02               849 	ld	a, (#_SPRITE_TILE_WIDTH)
      0002FE C5                     850 	push	bc
      0002FF F5                     851 	push	af
      000300 33                     852 	inc	sp
      000301 F8 05                  853 	ldhl	sp,	#5
      000303 7E                     854 	ld	a, (hl)
      000304 F5                     855 	push	af
      000305 33                     856 	inc	sp
      000306 CDr00r00               857 	call	__muluchar
      000309 E1                     858 	pop	hl
      00030A C1                     859 	pop	bc
      00030B FAr71r02               860 	ld	a, (#_SCREEN_MIN_X)
      00030E 83                     861 	add	a, e
      00030F 21rE7r02               862 	ld	hl, #_k_cursor_sprite_index
                                    863 ;main.c:47: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
                                    864 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000312 6E                     865 	ld	l, (hl)
      000313 4F                     866 	ld	c, a
                                    867 ;	spillPairReg hl
                                    868 ;	spillPairReg hl
      000314 26 00                  869 	ld	h, #0x00
                                    870 ;	spillPairReg hl
                                    871 ;	spillPairReg hl
      000316 29                     872 	add	hl, hl
      000317 29                     873 	add	hl, hl
      000318 11r00r00               874 	ld	de, #_shadow_OAM
      00031B 19                     875 	add	hl, de
                                    876 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00031C 78                     877 	ld	a, b
      00031D 22                     878 	ld	(hl+), a
      00031E 71                     879 	ld	(hl), c
                                    880 ;main.c:47: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
                                    881 ;main.c:48: }
      00031F C9                     882 	ret
                                    883 ;main.c:50: void update_tile_sprite(uint8_t sprite_index, uint8_t tile_index)
                                    884 ;	---------------------------------
                                    885 ; Function update_tile_sprite
                                    886 ; ---------------------------------
      000320                        887 _update_tile_sprite::
                                    888 ;main.c:52: set_sprite_tile(sprite_index, tile_index);
      000320 F8 03                  889 	ldhl	sp,	#3
      000322 3A                     890 	ld	a, (hl-)
      000323 4F                     891 	ld	c, a
                                    892 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000324 6E                     893 	ld	l, (hl)
      000325 11r00r00               894 	ld	de, #_shadow_OAM+0
                                    895 ;	spillPairReg hl
                                    896 ;	spillPairReg hl
      000328 26 00                  897 	ld	h, #0x00
                                    898 ;	spillPairReg hl
                                    899 ;	spillPairReg hl
      00032A 29                     900 	add	hl, hl
      00032B 29                     901 	add	hl, hl
      00032C 19                     902 	add	hl, de
      00032D 23                     903 	inc	hl
      00032E 23                     904 	inc	hl
      00032F 71                     905 	ld	(hl), c
                                    906 ;main.c:52: set_sprite_tile(sprite_index, tile_index);
                                    907 ;main.c:53: }
      000330 C9                     908 	ret
                                    909 ;main.c:55: void update_tile_position(uint8_t tile_index, uint8_t tile_x, uint8_t tile_y)
                                    910 ;	---------------------------------
                                    911 ; Function update_tile_position
                                    912 ; ---------------------------------
      000331                        913 _update_tile_position::
                                    914 ;main.c:59: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
      000331 FAr76r02               915 	ld	a, (#_SPRITE_TILE_HEIGHT)
      000334 F5                     916 	push	af
      000335 33                     917 	inc	sp
      000336 F8 05                  918 	ldhl	sp,	#5
      000338 7E                     919 	ld	a, (hl)
      000339 F5                     920 	push	af
      00033A 33                     921 	inc	sp
      00033B CDr00r00               922 	call	__muluchar
      00033E E1                     923 	pop	hl
      00033F FAr72r02               924 	ld	a, (#_SCREEN_MIN_Y)
      000342 83                     925 	add	a, e
      000343 47                     926 	ld	b, a
                                    927 ;main.c:58: SCREEN_MIN_X + (tile_x * SPRITE_TILE_WIDTH),
      000344 FAr75r02               928 	ld	a, (#_SPRITE_TILE_WIDTH)
      000347 C5                     929 	push	bc
      000348 F5                     930 	push	af
      000349 33                     931 	inc	sp
      00034A F8 06                  932 	ldhl	sp,	#6
      00034C 7E                     933 	ld	a, (hl)
      00034D F5                     934 	push	af
      00034E 33                     935 	inc	sp
      00034F CDr00r00               936 	call	__muluchar
      000352 E1                     937 	pop	hl
      000353 C1                     938 	pop	bc
      000354 FAr71r02               939 	ld	a, (#_SCREEN_MIN_X)
      000357 83                     940 	add	a, e
      000358 F8 02                  941 	ldhl	sp,	#2
                                    942 ;main.c:59: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
                                    943 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00035A 6E                     944 	ld	l, (hl)
      00035B 4F                     945 	ld	c, a
                                    946 ;	spillPairReg hl
                                    947 ;	spillPairReg hl
      00035C 26 00                  948 	ld	h, #0x00
                                    949 ;	spillPairReg hl
                                    950 ;	spillPairReg hl
      00035E 29                     951 	add	hl, hl
      00035F 29                     952 	add	hl, hl
      000360 11r00r00               953 	ld	de, #_shadow_OAM
      000363 19                     954 	add	hl, de
                                    955 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000364 78                     956 	ld	a, b
      000365 22                     957 	ld	(hl+), a
      000366 71                     958 	ld	(hl), c
                                    959 ;main.c:59: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
                                    960 ;main.c:60: }
      000367 C9                     961 	ret
                                    962 ;main.c:64: int main()
                                    963 ;	---------------------------------
                                    964 ; Function main
                                    965 ; ---------------------------------
      000368                        966 _main::
      000368 21 49 FE               967 	ld	hl, #-439
      00036B 39                     968 	add	hl, sp
      00036C F9                     969 	ld	sp, hl
                                    970 ;main.c:68: input_state.previous_state = 0x00;
      00036D F8 02                  971 	ldhl	sp,	#2
      00036F 4D                     972 	ld	c, l
      000370 44                     973 	ld	b, h
      000371 AF                     974 	xor	a, a
      000372 02                     975 	ld	(bc), a
                                    976 ;main.c:69: input_state.current_state = 0x00;
      000373 F8 02                  977 	ldhl	sp,	#2
      000375 7D                     978 	ld	a, l
      000376 54                     979 	ld	d, h
      000377 21 96 01               980 	ld	hl, #406
      00037A 39                     981 	add	hl, sp
      00037B 22                     982 	ld	(hl+), a
      00037C 7A                     983 	ld	a, d
      00037D 32                     984 	ld	(hl-), a
      00037E 2A                     985 	ld	a, (hl+)
      00037F 4F                     986 	ld	c, a
                                    987 ;main.c:70: input_state.held_buttons = 0x00;
      000380 3A                     988 	ld	a, (hl-)
      000381 47                     989 	ld	b, a
      000382 03                     990 	inc	bc
      000383 AF                     991 	xor	a, a
      000384 02                     992 	ld	(bc), a
      000385 2A                     993 	ld	a, (hl+)
      000386 4F                     994 	ld	c, a
                                    995 ;main.c:71: input_state.depressed_buttons = 0x00;
      000387 3A                     996 	ld	a, (hl-)
      000388 47                     997 	ld	b, a
      000389 03                     998 	inc	bc
      00038A 03                     999 	inc	bc
      00038B AF                    1000 	xor	a, a
      00038C 02                    1001 	ld	(bc), a
      00038D 2A                    1002 	ld	a, (hl+)
      00038E 4F                    1003 	ld	c, a
                                   1004 ;main.c:72: input_state.released_buttons = 0x00;
      00038F 3A                    1005 	ld	a, (hl-)
      000390 47                    1006 	ld	b, a
      000391 03                    1007 	inc	bc
      000392 03                    1008 	inc	bc
      000393 03                    1009 	inc	bc
      000394 AF                    1010 	xor	a, a
      000395 02                    1011 	ld	(bc), a
      000396 2A                    1012 	ld	a, (hl+)
      000397 5F                    1013 	ld	e, a
      000398 56                    1014 	ld	d, (hl)
      000399 21 04 00              1015 	ld	hl, #0x0004
      00039C 19                    1016 	add	hl, de
      00039D 4D                    1017 	ld	c, l
      00039E 44                    1018 	ld	b, h
      00039F AF                    1019 	xor	a, a
      0003A0 02                    1020 	ld	(bc), a
                                   1021 ;main.c:75: uint8_t execution_state = 0x00;
      0003A1 21 B3 01              1022 	ld	hl, #435
      0003A4 39                    1023 	add	hl, sp
      0003A5 36 00                 1024 	ld	(hl), #0x00
                                   1025 ;main.c:78: uint8_t cursor_tile_x = 10;
      0003A7 21 98 01              1026 	ld	hl, #408
      0003AA 39                    1027 	add	hl, sp
                                   1028 ;main.c:79: uint8_t cursor_tile_y = 9;
      0003AB 3E 0A                 1029 	ld	a, #0x0a
      0003AD 22                    1030 	ld	(hl+), a
      0003AE 36 09                 1031 	ld	(hl), #0x09
                                   1032 ;main.c:87: uint8_t next_available_sprite_index = 0;
      0003B0 21 B4 01              1033 	ld	hl, #436
      0003B3 39                    1034 	add	hl, sp
      0003B4 36 00                 1035 	ld	(hl), #0x00
                                   1036 ;main.c:90: for (uint8_t i = 0; i < 39; ++i)
      0003B6 21 6F 01              1037 	ld	hl, #367
      0003B9 39                    1038 	add	hl, sp
      0003BA 7D                    1039 	ld	a, l
      0003BB 54                    1040 	ld	d, h
      0003BC 21 9A 01              1041 	ld	hl, #410
      0003BF 39                    1042 	add	hl, sp
      0003C0 22                    1043 	ld	(hl+), a
      0003C1 72                    1044 	ld	(hl), d
      0003C2 1E 00                 1045 	ld	e, #0x00
      0003C4                       1046 00177$:
      0003C4 7B                    1047 	ld	a, e
      0003C5 D6 27                 1048 	sub	a, #0x27
      0003C7 30 2F                 1049 	jr	NC, 00101$
                                   1050 ;main.c:92: available_sprites[i] = i + 1;
      0003C9 D5                    1051 	push	de
      0003CA 16 00                 1052 	ld	d, #0x00
      0003CC 21 9C 01              1053 	ld	hl, #412
      0003CF 39                    1054 	add	hl, sp
      0003D0 2A                    1055 	ld	a,	(hl+)
      0003D1 66                    1056 	ld	h, (hl)
      0003D2 6F                    1057 	ld	l, a
      0003D3 19                    1058 	add	hl, de
      0003D4 D1                    1059 	pop	de
      0003D5 4D                    1060 	ld	c, l
      0003D6 44                    1061 	ld	b, h
      0003D7 53                    1062 	ld	d, e
      0003D8 14                    1063 	inc	d
      0003D9 7A                    1064 	ld	a, d
      0003DA 02                    1065 	ld	(bc), a
                                   1066 ;main.c:93: update_tile_sprite(i + 1, k_live_tile_index);
      0003DB FArE4r02              1067 	ld	a, (#_k_live_tile_index)
      0003DE D5                    1068 	push	de
      0003DF F5                    1069 	push	af
      0003E0 33                    1070 	inc	sp
      0003E1 D5                    1071 	push	de
      0003E2 33                    1072 	inc	sp
      0003E3 CDr20r03              1073 	call	_update_tile_sprite
      0003E6 E1                    1074 	pop	hl
      0003E7 D1                    1075 	pop	de
                                   1076 ;main.c:94: update_tile_position(i + 1, 0, 19);
      0003E8 D5                    1077 	push	de
      0003E9 21 00 13              1078 	ld	hl, #0x1300
      0003EC E5                    1079 	push	hl
      0003ED D5                    1080 	push	de
      0003EE 33                    1081 	inc	sp
      0003EF CDr31r03              1082 	call	_update_tile_position
      0003F2 E8 03                 1083 	add	sp, #3
      0003F4 D1                    1084 	pop	de
                                   1085 ;main.c:90: for (uint8_t i = 0; i < 39; ++i)
      0003F5 1C                    1086 	inc	e
      0003F6 18 CC                 1087 	jr	00177$
      0003F8                       1088 00101$:
                                   1089 ;main.c:98: for (uint8_t x = 0; x < 20; ++x)
      0003F8 F8 07                 1090 	ldhl	sp,	#7
      0003FA 7D                    1091 	ld	a, l
      0003FB 54                    1092 	ld	d, h
      0003FC 21 9C 01              1093 	ld	hl, #412
      0003FF 39                    1094 	add	hl, sp
      000400 22                    1095 	ld	(hl+), a
      000401 72                    1096 	ld	(hl), d
      000402 21 B6 01              1097 	ld	hl, #438
      000405 39                    1098 	add	hl, sp
      000406 36 00                 1099 	ld	(hl), #0x00
      000408                       1100 00183$:
      000408 21 B6 01              1101 	ld	hl, #438
      00040B 39                    1102 	add	hl, sp
      00040C 7E                    1103 	ld	a, (hl)
      00040D D6 14                 1104 	sub	a, #0x14
      00040F 30 2D                 1105 	jr	NC, 00103$
                                   1106 ;main.c:100: for (uint8_t y = 0; y < 18; ++y)
      000411 4E                    1107 	ld	c, (hl)
      000412 06 00                 1108 	ld	b, #0x00
      000414 69                    1109 	ld	l, c
      000415 60                    1110 	ld	h, b
      000416 29                    1111 	add	hl, hl
      000417 29                    1112 	add	hl, hl
      000418 29                    1113 	add	hl, hl
      000419 09                    1114 	add	hl, bc
      00041A 29                    1115 	add	hl, hl
      00041B 4D                    1116 	ld	c, l
      00041C 44                    1117 	ld	b, h
      00041D 21 9C 01              1118 	ld	hl, #412
      000420 39                    1119 	add	hl, sp
      000421 2A                    1120 	ld	a,	(hl+)
      000422 66                    1121 	ld	h, (hl)
      000423 6F                    1122 	ld	l, a
      000424 09                    1123 	add	hl, bc
      000425 5D                    1124 	ld	e, l
      000426 54                    1125 	ld	d, h
      000427 0E 00                 1126 	ld	c, #0x00
      000429                       1127 00180$:
      000429 79                    1128 	ld	a, c
      00042A D6 12                 1129 	sub	a, #0x12
      00042C 30 09                 1130 	jr	NC, 00184$
                                   1131 ;main.c:102: board[x][y] = 0x00;
      00042E 69                    1132 	ld	l, c
      00042F 26 00                 1133 	ld	h, #0x00
      000431 19                    1134 	add	hl, de
      000432 36 00                 1135 	ld	(hl), #0x00
                                   1136 ;main.c:100: for (uint8_t y = 0; y < 18; ++y)
      000434 0C                    1137 	inc	c
      000435 18 F2                 1138 	jr	00180$
      000437                       1139 00184$:
                                   1140 ;main.c:98: for (uint8_t x = 0; x < 20; ++x)
      000437 21 B6 01              1141 	ld	hl, #438
      00043A 39                    1142 	add	hl, sp
      00043B 34                    1143 	inc	(hl)
      00043C 18 CA                 1144 	jr	00183$
      00043E                       1145 00103$:
                                   1146 ;main.c:107: set_sprite_data(0, 3, k_sprites);
      00043E 11r00r00              1147 	ld	de, #_k_sprites
      000441 D5                    1148 	push	de
      000442 21 00 03              1149 	ld	hl, #0x300
      000445 E5                    1150 	push	hl
      000446 CDr00r00              1151 	call	_set_sprite_data
      000449 E8 04                 1152 	add	sp, #4
                                   1153 ;main.c:108: set_bkg_data(0, 2, k_background_tiles);
      00044B 11r51r02              1154 	ld	de, #_k_background_tiles
      00044E D5                    1155 	push	de
      00044F 21 00 02              1156 	ld	hl, #0x200
      000452 E5                    1157 	push	hl
      000453 CDr00r00              1158 	call	_set_bkg_data
      000456 E8 04                 1159 	add	sp, #4
                                   1160 ;main.c:111: set_bkg_tiles(0, 0, 20, 18, k_background_map);
      000458 11rE9r00              1161 	ld	de, #_k_background_map
      00045B D5                    1162 	push	de
      00045C 21 14 12              1163 	ld	hl, #0x1214
      00045F E5                    1164 	push	hl
      000460 AF                    1165 	xor	a, a
      000461 0F                    1166 	rrca
      000462 F5                    1167 	push	af
      000463 CDr00r00              1168 	call	_set_bkg_tiles
      000466 E8 06                 1169 	add	sp, #6
                                   1170 ;main.c:114: update_cursor_sprite(k_cursor_empty_tile_index);
      000468 FArE5r02              1171 	ld	a, (#_k_cursor_empty_tile_index)
      00046B F5                    1172 	push	af
      00046C 33                    1173 	inc	sp
      00046D CDrCCr02              1174 	call	_update_cursor_sprite
      000470 33                    1175 	inc	sp
                                   1176 ;main.c:115: update_cursor_position(cursor_tile_x, cursor_tile_y);
      000471 21 0A 09              1177 	ld	hl, #0x90a
      000474 E5                    1178 	push	hl
      000475 CDrE8r02              1179 	call	_update_cursor_position
      000478 E1                    1180 	pop	hl
                                   1181 ;main.c:117: SHOW_BKG;
      000479 F0r00                 1182 	ldh	a, (_LCDC_REG + 0)
      00047B F6 01                 1183 	or	a, #0x01
      00047D E0r00                 1184 	ldh	(_LCDC_REG + 0), a
                                   1185 ;main.c:118: SHOW_SPRITES;
      00047F F0r00                 1186 	ldh	a, (_LCDC_REG + 0)
      000481 F6 02                 1187 	or	a, #0x02
      000483 E0r00                 1188 	ldh	(_LCDC_REG + 0), a
                                   1189 ;main.c:119: DISPLAY_ON;
      000485 F0r00                 1190 	ldh	a, (_LCDC_REG + 0)
      000487 F6 80                 1191 	or	a, #0x80
      000489 E0r00                 1192 	ldh	(_LCDC_REG + 0), a
                                   1193 ;main.c:121: while (1)
      00048B                       1194 00174$:
                                   1195 ;main.c:124: update_input_state(&input_state, joypad());
      00048B CDr00r00              1196 	call	_joypad
      00048E 7B                    1197 	ld	a, e
      00048F 21 96 01              1198 	ld	hl, #406
      000492 39                    1199 	add	hl, sp
      000493 4E                    1200 	ld	c, (hl)
      000494 23                    1201 	inc	hl
      000495 46                    1202 	ld	b, (hl)
      000496 F5                    1203 	push	af
      000497 33                    1204 	inc	sp
      000498 C5                    1205 	push	bc
      000499 CDr00r00              1206 	call	_update_input_state
      00049C E8 03                 1207 	add	sp, #3
                                   1208 ;main.c:127: if (was_input_released(&input_state, btn_start))
      00049E 21 96 01              1209 	ld	hl, #406
      0004A1 39                    1210 	add	hl, sp
      0004A2 2A                    1211 	ld	a, (hl+)
      0004A3 4F                    1212 	ld	c, a
      0004A4 46                    1213 	ld	b, (hl)
      0004A5 3E 06                 1214 	ld	a, #0x06
      0004A7 F5                    1215 	push	af
      0004A8 33                    1216 	inc	sp
      0004A9 C5                    1217 	push	bc
      0004AA CDr8Fr02              1218 	call	_was_input_released
      0004AD E8 03                 1219 	add	sp, #3
      0004AF 7B                    1220 	ld	a, e
      0004B0 B7                    1221 	or	a, a
      0004B1 28 1E                 1222 	jr	Z, 00105$
                                   1223 ;main.c:129: execution_state ^= k_execution_state_active_mask;
      0004B3 21rDFr02              1224 	ld	hl, #_k_execution_state_active_mask
      0004B6 4E                    1225 	ld	c, (hl)
      0004B7 21 B3 01              1226 	ld	hl, #435
      0004BA 39                    1227 	add	hl, sp
      0004BB 7E                    1228 	ld	a, (hl)
      0004BC A9                    1229 	xor	a, c
      0004BD 77                    1230 	ld	(hl), a
                                   1231 ;main.c:132: (execution_state & k_execution_state_active_mask) == k_execution_state_active_mask
      0004BE 7E                    1232 	ld	a, (hl)
      0004BF A1                    1233 	and	a, c
      0004C0 91                    1234 	sub	a, c
      0004C1 20 05                 1235 	jr	NZ, 00199$
                                   1236 ;main.c:133: ? k_empty_tile_index
      0004C3 FArE3r02              1237 	ld	a, (#_k_empty_tile_index)
      0004C6 18 03                 1238 	jr	00200$
      0004C8                       1239 00199$:
                                   1240 ;main.c:134: : k_cursor_empty_tile_index);
      0004C8 FArE5r02              1241 	ld	a, (#_k_cursor_empty_tile_index)
      0004CB                       1242 00200$:
      0004CB F5                    1243 	push	af
      0004CC 33                    1244 	inc	sp
      0004CD CDrCCr02              1245 	call	_update_cursor_sprite
      0004D0 33                    1246 	inc	sp
      0004D1                       1247 00105$:
                                   1248 ;main.c:138: if ((execution_state & k_execution_state_active_mask) == k_execution_state_active_mask)
      0004D1 21rDFr02              1249 	ld	hl, #_k_execution_state_active_mask
      0004D4 4E                    1250 	ld	c, (hl)
      0004D5 21 B3 01              1251 	ld	hl, #435
      0004D8 39                    1252 	add	hl, sp
      0004D9 7E                    1253 	ld	a, (hl)
      0004DA A1                    1254 	and	a, c
      0004DB 91                    1255 	sub	a, c
      0004DC C2r56r09              1256 	jp	NZ,00171$
                                   1257 ;main.c:140: for (uint8_t x = 0; x < 20; ++x)
      0004DF 21 9C 01              1258 	ld	hl, #412
      0004E2 39                    1259 	add	hl, sp
      0004E3 7E                    1260 	ld	a, (hl)
      0004E4 21 AC 01              1261 	ld	hl, #428
      0004E7 39                    1262 	add	hl, sp
      0004E8 77                    1263 	ld	(hl), a
      0004E9 21 9D 01              1264 	ld	hl, #413
      0004EC 39                    1265 	add	hl, sp
      0004ED 7E                    1266 	ld	a, (hl)
      0004EE 21 AD 01              1267 	ld	hl, #429
      0004F1 39                    1268 	add	hl, sp
      0004F2 77                    1269 	ld	(hl), a
      0004F3 21 B2 01              1270 	ld	hl, #434
      0004F6 39                    1271 	add	hl, sp
      0004F7 36 00                 1272 	ld	(hl), #0x00
      0004F9                       1273 00189$:
      0004F9 21 B2 01              1274 	ld	hl, #434
      0004FC 39                    1275 	add	hl, sp
      0004FD 7E                    1276 	ld	a, (hl)
      0004FE D6 14                 1277 	sub	a, #0x14
      000500 D2r87r05              1278 	jp	NC, 00109$
                                   1279 ;main.c:142: for (uint8_t y = 0; y < 18; ++y)
      000503 4E                    1280 	ld	c, (hl)
      000504 06 00                 1281 	ld	b, #0x00
      000506 69                    1282 	ld	l, c
      000507 60                    1283 	ld	h, b
      000508 29                    1284 	add	hl, hl
      000509 29                    1285 	add	hl, hl
      00050A 29                    1286 	add	hl, hl
      00050B 09                    1287 	add	hl, bc
      00050C 29                    1288 	add	hl, hl
      00050D 4D                    1289 	ld	c, l
      00050E 44                    1290 	ld	b, h
      00050F 21 AC 01              1291 	ld	hl, #428
      000512 39                    1292 	add	hl, sp
      000513 2A                    1293 	ld	a,	(hl+)
      000514 66                    1294 	ld	h, (hl)
      000515 6F                    1295 	ld	l, a
      000516 09                    1296 	add	hl, bc
      000517 E5                    1297 	push	hl
      000518 7D                    1298 	ld	a, l
      000519 21 B0 01              1299 	ld	hl, #432
      00051C 39                    1300 	add	hl, sp
      00051D 77                    1301 	ld	(hl), a
      00051E E1                    1302 	pop	hl
      00051F 7C                    1303 	ld	a, h
      000520 21 AF 01              1304 	ld	hl, #431
      000523 39                    1305 	add	hl, sp
      000524 77                    1306 	ld	(hl), a
      000525 21 B5 01              1307 	ld	hl, #437
      000528 39                    1308 	add	hl, sp
      000529 36 00                 1309 	ld	(hl), #0x00
      00052B                       1310 00186$:
      00052B 21 B5 01              1311 	ld	hl, #437
      00052E 39                    1312 	add	hl, sp
      00052F 7E                    1313 	ld	a, (hl)
      000530 D6 12                 1314 	sub	a, #0x12
      000532 30 4B                 1315 	jr	NC, 00190$
                                   1316 ;main.c:144: uint8_t tile_data = board[x][y];
      000534 21 AE 01              1317 	ld	hl,#0x1ae
      000537 39                    1318 	add	hl,sp
      000538 2A                    1319 	ld	a, (hl+)
      000539 5F                    1320 	ld	e, a
      00053A 56                    1321 	ld	d, (hl)
      00053B 21 B5 01              1322 	ld	hl, #437
      00053E 39                    1323 	add	hl, sp
      00053F 6E                    1324 	ld	l, (hl)
      000540 26 00                 1325 	ld	h, #0x00
      000542 19                    1326 	add	hl, de
      000543 E5                    1327 	push	hl
      000544 7D                    1328 	ld	a, l
      000545 21 B2 01              1329 	ld	hl, #434
      000548 39                    1330 	add	hl, sp
      000549 77                    1331 	ld	(hl), a
      00054A E1                    1332 	pop	hl
      00054B 7C                    1333 	ld	a, h
      00054C 21 B1 01              1334 	ld	hl, #433
      00054F 39                    1335 	add	hl, sp
      000550 32                    1336 	ld	(hl-), a
      000551 2A                    1337 	ld	a, (hl+)
      000552 5F                    1338 	ld	e, a
      000553 56                    1339 	ld	d, (hl)
      000554 1A                    1340 	ld	a, (de)
      000555 47                    1341 	ld	b, a
                                   1342 ;main.c:147: tile_data &= ~k_tile_was_alive_mask;
      000556 21rE2r02              1343 	ld	hl, #_k_tile_was_alive_mask
      000559 4E                    1344 	ld	c, (hl)
      00055A 79                    1345 	ld	a, c
      00055B 2F                    1346 	cpl
      00055C A0                    1347 	and	a, b
      00055D 21 B6 01              1348 	ld	hl, #438
      000560 39                    1349 	add	hl, sp
      000561 77                    1350 	ld	(hl), a
                                   1351 ;main.c:150: if ((tile_data & k_tile_is_alive_mask) != 0x00)
      000562 FArE1r02              1352 	ld	a, (#_k_tile_is_alive_mask)
      000565 21 B6 01              1353 	ld	hl, #438
      000568 39                    1354 	add	hl, sp
      000569 A6                    1355 	and	a,(hl)
      00056A 28 03                 1356 	jr	Z, 00107$
                                   1357 ;main.c:152: tile_data |= k_tile_was_alive_mask;
      00056C 7E                    1358 	ld	a, (hl)
      00056D B1                    1359 	or	a, c
      00056E 77                    1360 	ld	(hl), a
      00056F                       1361 00107$:
                                   1362 ;main.c:156: board[x][y] = tile_data;
      00056F 21 B0 01              1363 	ld	hl,#0x1b0
      000572 39                    1364 	add	hl,sp
      000573 2A                    1365 	ld	a, (hl+)
      000574 5F                    1366 	ld	e, a
      000575 56                    1367 	ld	d, (hl)
      000576 21 B6 01              1368 	ld	hl, #438
      000579 39                    1369 	add	hl, sp
                                   1370 ;main.c:142: for (uint8_t y = 0; y < 18; ++y)
      00057A 3A                    1371 	ld	a, (hl-)
      00057B 12                    1372 	ld	(de), a
      00057C 34                    1373 	inc	(hl)
      00057D 18 AC                 1374 	jr	00186$
      00057F                       1375 00190$:
                                   1376 ;main.c:140: for (uint8_t x = 0; x < 20; ++x)
      00057F 21 B2 01              1377 	ld	hl, #434
      000582 39                    1378 	add	hl, sp
      000583 34                    1379 	inc	(hl)
      000584 C3rF9r04              1380 	jp	00189$
      000587                       1381 00109$:
                                   1382 ;main.c:161: for (uint8_t x = 0; x < 20; ++x)
      000587 21 9C 01              1383 	ld	hl, #412
      00058A 39                    1384 	add	hl, sp
      00058B 2A                    1385 	ld	a, (hl+)
      00058C 23                    1386 	inc	hl
      00058D 32                    1387 	ld	(hl-), a
      00058E 2A                    1388 	ld	a, (hl+)
      00058F 23                    1389 	inc	hl
      000590 77                    1390 	ld	(hl), a
      000591 21 9A 01              1391 	ld	hl, #410
      000594 39                    1392 	add	hl, sp
      000595 7E                    1393 	ld	a, (hl)
      000596 21 A0 01              1394 	ld	hl, #416
      000599 39                    1395 	add	hl, sp
      00059A 77                    1396 	ld	(hl), a
      00059B 21 9B 01              1397 	ld	hl, #411
      00059E 39                    1398 	add	hl, sp
      00059F 7E                    1399 	ld	a, (hl)
      0005A0 21 A1 01              1400 	ld	hl, #417
      0005A3 39                    1401 	add	hl, sp
      0005A4 77                    1402 	ld	(hl), a
      0005A5 21 9A 01              1403 	ld	hl, #410
      0005A8 39                    1404 	add	hl, sp
      0005A9 7E                    1405 	ld	a, (hl)
      0005AA 21 A2 01              1406 	ld	hl, #418
      0005AD 39                    1407 	add	hl, sp
      0005AE 77                    1408 	ld	(hl), a
      0005AF 21 9B 01              1409 	ld	hl, #411
      0005B2 39                    1410 	add	hl, sp
      0005B3 7E                    1411 	ld	a, (hl)
      0005B4 21 A3 01              1412 	ld	hl, #419
      0005B7 39                    1413 	add	hl, sp
      0005B8 77                    1414 	ld	(hl), a
      0005B9 21 B5 01              1415 	ld	hl, #437
      0005BC 39                    1416 	add	hl, sp
      0005BD 36 00                 1417 	ld	(hl), #0x00
      0005BF                       1418 00195$:
      0005BF 21 B5 01              1419 	ld	hl, #437
      0005C2 39                    1420 	add	hl, sp
      0005C3 7E                    1421 	ld	a, (hl)
      0005C4 D6 14                 1422 	sub	a, #0x14
      0005C6 D2rDDr0B              1423 	jp	NC, 00172$
                                   1424 ;main.c:163: for (uint8_t y = 0; y < 18; ++y)
      0005C9 4E                    1425 	ld	c, (hl)
      0005CA 06 00                 1426 	ld	b, #0x00
      0005CC 69                    1427 	ld	l, c
      0005CD 60                    1428 	ld	h, b
      0005CE 29                    1429 	add	hl, hl
      0005CF 29                    1430 	add	hl, hl
      0005D0 29                    1431 	add	hl, hl
      0005D1 09                    1432 	add	hl, bc
      0005D2 29                    1433 	add	hl, hl
      0005D3 4D                    1434 	ld	c, l
      0005D4 44                    1435 	ld	b, h
      0005D5 21 9E 01              1436 	ld	hl, #414
      0005D8 39                    1437 	add	hl, sp
      0005D9 2A                    1438 	ld	a,	(hl+)
      0005DA 66                    1439 	ld	h, (hl)
      0005DB 6F                    1440 	ld	l, a
      0005DC 09                    1441 	add	hl, bc
      0005DD E5                    1442 	push	hl
      0005DE 7D                    1443 	ld	a, l
      0005DF 21 A6 01              1444 	ld	hl, #422
      0005E2 39                    1445 	add	hl, sp
      0005E3 77                    1446 	ld	(hl), a
      0005E4 E1                    1447 	pop	hl
      0005E5 7C                    1448 	ld	a, h
      0005E6 21 A5 01              1449 	ld	hl, #421
      0005E9 39                    1450 	add	hl, sp
      0005EA 77                    1451 	ld	(hl), a
      0005EB 21 B5 01              1452 	ld	hl, #437
      0005EE 39                    1453 	add	hl, sp
      0005EF 7E                    1454 	ld	a, (hl)
      0005F0 D6 13                 1455 	sub	a, #0x13
      0005F2 3E 00                 1456 	ld	a, #0x00
      0005F4 17                    1457 	rla
      0005F5 21 A6 01              1458 	ld	hl, #422
      0005F8 39                    1459 	add	hl, sp
      0005F9 77                    1460 	ld	(hl), a
      0005FA 21 B6 01              1461 	ld	hl, #438
      0005FD 39                    1462 	add	hl, sp
      0005FE 36 00                 1463 	ld	(hl), #0x00
      000600                       1464 00192$:
      000600 21 B6 01              1465 	ld	hl, #438
      000603 39                    1466 	add	hl, sp
      000604 7E                    1467 	ld	a, (hl)
      000605 D6 12                 1468 	sub	a, #0x12
      000607 D2r4Er09              1469 	jp	NC, 00196$
                                   1470 ;main.c:165: uint8_t tile_data = board[x][y];
      00060A 21 A4 01              1471 	ld	hl,#0x1a4
      00060D 39                    1472 	add	hl,sp
      00060E 2A                    1473 	ld	a, (hl+)
      00060F 5F                    1474 	ld	e, a
      000610 56                    1475 	ld	d, (hl)
      000611 21 B6 01              1476 	ld	hl, #438
      000614 39                    1477 	add	hl, sp
      000615 6E                    1478 	ld	l, (hl)
      000616 26 00                 1479 	ld	h, #0x00
      000618 19                    1480 	add	hl, de
      000619 E5                    1481 	push	hl
      00061A 7D                    1482 	ld	a, l
      00061B 21 A9 01              1483 	ld	hl, #425
      00061E 39                    1484 	add	hl, sp
      00061F 77                    1485 	ld	(hl), a
      000620 E1                    1486 	pop	hl
      000621 7C                    1487 	ld	a, h
      000622 21 A8 01              1488 	ld	hl, #424
      000625 39                    1489 	add	hl, sp
      000626 32                    1490 	ld	(hl-), a
      000627 2A                    1491 	ld	a, (hl+)
      000628 5F                    1492 	ld	e, a
      000629 2A                    1493 	ld	a, (hl+)
      00062A 57                    1494 	ld	d, a
      00062B 1A                    1495 	ld	a, (de)
                                   1496 ;main.c:166: uint8_t neighbour_count = 0;
      00062C 22                    1497 	ld	(hl+), a
      00062D 36 00                 1498 	ld	(hl), #0x00
                                   1499 ;main.c:147: tile_data &= ~k_tile_was_alive_mask;
      00062F FArE2r02              1500 	ld	a, (#_k_tile_was_alive_mask)
      000632 21 AB 01              1501 	ld	hl, #427
      000635 39                    1502 	add	hl, sp
      000636 77                    1503 	ld	(hl), a
                                   1504 ;main.c:170: && (board[x][y - 1] & k_tile_was_alive_mask) != 0x00)
      000637 21 B6 01              1505 	ld	hl, #438
      00063A 39                    1506 	add	hl, sp
      00063B 7E                    1507 	ld	a, (hl)
      00063C 21 B2 01              1508 	ld	hl, #434
      00063F 39                    1509 	add	hl, sp
      000640 77                    1510 	ld	(hl), a
      000641 7E                    1511 	ld	a, (hl)
      000642 3D                    1512 	dec	a
      000643 21 AC 01              1513 	ld	hl, #428
      000646 39                    1514 	add	hl, sp
      000647 77                    1515 	ld	(hl), a
                                   1516 ;main.c:169: if (y > 0
      000648 21 B6 01              1517 	ld	hl, #438
      00064B 39                    1518 	add	hl, sp
      00064C 7E                    1519 	ld	a, (hl)
      00064D B7                    1520 	or	a, a
      00064E 28 1C                 1521 	jr	Z, 00111$
                                   1522 ;main.c:170: && (board[x][y - 1] & k_tile_was_alive_mask) != 0x00)
      000650 21 A4 01              1523 	ld	hl,#0x1a4
      000653 39                    1524 	add	hl,sp
      000654 2A                    1525 	ld	a, (hl+)
      000655 5F                    1526 	ld	e, a
      000656 56                    1527 	ld	d, (hl)
      000657 21 AC 01              1528 	ld	hl, #428
      00065A 39                    1529 	add	hl, sp
      00065B 6E                    1530 	ld	l, (hl)
      00065C 26 00                 1531 	ld	h, #0x00
      00065E 19                    1532 	add	hl, de
      00065F 4D                    1533 	ld	c, l
      000660 44                    1534 	ld	b, h
      000661 0A                    1535 	ld	a, (bc)
      000662 21 AB 01              1536 	ld	hl, #427
      000665 39                    1537 	add	hl, sp
      000666 A6                    1538 	and	a,(hl)
      000667 28 03                 1539 	jr	Z, 00111$
                                   1540 ;main.c:172: neighbour_count += 1;
      000669 2B                    1541 	dec	hl
      00066A 36 01                 1542 	ld	(hl), #0x01
      00066C                       1543 00111$:
                                   1544 ;main.c:178: && (board[x + 1][y - 1] & k_tile_was_alive_mask) != 0x00)
      00066C 21 B5 01              1545 	ld	hl, #437
      00066F 39                    1546 	add	hl, sp
      000670 7E                    1547 	ld	a, (hl)
      000671 21 AD 01              1548 	ld	hl, #429
      000674 39                    1549 	add	hl, sp
      000675 22                    1550 	ld	(hl+), a
      000676 AF                    1551 	xor	a, a
      000677 32                    1552 	ld	(hl-), a
      000678 2A                    1553 	ld	a, (hl+)
      000679 4F                    1554 	ld	c, a
      00067A 46                    1555 	ld	b, (hl)
      00067B 03                    1556 	inc	bc
      00067C 69                    1557 	ld	l, c
      00067D 60                    1558 	ld	h, b
      00067E 29                    1559 	add	hl, hl
      00067F 29                    1560 	add	hl, hl
      000680 29                    1561 	add	hl, hl
      000681 09                    1562 	add	hl, bc
      000682 29                    1563 	add	hl, hl
      000683 4D                    1564 	ld	c, l
      000684 44                    1565 	ld	b, h
      000685 21 9E 01              1566 	ld	hl, #414
      000688 39                    1567 	add	hl, sp
      000689 2A                    1568 	ld	a,	(hl+)
      00068A 66                    1569 	ld	h, (hl)
      00068B 6F                    1570 	ld	l, a
      00068C 09                    1571 	add	hl, bc
      00068D E5                    1572 	push	hl
      00068E 7D                    1573 	ld	a, l
      00068F 21 B1 01              1574 	ld	hl, #433
      000692 39                    1575 	add	hl, sp
      000693 77                    1576 	ld	(hl), a
      000694 E1                    1577 	pop	hl
      000695 7C                    1578 	ld	a, h
      000696 21 B0 01              1579 	ld	hl, #432
      000699 39                    1580 	add	hl, sp
      00069A 77                    1581 	ld	(hl), a
                                   1582 ;main.c:177: && y > 0
      00069B 21 A6 01              1583 	ld	hl, #422
      00069E 39                    1584 	add	hl, sp
      00069F 7E                    1585 	ld	a, (hl)
      0006A0 B7                    1586 	or	a, a
      0006A1 28 27                 1587 	jr	Z, 00114$
      0006A3 21 B6 01              1588 	ld	hl, #438
      0006A6 39                    1589 	add	hl, sp
      0006A7 7E                    1590 	ld	a, (hl)
      0006A8 B7                    1591 	or	a, a
      0006A9 28 1F                 1592 	jr	Z, 00114$
                                   1593 ;main.c:178: && (board[x + 1][y - 1] & k_tile_was_alive_mask) != 0x00)
      0006AB 21 AF 01              1594 	ld	hl,#0x1af
      0006AE 39                    1595 	add	hl,sp
      0006AF 2A                    1596 	ld	a, (hl+)
      0006B0 5F                    1597 	ld	e, a
      0006B1 56                    1598 	ld	d, (hl)
      0006B2 21 AC 01              1599 	ld	hl, #428
      0006B5 39                    1600 	add	hl, sp
      0006B6 6E                    1601 	ld	l, (hl)
      0006B7 26 00                 1602 	ld	h, #0x00
      0006B9 19                    1603 	add	hl, de
      0006BA 33                    1604 	inc	sp
      0006BB 33                    1605 	inc	sp
      0006BC 5D                    1606 	ld	e, l
      0006BD 54                    1607 	ld	d, h
      0006BE D5                    1608 	push	de
      0006BF 1A                    1609 	ld	a, (de)
      0006C0 21 AB 01              1610 	ld	hl, #427
      0006C3 39                    1611 	add	hl, sp
      0006C4 A6                    1612 	and	a,(hl)
      0006C5 28 03                 1613 	jr	Z, 00114$
                                   1614 ;main.c:180: neighbour_count += 1;
      0006C7 2B                    1615 	dec	hl
      0006C8 34                    1616 	inc	(hl)
      0006C9 7E                    1617 	ld	a, (hl)
      0006CA                       1618 00114$:
                                   1619 ;main.c:185: && (board[x + 1][y] & k_tile_was_alive_mask) != 0x00)
      0006CA 21 A6 01              1620 	ld	hl, #422
      0006CD 39                    1621 	add	hl, sp
      0006CE 7E                    1622 	ld	a, (hl)
      0006CF B7                    1623 	or	a, a
      0006D0 28 1C                 1624 	jr	Z, 00118$
      0006D2 21 AF 01              1625 	ld	hl,#0x1af
      0006D5 39                    1626 	add	hl,sp
      0006D6 2A                    1627 	ld	a, (hl+)
      0006D7 5F                    1628 	ld	e, a
      0006D8 56                    1629 	ld	d, (hl)
      0006D9 21 B6 01              1630 	ld	hl, #438
      0006DC 39                    1631 	add	hl, sp
      0006DD 6E                    1632 	ld	l, (hl)
      0006DE 26 00                 1633 	ld	h, #0x00
      0006E0 19                    1634 	add	hl, de
      0006E1 4D                    1635 	ld	c, l
      0006E2 44                    1636 	ld	b, h
      0006E3 0A                    1637 	ld	a, (bc)
      0006E4 21 AB 01              1638 	ld	hl, #427
      0006E7 39                    1639 	add	hl, sp
      0006E8 A6                    1640 	and	a,(hl)
      0006E9 28 03                 1641 	jr	Z, 00118$
                                   1642 ;main.c:187: neighbour_count += 1;
      0006EB 2B                    1643 	dec	hl
      0006EC 34                    1644 	inc	(hl)
      0006ED 7E                    1645 	ld	a, (hl)
      0006EE                       1646 00118$:
                                   1647 ;main.c:193: && (board[x + 1][y + 1] & k_tile_was_alive_mask) != 0x00)
      0006EE 21 B6 01              1648 	ld	hl, #438
      0006F1 39                    1649 	add	hl, sp
      0006F2 7E                    1650 	ld	a, (hl)
      0006F3 D6 11                 1651 	sub	a, #0x11
      0006F5 3E 00                 1652 	ld	a, #0x00
      0006F7 17                    1653 	rla
      0006F8 21 B1 01              1654 	ld	hl, #433
      0006FB 39                    1655 	add	hl, sp
      0006FC 22                    1656 	ld	(hl+), a
      0006FD 34                    1657 	inc	(hl)
                                   1658 ;main.c:192: && y < 17
      0006FE 21 A6 01              1659 	ld	hl, #422
      000701 39                    1660 	add	hl, sp
      000702 7E                    1661 	ld	a, (hl)
      000703 B7                    1662 	or	a, a
      000704 28 20                 1663 	jr	Z, 00121$
                                   1664 ;main.c:193: && (board[x + 1][y + 1] & k_tile_was_alive_mask) != 0x00)
      000706 21 B1 01              1665 	ld	hl, #433
      000709 39                    1666 	add	hl, sp
      00070A 7E                    1667 	ld	a, (hl)
      00070B B7                    1668 	or	a, a
      00070C 28 18                 1669 	jr	Z, 00121$
      00070E 2B                    1670 	dec	hl
      00070F 2B                    1671 	dec	hl
      000710 2A                    1672 	ld	a, (hl+)
      000711 5F                    1673 	ld	e, a
      000712 2A                    1674 	ld	a, (hl+)
      000713 23                    1675 	inc	hl
      000714 57                    1676 	ld	d, a
      000715 6E                    1677 	ld	l, (hl)
      000716 26 00                 1678 	ld	h, #0x00
      000718 19                    1679 	add	hl, de
      000719 4D                    1680 	ld	c, l
      00071A 44                    1681 	ld	b, h
      00071B 0A                    1682 	ld	a, (bc)
      00071C 21 AB 01              1683 	ld	hl, #427
      00071F 39                    1684 	add	hl, sp
      000720 A6                    1685 	and	a,(hl)
      000721 28 03                 1686 	jr	Z, 00121$
                                   1687 ;main.c:195: neighbour_count += 1;
      000723 2B                    1688 	dec	hl
      000724 34                    1689 	inc	(hl)
      000725 7E                    1690 	ld	a, (hl)
      000726                       1691 00121$:
                                   1692 ;main.c:200: && (board[x][y + 1] & k_tile_was_alive_mask) != 0x00)
      000726 21 B1 01              1693 	ld	hl, #433
      000729 39                    1694 	add	hl, sp
      00072A 7E                    1695 	ld	a, (hl)
      00072B B7                    1696 	or	a, a
      00072C 28 2B                 1697 	jr	Z, 00125$
      00072E 21 A4 01              1698 	ld	hl,#0x1a4
      000731 39                    1699 	add	hl,sp
      000732 2A                    1700 	ld	a, (hl+)
      000733 5F                    1701 	ld	e, a
      000734 56                    1702 	ld	d, (hl)
      000735 21 B2 01              1703 	ld	hl, #434
      000738 39                    1704 	add	hl, sp
      000739 6E                    1705 	ld	l, (hl)
      00073A 26 00                 1706 	ld	h, #0x00
      00073C 19                    1707 	add	hl, de
      00073D E5                    1708 	push	hl
      00073E 7D                    1709 	ld	a, l
      00073F 21 B1 01              1710 	ld	hl, #433
      000742 39                    1711 	add	hl, sp
      000743 77                    1712 	ld	(hl), a
      000744 E1                    1713 	pop	hl
      000745 7C                    1714 	ld	a, h
      000746 21 B0 01              1715 	ld	hl, #432
      000749 39                    1716 	add	hl, sp
      00074A 32                    1717 	ld	(hl-), a
      00074B 2A                    1718 	ld	a, (hl+)
      00074C 5F                    1719 	ld	e, a
      00074D 56                    1720 	ld	d, (hl)
      00074E 1A                    1721 	ld	a, (de)
      00074F 21 AB 01              1722 	ld	hl, #427
      000752 39                    1723 	add	hl, sp
      000753 A6                    1724 	and	a,(hl)
      000754 28 03                 1725 	jr	Z, 00125$
                                   1726 ;main.c:202: neighbour_count += 1;
      000756 2B                    1727 	dec	hl
      000757 34                    1728 	inc	(hl)
      000758 7E                    1729 	ld	a, (hl)
      000759                       1730 00125$:
                                   1731 ;main.c:208: && (board[x - 1][y + 1] & k_tile_was_alive_mask) != 0x00)
      000759 21 AD 01              1732 	ld	hl,#0x1ad
      00075C 39                    1733 	add	hl,sp
      00075D 2A                    1734 	ld	a, (hl+)
      00075E 4F                    1735 	ld	c, a
      00075F 46                    1736 	ld	b, (hl)
      000760 0B                    1737 	dec	bc
      000761 69                    1738 	ld	l, c
      000762 60                    1739 	ld	h, b
      000763 29                    1740 	add	hl, hl
      000764 29                    1741 	add	hl, hl
      000765 29                    1742 	add	hl, hl
      000766 09                    1743 	add	hl, bc
      000767 29                    1744 	add	hl, hl
      000768 4D                    1745 	ld	c, l
      000769 44                    1746 	ld	b, h
      00076A 21 9E 01              1747 	ld	hl, #414
      00076D 39                    1748 	add	hl, sp
      00076E 2A                    1749 	ld	a,	(hl+)
      00076F 66                    1750 	ld	h, (hl)
      000770 6F                    1751 	ld	l, a
      000771 09                    1752 	add	hl, bc
      000772 E5                    1753 	push	hl
      000773 7D                    1754 	ld	a, l
      000774 21 B1 01              1755 	ld	hl, #433
      000777 39                    1756 	add	hl, sp
      000778 77                    1757 	ld	(hl), a
      000779 E1                    1758 	pop	hl
      00077A 7C                    1759 	ld	a, h
      00077B 21 B0 01              1760 	ld	hl, #432
      00077E 39                    1761 	add	hl, sp
      00077F 77                    1762 	ld	(hl), a
                                   1763 ;main.c:206: if (x > 0
      000780 21 B5 01              1764 	ld	hl, #437
      000783 39                    1765 	add	hl, sp
      000784 7E                    1766 	ld	a, (hl)
      000785 B7                    1767 	or	a, a
      000786 28 21                 1768 	jr	Z, 00128$
                                   1769 ;main.c:208: && (board[x - 1][y + 1] & k_tile_was_alive_mask) != 0x00)
      000788 21 B1 01              1770 	ld	hl, #433
      00078B 39                    1771 	add	hl, sp
      00078C 7E                    1772 	ld	a, (hl)
      00078D B7                    1773 	or	a, a
      00078E 28 19                 1774 	jr	Z, 00128$
      000790 23                    1775 	inc	hl
      000791 5E                    1776 	ld	e, (hl)
      000792 16 00                 1777 	ld	d, #0x00
      000794 21 AF 01              1778 	ld	hl, #431
      000797 39                    1779 	add	hl, sp
      000798 2A                    1780 	ld	a,	(hl+)
      000799 66                    1781 	ld	h, (hl)
      00079A 6F                    1782 	ld	l, a
      00079B 19                    1783 	add	hl, de
      00079C 4D                    1784 	ld	c, l
      00079D 44                    1785 	ld	b, h
      00079E 0A                    1786 	ld	a, (bc)
      00079F 21 AB 01              1787 	ld	hl, #427
      0007A2 39                    1788 	add	hl, sp
      0007A3 A6                    1789 	and	a,(hl)
      0007A4 28 03                 1790 	jr	Z, 00128$
                                   1791 ;main.c:210: neighbour_count += 1;
      0007A6 2B                    1792 	dec	hl
      0007A7 34                    1793 	inc	(hl)
      0007A8 7E                    1794 	ld	a, (hl)
      0007A9                       1795 00128$:
                                   1796 ;main.c:214: if (x > 0
      0007A9 21 B5 01              1797 	ld	hl, #437
      0007AC 39                    1798 	add	hl, sp
      0007AD 7E                    1799 	ld	a, (hl)
      0007AE B7                    1800 	or	a, a
      0007AF 28 1C                 1801 	jr	Z, 00132$
                                   1802 ;main.c:215: && (board[x - 1][y] & k_tile_was_alive_mask) != 0x00)
      0007B1 21 AF 01              1803 	ld	hl,#0x1af
      0007B4 39                    1804 	add	hl,sp
      0007B5 2A                    1805 	ld	a, (hl+)
      0007B6 5F                    1806 	ld	e, a
      0007B7 56                    1807 	ld	d, (hl)
      0007B8 21 B6 01              1808 	ld	hl, #438
      0007BB 39                    1809 	add	hl, sp
      0007BC 6E                    1810 	ld	l, (hl)
      0007BD 26 00                 1811 	ld	h, #0x00
      0007BF 19                    1812 	add	hl, de
      0007C0 4D                    1813 	ld	c, l
      0007C1 44                    1814 	ld	b, h
      0007C2 0A                    1815 	ld	a, (bc)
      0007C3 21 AB 01              1816 	ld	hl, #427
      0007C6 39                    1817 	add	hl, sp
      0007C7 A6                    1818 	and	a,(hl)
      0007C8 28 03                 1819 	jr	Z, 00132$
                                   1820 ;main.c:217: neighbour_count += 1;
      0007CA 2B                    1821 	dec	hl
      0007CB 34                    1822 	inc	(hl)
      0007CC 7E                    1823 	ld	a, (hl)
      0007CD                       1824 00132$:
                                   1825 ;main.c:221: if (x > 0
      0007CD 21 B5 01              1826 	ld	hl, #437
      0007D0 39                    1827 	add	hl, sp
      0007D1 7E                    1828 	ld	a, (hl)
      0007D2 B7                    1829 	or	a, a
      0007D3 28 30                 1830 	jr	Z, 00135$
                                   1831 ;main.c:222: && y > 0
      0007D5 23                    1832 	inc	hl
      0007D6 7E                    1833 	ld	a, (hl)
      0007D7 B7                    1834 	or	a, a
      0007D8 28 2B                 1835 	jr	Z, 00135$
                                   1836 ;main.c:223: && (board[x - 1][y - 1] & k_tile_was_alive_mask) != 0x00)
      0007DA 21 AC 01              1837 	ld	hl, #428
      0007DD 39                    1838 	add	hl, sp
      0007DE 5E                    1839 	ld	e, (hl)
      0007DF 16 00                 1840 	ld	d, #0x00
      0007E1 21 AF 01              1841 	ld	hl, #431
      0007E4 39                    1842 	add	hl, sp
      0007E5 2A                    1843 	ld	a,	(hl+)
      0007E6 66                    1844 	ld	h, (hl)
      0007E7 6F                    1845 	ld	l, a
      0007E8 19                    1846 	add	hl, de
      0007E9 E5                    1847 	push	hl
      0007EA 7D                    1848 	ld	a, l
      0007EB 21 B3 01              1849 	ld	hl, #435
      0007EE 39                    1850 	add	hl, sp
      0007EF 77                    1851 	ld	(hl), a
      0007F0 E1                    1852 	pop	hl
      0007F1 7C                    1853 	ld	a, h
      0007F2 21 B2 01              1854 	ld	hl, #434
      0007F5 39                    1855 	add	hl, sp
      0007F6 32                    1856 	ld	(hl-), a
      0007F7 2A                    1857 	ld	a, (hl+)
      0007F8 5F                    1858 	ld	e, a
      0007F9 56                    1859 	ld	d, (hl)
      0007FA 1A                    1860 	ld	a, (de)
      0007FB 21 AB 01              1861 	ld	hl, #427
      0007FE 39                    1862 	add	hl, sp
      0007FF A6                    1863 	and	a,(hl)
      000800 28 03                 1864 	jr	Z, 00135$
                                   1865 ;main.c:225: neighbour_count += 1;
      000802 2B                    1866 	dec	hl
      000803 34                    1867 	inc	(hl)
      000804 7E                    1868 	ld	a, (hl)
      000805                       1869 00135$:
                                   1870 ;main.c:150: if ((tile_data & k_tile_is_alive_mask) != 0x00)
      000805 21rE1r02              1871 	ld	hl, #_k_tile_is_alive_mask
      000808 4E                    1872 	ld	c, (hl)
                                   1873 ;main.c:229: uint8_t is_alive = (tile_data & k_tile_is_alive_mask) != 0x00;
      000809 21 A9 01              1874 	ld	hl, #425
      00080C 39                    1875 	add	hl, sp
      00080D 7E                    1876 	ld	a, (hl)
      00080E A1                    1877 	and	a, c
      00080F D6 01                 1878 	sub	a,#0x01
      000811 3E 00                 1879 	ld	a, #0x00
      000813 17                    1880 	rla
      000814 EE 01                 1881 	xor	a, #0x01
                                   1882 ;main.c:230: uint8_t come_to_life = !is_alive && neighbour_count == 3;
      000816 5F                    1883 	ld	e, a
      000817 B7                    1884 	or	a, a
      000818 20 06                 1885 	jr	NZ, 00201$
      00081A 23                    1886 	inc	hl
      00081B 7E                    1887 	ld	a, (hl)
      00081C D6 03                 1888 	sub	a, #0x03
      00081E 28 03                 1889 	jr	Z, 00202$
      000820                       1890 00201$:
      000820 AF                    1891 	xor	a, a
      000821 18 02                 1892 	jr	00203$
      000823                       1893 00202$:
      000823 3E 01                 1894 	ld	a, #0x01
      000825                       1895 00203$:
      000825 21 B0 01              1896 	ld	hl, #432
      000828 39                    1897 	add	hl, sp
      000829 77                    1898 	ld	(hl), a
                                   1899 ;main.c:235: uint8_t remain_alive = is_alive && neighbour_count >= 2 && neighbour_count <= 3;
      00082A 7B                    1900 	ld	a, e
      00082B B7                    1901 	or	a, a
      00082C 28 0E                 1902 	jr	Z, 00204$
      00082E 21 AA 01              1903 	ld	hl, #426
      000831 39                    1904 	add	hl, sp
      000832 7E                    1905 	ld	a, (hl)
      000833 D6 02                 1906 	sub	a, #0x02
      000835 38 05                 1907 	jr	C, 00204$
      000837 3E 03                 1908 	ld	a, #0x03
      000839 96                    1909 	sub	a, (hl)
      00083A 30 04                 1910 	jr	NC, 00205$
      00083C                       1911 00204$:
      00083C 1E 00                 1912 	ld	e, #0x00
      00083E 18 02                 1913 	jr	00206$
      000840                       1914 00205$:
      000840 1E 01                 1915 	ld	e, #0x01
      000842                       1916 00206$:
                                   1917 ;main.c:238: tile_data &= ~k_tile_is_alive_mask;
      000842 79                    1918 	ld	a, c
      000843 2F                    1919 	cpl
      000844 21 B1 01              1920 	ld	hl, #433
      000847 39                    1921 	add	hl, sp
      000848 77                    1922 	ld	(hl), a
      000849 21 A9 01              1923 	ld	hl, #425
      00084C 39                    1924 	add	hl, sp
      00084D 7E                    1925 	ld	a, (hl)
      00084E 21 B1 01              1926 	ld	hl, #433
      000851 39                    1927 	add	hl, sp
      000852 A6                    1928 	and	a, (hl)
      000853 23                    1929 	inc	hl
                                   1930 ;main.c:239: if ((come_to_life | remain_alive) != 0x00)
      000854 32                    1931 	ld	(hl-), a
      000855 2B                    1932 	dec	hl
      000856 7E                    1933 	ld	a, (hl)
      000857 B3                    1934 	or	a, e
      000858 B7                    1935 	or	a, a
      000859 28 05                 1936 	jr	Z, 00139$
                                   1937 ;main.c:241: tile_data |= k_tile_is_alive_mask;
      00085B 23                    1938 	inc	hl
      00085C 23                    1939 	inc	hl
      00085D 7E                    1940 	ld	a, (hl)
      00085E B1                    1941 	or	a, c
      00085F 77                    1942 	ld	(hl), a
      000860                       1943 00139$:
                                   1944 ;main.c:245: is_alive = (tile_data & k_tile_is_alive_mask) != 0x00;
      000860 21 B2 01              1945 	ld	hl, #434
      000863 39                    1946 	add	hl, sp
      000864 3A                    1947 	ld	a, (hl-)
      000865 2B                    1948 	dec	hl
      000866 A1                    1949 	and	a, c
      000867 D6 01                 1950 	sub	a, #0x01
      000869 3E 00                 1951 	ld	a, #0x00
      00086B 17                    1952 	rla
      00086C EE 01                 1953 	xor	a, #0x01
                                   1954 ;main.c:246: uint8_t was_alive = (tile_data & k_tile_was_alive_mask) != 0x00;
      00086E 22                    1955 	ld	(hl+), a
      00086F 23                    1956 	inc	hl
      000870 7E                    1957 	ld	a, (hl)
      000871 21 AB 01              1958 	ld	hl, #427
      000874 39                    1959 	add	hl, sp
      000875 A6                    1960 	and	a, (hl)
      000876 23                    1961 	inc	hl
      000877 23                    1962 	inc	hl
      000878 D6 01                 1963 	sub	a, #0x01
      00087A 3E 00                 1964 	ld	a, #0x00
      00087C 17                    1965 	rla
      00087D EE 01                 1966 	xor	a, #0x01
      00087F 77                    1967 	ld	(hl), a
      000880 2A                    1968 	ld	a, (hl+)
      000881 77                    1969 	ld	(hl), a
                                   1970 ;main.c:259: update_tile_position(tile_data & k_tile_sprite_index_mask, x, y);
      000882 FArE0r02              1971 	ld	a, (#_k_tile_sprite_index_mask)
      000885 21 AF 01              1972 	ld	hl, #431
      000888 39                    1973 	add	hl, sp
                                   1974 ;main.c:249: if (!was_alive && is_alive)
      000889 32                    1975 	ld	(hl-), a
      00088A 2B                    1976 	dec	hl
      00088B 7E                    1977 	ld	a, (hl)
      00088C B7                    1978 	or	a, a
      00088D 20 60                 1979 	jr	NZ, 00147$
      00088F 21 B0 01              1980 	ld	hl, #432
      000892 39                    1981 	add	hl, sp
      000893 7E                    1982 	ld	a, (hl)
      000894 B7                    1983 	or	a, a
      000895 28 58                 1984 	jr	Z, 00147$
                                   1985 ;main.c:252: if (next_available_sprite_index < 39)
      000897 21 B4 01              1986 	ld	hl, #436
      00089A 39                    1987 	add	hl, sp
      00089B 7E                    1988 	ld	a, (hl)
      00089C D6 27                 1989 	sub	a, #0x27
      00089E 30 45                 1990 	jr	NC, 00141$
                                   1991 ;main.c:255: tile_data |= available_sprites[next_available_sprite_index];
      0008A0 21 A2 01              1992 	ld	hl,#0x1a2
      0008A3 39                    1993 	add	hl,sp
      0008A4 2A                    1994 	ld	a, (hl+)
      0008A5 5F                    1995 	ld	e, a
      0008A6 56                    1996 	ld	d, (hl)
      0008A7 21 B4 01              1997 	ld	hl, #436
      0008AA 39                    1998 	add	hl, sp
      0008AB 6E                    1999 	ld	l, (hl)
      0008AC 26 00                 2000 	ld	h, #0x00
      0008AE 19                    2001 	add	hl, de
      0008AF E5                    2002 	push	hl
      0008B0 7D                    2003 	ld	a, l
      0008B1 21 B2 01              2004 	ld	hl, #434
      0008B4 39                    2005 	add	hl, sp
      0008B5 77                    2006 	ld	(hl), a
      0008B6 E1                    2007 	pop	hl
      0008B7 7C                    2008 	ld	a, h
      0008B8 21 B1 01              2009 	ld	hl, #433
      0008BB 39                    2010 	add	hl, sp
      0008BC 32                    2011 	ld	(hl-), a
      0008BD 2A                    2012 	ld	a, (hl+)
      0008BE 5F                    2013 	ld	e, a
      0008BF 2A                    2014 	ld	a, (hl+)
      0008C0 57                    2015 	ld	d, a
      0008C1 1A                    2016 	ld	a, (de)
      0008C2 B6                    2017 	or	a, (hl)
                                   2018 ;main.c:256: next_available_sprite_index++;
      0008C3 22                    2019 	ld	(hl+), a
      0008C4 23                    2020 	inc	hl
      0008C5 34                    2021 	inc	(hl)
                                   2022 ;main.c:259: update_tile_position(tile_data & k_tile_sprite_index_mask, x, y);
      0008C6 2B                    2023 	dec	hl
      0008C7 2B                    2024 	dec	hl
      0008C8 7E                    2025 	ld	a, (hl)
      0008C9 21 AF 01              2026 	ld	hl, #431
      0008CC 39                    2027 	add	hl, sp
      0008CD A6                    2028 	and	a, (hl)
      0008CE 21 B6 01              2029 	ld	hl, #438
      0008D1 39                    2030 	add	hl, sp
      0008D2 66                    2031 	ld	h, (hl)
                                   2032 ;	spillPairReg hl
                                   2033 ;	spillPairReg hl
      0008D3 E5                    2034 	push	hl
      0008D4 33                    2035 	inc	sp
      0008D5 21 B6 01              2036 	ld	hl, #438
      0008D8 39                    2037 	add	hl, sp
      0008D9 66                    2038 	ld	h, (hl)
                                   2039 ;	spillPairReg hl
                                   2040 ;	spillPairReg hl
      0008DA E5                    2041 	push	hl
      0008DB 33                    2042 	inc	sp
      0008DC F5                    2043 	push	af
      0008DD 33                    2044 	inc	sp
      0008DE CDr31r03              2045 	call	_update_tile_position
      0008E1 E8 03                 2046 	add	sp, #3
      0008E3 18 54                 2047 	jr	00148$
      0008E5                       2048 00141$:
                                   2049 ;main.c:264: tile_data &= ~k_tile_is_alive_mask;
      0008E5 21 B2 01              2050 	ld	hl, #434
      0008E8 39                    2051 	add	hl, sp
      0008E9 3A                    2052 	ld	a, (hl-)
      0008EA A6                    2053 	and	a, (hl)
      0008EB 23                    2054 	inc	hl
      0008EC 77                    2055 	ld	(hl), a
      0008ED 18 4A                 2056 	jr	00148$
      0008EF                       2057 00147$:
                                   2058 ;main.c:267: else if (was_alive && !is_alive)
      0008EF 21 AE 01              2059 	ld	hl, #430
      0008F2 39                    2060 	add	hl, sp
      0008F3 7E                    2061 	ld	a, (hl)
      0008F4 B7                    2062 	or	a, a
      0008F5 28 42                 2063 	jr	Z, 00148$
      0008F7 23                    2064 	inc	hl
      0008F8 23                    2065 	inc	hl
      0008F9 7E                    2066 	ld	a, (hl)
      0008FA B7                    2067 	or	a, a
      0008FB 20 3C                 2068 	jr	NZ, 00148$
                                   2069 ;main.c:270: update_tile_position(tile_data & k_tile_sprite_index_mask, 0, 19);
      0008FD 23                    2070 	inc	hl
      0008FE 23                    2071 	inc	hl
      0008FF 7E                    2072 	ld	a, (hl)
      000900 21 AF 01              2073 	ld	hl, #431
      000903 39                    2074 	add	hl, sp
      000904 A6                    2075 	and	a, (hl)
      000905 26 13                 2076 	ld	h, #0x13
                                   2077 ;	spillPairReg hl
                                   2078 ;	spillPairReg hl
      000907 E5                    2079 	push	hl
      000908 33                    2080 	inc	sp
      000909 26 00                 2081 	ld	h, #0x00
                                   2082 ;	spillPairReg hl
                                   2083 ;	spillPairReg hl
      00090B E5                    2084 	push	hl
      00090C 33                    2085 	inc	sp
      00090D F5                    2086 	push	af
      00090E 33                    2087 	inc	sp
      00090F CDr31r03              2088 	call	_update_tile_position
      000912 E8 03                 2089 	add	sp, #3
                                   2090 ;main.c:273: next_available_sprite_index--;
      000914 21 B4 01              2091 	ld	hl, #436
      000917 39                    2092 	add	hl, sp
      000918 35                    2093 	dec	(hl)
                                   2094 ;main.c:274: available_sprites[next_available_sprite_index] = tile_data & k_tile_sprite_index_mask;
      000919 21 A0 01              2095 	ld	hl,#0x1a0
      00091C 39                    2096 	add	hl,sp
      00091D 2A                    2097 	ld	a, (hl+)
      00091E 5F                    2098 	ld	e, a
      00091F 56                    2099 	ld	d, (hl)
      000920 21 B4 01              2100 	ld	hl, #436
      000923 39                    2101 	add	hl, sp
      000924 6E                    2102 	ld	l, (hl)
      000925 26 00                 2103 	ld	h, #0x00
      000927 19                    2104 	add	hl, de
      000928 5D                    2105 	ld	e, l
      000929 54                    2106 	ld	d, h
      00092A 21rE0r02              2107 	ld	hl, #_k_tile_sprite_index_mask
      00092D 4E                    2108 	ld	c, (hl)
      00092E 21 B2 01              2109 	ld	hl, #434
      000931 39                    2110 	add	hl, sp
      000932 7E                    2111 	ld	a, (hl)
      000933 A1                    2112 	and	a, c
      000934 12                    2113 	ld	(de), a
                                   2114 ;main.c:277: tile_data &= ~k_tile_sprite_index_mask;
      000935 79                    2115 	ld	a, c
      000936 2F                    2116 	cpl
      000937 A6                    2117 	and	a, (hl)
      000938 77                    2118 	ld	(hl), a
      000939                       2119 00148$:
                                   2120 ;main.c:280: board[x][y] = tile_data;
      000939 21 A7 01              2121 	ld	hl,#0x1a7
      00093C 39                    2122 	add	hl,sp
      00093D 2A                    2123 	ld	a, (hl+)
      00093E 5F                    2124 	ld	e, a
      00093F 56                    2125 	ld	d, (hl)
      000940 21 B2 01              2126 	ld	hl, #434
      000943 39                    2127 	add	hl, sp
      000944 7E                    2128 	ld	a, (hl)
      000945 12                    2129 	ld	(de), a
                                   2130 ;main.c:163: for (uint8_t y = 0; y < 18; ++y)
      000946 21 B6 01              2131 	ld	hl, #438
      000949 39                    2132 	add	hl, sp
      00094A 34                    2133 	inc	(hl)
      00094B C3r00r06              2134 	jp	00192$
      00094E                       2135 00196$:
                                   2136 ;main.c:161: for (uint8_t x = 0; x < 20; ++x)
      00094E 21 B5 01              2137 	ld	hl, #437
      000951 39                    2138 	add	hl, sp
      000952 34                    2139 	inc	(hl)
      000953 C3rBFr05              2140 	jp	00195$
      000956                       2141 00171$:
                                   2142 ;main.c:293: if (was_input_depressed(&input_state, btn_up))
      000956 21 96 01              2143 	ld	hl, #406
      000959 39                    2144 	add	hl, sp
      00095A 7E                    2145 	ld	a, (hl)
      00095B 21 B5 01              2146 	ld	hl, #437
      00095E 39                    2147 	add	hl, sp
      00095F 77                    2148 	ld	(hl), a
      000960 21 97 01              2149 	ld	hl, #407
      000963 39                    2150 	add	hl, sp
      000964 7E                    2151 	ld	a, (hl)
      000965 21 B6 01              2152 	ld	hl, #438
      000968 39                    2153 	add	hl, sp
      000969 32                    2154 	ld	(hl-), a
      00096A 3E 02                 2155 	ld	a, #0x02
      00096C F5                    2156 	push	af
      00096D 33                    2157 	inc	sp
      00096E 2A                    2158 	ld	a, (hl+)
      00096F 5F                    2159 	ld	e, a
      000970 56                    2160 	ld	d, (hl)
      000971 D5                    2161 	push	de
      000972 CDr77r02              2162 	call	_was_input_depressed
      000975 E8 03                 2163 	add	sp, #3
      000977 21 B6 01              2164 	ld	hl, #438
      00097A 39                    2165 	add	hl, sp
      00097B 73                    2166 	ld	(hl), e
                                   2167 ;main.c:295: cursor_tile_y -= 1;
      00097C 21 99 01              2168 	ld	hl, #409
      00097F 39                    2169 	add	hl, sp
      000980 7E                    2170 	ld	a, (hl)
      000981 21 B2 01              2171 	ld	hl, #434
      000984 39                    2172 	add	hl, sp
      000985 77                    2173 	ld	(hl), a
                                   2174 ;main.c:293: if (was_input_depressed(&input_state, btn_up))
      000986 21 B6 01              2175 	ld	hl, #438
      000989 39                    2176 	add	hl, sp
      00098A 7E                    2177 	ld	a, (hl)
      00098B B7                    2178 	or	a, a
      00098C 28 0E                 2179 	jr	Z, 00161$
                                   2180 ;main.c:295: cursor_tile_y -= 1;
      00098E 21 B2 01              2181 	ld	hl, #434
      000991 39                    2182 	add	hl, sp
      000992 7E                    2183 	ld	a, (hl)
      000993 3D                    2184 	dec	a
      000994 21 99 01              2185 	ld	hl, #409
      000997 39                    2186 	add	hl, sp
      000998 77                    2187 	ld	(hl), a
      000999 C3r36r0A              2188 	jp	00162$
      00099C                       2189 00161$:
                                   2190 ;main.c:297: else if (was_input_depressed(&input_state, btn_down))
      00099C 21 96 01              2191 	ld	hl, #406
      00099F 39                    2192 	add	hl, sp
      0009A0 7E                    2193 	ld	a, (hl)
      0009A1 21 B5 01              2194 	ld	hl, #437
      0009A4 39                    2195 	add	hl, sp
      0009A5 77                    2196 	ld	(hl), a
      0009A6 21 97 01              2197 	ld	hl, #407
      0009A9 39                    2198 	add	hl, sp
      0009AA 7E                    2199 	ld	a, (hl)
      0009AB 21 B6 01              2200 	ld	hl, #438
      0009AE 39                    2201 	add	hl, sp
      0009AF 32                    2202 	ld	(hl-), a
      0009B0 3E 03                 2203 	ld	a, #0x03
      0009B2 F5                    2204 	push	af
      0009B3 33                    2205 	inc	sp
      0009B4 2A                    2206 	ld	a, (hl+)
      0009B5 5F                    2207 	ld	e, a
      0009B6 56                    2208 	ld	d, (hl)
      0009B7 D5                    2209 	push	de
      0009B8 CDr77r02              2210 	call	_was_input_depressed
      0009BB E8 03                 2211 	add	sp, #3
      0009BD 7B                    2212 	ld	a, e
      0009BE B7                    2213 	or	a, a
      0009BF 28 0D                 2214 	jr	Z, 00158$
                                   2215 ;main.c:299: cursor_tile_y += 1;
      0009C1 21 B2 01              2216 	ld	hl, #434
      0009C4 39                    2217 	add	hl, sp
      0009C5 7E                    2218 	ld	a, (hl)
      0009C6 3C                    2219 	inc	a
      0009C7 21 99 01              2220 	ld	hl, #409
      0009CA 39                    2221 	add	hl, sp
      0009CB 77                    2222 	ld	(hl), a
      0009CC 18 68                 2223 	jr	00162$
      0009CE                       2224 00158$:
                                   2225 ;main.c:301: else if (was_input_depressed(&input_state, btn_left))
      0009CE 21 96 01              2226 	ld	hl, #406
      0009D1 39                    2227 	add	hl, sp
      0009D2 7E                    2228 	ld	a, (hl)
      0009D3 21 B5 01              2229 	ld	hl, #437
      0009D6 39                    2230 	add	hl, sp
      0009D7 77                    2231 	ld	(hl), a
      0009D8 21 97 01              2232 	ld	hl, #407
      0009DB 39                    2233 	add	hl, sp
      0009DC 7E                    2234 	ld	a, (hl)
      0009DD 21 B6 01              2235 	ld	hl, #438
      0009E0 39                    2236 	add	hl, sp
      0009E1 32                    2237 	ld	(hl-), a
      0009E2 3E 04                 2238 	ld	a, #0x04
      0009E4 F5                    2239 	push	af
      0009E5 33                    2240 	inc	sp
      0009E6 2A                    2241 	ld	a, (hl+)
      0009E7 5F                    2242 	ld	e, a
      0009E8 56                    2243 	ld	d, (hl)
      0009E9 D5                    2244 	push	de
      0009EA CDr77r02              2245 	call	_was_input_depressed
      0009ED E8 03                 2246 	add	sp, #3
                                   2247 ;main.c:303: cursor_tile_x -= 1;
      0009EF 21 98 01              2248 	ld	hl, #408
      0009F2 39                    2249 	add	hl, sp
      0009F3 7E                    2250 	ld	a, (hl)
      0009F4 21 B2 01              2251 	ld	hl, #434
      0009F7 39                    2252 	add	hl, sp
      0009F8 77                    2253 	ld	(hl), a
                                   2254 ;main.c:301: else if (was_input_depressed(&input_state, btn_left))
      0009F9 7B                    2255 	ld	a, e
      0009FA B7                    2256 	or	a, a
      0009FB 28 09                 2257 	jr	Z, 00155$
                                   2258 ;main.c:303: cursor_tile_x -= 1;
      0009FD 7E                    2259 	ld	a, (hl)
      0009FE 3D                    2260 	dec	a
      0009FF 21 98 01              2261 	ld	hl, #408
      000A02 39                    2262 	add	hl, sp
      000A03 77                    2263 	ld	(hl), a
      000A04 18 30                 2264 	jr	00162$
      000A06                       2265 00155$:
                                   2266 ;main.c:305: else if (was_input_depressed(&input_state, btn_right))
      000A06 21 96 01              2267 	ld	hl, #406
      000A09 39                    2268 	add	hl, sp
      000A0A 7E                    2269 	ld	a, (hl)
      000A0B 21 B5 01              2270 	ld	hl, #437
      000A0E 39                    2271 	add	hl, sp
      000A0F 77                    2272 	ld	(hl), a
      000A10 21 97 01              2273 	ld	hl, #407
      000A13 39                    2274 	add	hl, sp
      000A14 7E                    2275 	ld	a, (hl)
      000A15 21 B6 01              2276 	ld	hl, #438
      000A18 39                    2277 	add	hl, sp
      000A19 32                    2278 	ld	(hl-), a
      000A1A 3E 05                 2279 	ld	a, #0x05
      000A1C F5                    2280 	push	af
      000A1D 33                    2281 	inc	sp
      000A1E 2A                    2282 	ld	a, (hl+)
      000A1F 5F                    2283 	ld	e, a
      000A20 56                    2284 	ld	d, (hl)
      000A21 D5                    2285 	push	de
      000A22 CDr77r02              2286 	call	_was_input_depressed
      000A25 E8 03                 2287 	add	sp, #3
      000A27 7B                    2288 	ld	a, e
      000A28 B7                    2289 	or	a, a
      000A29 28 0B                 2290 	jr	Z, 00162$
                                   2291 ;main.c:307: cursor_tile_x += 1;
      000A2B 21 B2 01              2292 	ld	hl, #434
      000A2E 39                    2293 	add	hl, sp
      000A2F 7E                    2294 	ld	a, (hl)
      000A30 3C                    2295 	inc	a
      000A31 21 98 01              2296 	ld	hl, #408
      000A34 39                    2297 	add	hl, sp
      000A35 77                    2298 	ld	(hl), a
      000A36                       2299 00162$:
                                   2300 ;main.c:312: ? 19
      000A36 21 98 01              2301 	ld	hl, #408
      000A39 39                    2302 	add	hl, sp
      000A3A 7E                    2303 	ld	a, (hl)
      000A3B 3C                    2304 	inc	a
      000A3C 20 0B                 2305 	jr	NZ, 00210$
      000A3E 21 B5 01              2306 	ld	hl, #437
      000A41 39                    2307 	add	hl, sp
      000A42 3E 13                 2308 	ld	a, #0x13
      000A44 22                    2309 	ld	(hl+), a
      000A45 AF                    2310 	xor	a, a
      000A46 77                    2311 	ld	(hl), a
      000A47 18 1E                 2312 	jr	00211$
      000A49                       2313 00210$:
                                   2314 ;main.c:314: ? 0
      000A49 3E 13                 2315 	ld	a, #0x13
      000A4B 21 98 01              2316 	ld	hl, #408
      000A4E 39                    2317 	add	hl, sp
      000A4F 96                    2318 	sub	a, (hl)
      000A50 30 09                 2319 	jr	NC, 00212$
      000A52 AF                    2320 	xor	a, a
      000A53 21 B5 01              2321 	ld	hl, #437
      000A56 39                    2322 	add	hl, sp
      000A57 22                    2323 	ld	(hl+), a
      000A58 77                    2324 	ld	(hl), a
      000A59 18 0C                 2325 	jr	00213$
      000A5B                       2326 00212$:
                                   2327 ;main.c:315: : cursor_tile_x;
      000A5B 21 98 01              2328 	ld	hl, #408
      000A5E 39                    2329 	add	hl, sp
      000A5F 7E                    2330 	ld	a, (hl)
      000A60 21 B5 01              2331 	ld	hl, #437
      000A63 39                    2332 	add	hl, sp
      000A64 22                    2333 	ld	(hl+), a
      000A65 36 00                 2334 	ld	(hl), #0x00
      000A67                       2335 00213$:
      000A67                       2336 00211$:
      000A67 21 B5 01              2337 	ld	hl, #437
      000A6A 39                    2338 	add	hl, sp
      000A6B 7E                    2339 	ld	a, (hl)
      000A6C 21 98 01              2340 	ld	hl, #408
      000A6F 39                    2341 	add	hl, sp
                                   2342 ;main.c:319: ? 17
      000A70 22                    2343 	ld	(hl+), a
      000A71 7E                    2344 	ld	a, (hl)
      000A72 3C                    2345 	inc	a
      000A73 20 0B                 2346 	jr	NZ, 00214$
      000A75 21 B5 01              2347 	ld	hl, #437
      000A78 39                    2348 	add	hl, sp
      000A79 3E 11                 2349 	ld	a, #0x11
      000A7B 22                    2350 	ld	(hl+), a
      000A7C AF                    2351 	xor	a, a
      000A7D 77                    2352 	ld	(hl), a
      000A7E 18 1E                 2353 	jr	00215$
      000A80                       2354 00214$:
                                   2355 ;main.c:321: ? 0
      000A80 3E 11                 2356 	ld	a, #0x11
      000A82 21 99 01              2357 	ld	hl, #409
      000A85 39                    2358 	add	hl, sp
      000A86 96                    2359 	sub	a, (hl)
      000A87 30 09                 2360 	jr	NC, 00216$
      000A89 AF                    2361 	xor	a, a
      000A8A 21 B5 01              2362 	ld	hl, #437
      000A8D 39                    2363 	add	hl, sp
      000A8E 22                    2364 	ld	(hl+), a
      000A8F 77                    2365 	ld	(hl), a
      000A90 18 0C                 2366 	jr	00217$
      000A92                       2367 00216$:
                                   2368 ;main.c:322: : cursor_tile_y;
      000A92 21 99 01              2369 	ld	hl, #409
      000A95 39                    2370 	add	hl, sp
      000A96 7E                    2371 	ld	a, (hl)
      000A97 21 B5 01              2372 	ld	hl, #437
      000A9A 39                    2373 	add	hl, sp
      000A9B 22                    2374 	ld	(hl+), a
      000A9C 36 00                 2375 	ld	(hl), #0x00
      000A9E                       2376 00217$:
      000A9E                       2377 00215$:
      000A9E 21 B5 01              2378 	ld	hl, #437
      000AA1 39                    2379 	add	hl, sp
      000AA2 7E                    2380 	ld	a, (hl)
      000AA3 21 99 01              2381 	ld	hl, #409
      000AA6 39                    2382 	add	hl, sp
      000AA7 77                    2383 	ld	(hl), a
                                   2384 ;main.c:324: update_cursor_position(cursor_tile_x, cursor_tile_y);
      000AA8 3A                    2385 	ld	a, (hl-)
      000AA9 57                    2386 	ld	d, a
      000AAA 5E                    2387 	ld	e, (hl)
      000AAB D5                    2388 	push	de
      000AAC CDrE8r02              2389 	call	_update_cursor_position
      000AAF E1                    2390 	pop	hl
                                   2391 ;main.c:327: if (was_input_depressed(&input_state, btn_b))
      000AB0 21 96 01              2392 	ld	hl, #406
      000AB3 39                    2393 	add	hl, sp
      000AB4 2A                    2394 	ld	a, (hl+)
      000AB5 4F                    2395 	ld	c, a
      000AB6 46                    2396 	ld	b, (hl)
      000AB7 3E 01                 2397 	ld	a, #0x01
      000AB9 F5                    2398 	push	af
      000ABA 33                    2399 	inc	sp
      000ABB C5                    2400 	push	bc
      000ABC CDr77r02              2401 	call	_was_input_depressed
      000ABF E8 03                 2402 	add	sp, #3
      000AC1 7B                    2403 	ld	a, e
      000AC2 B7                    2404 	or	a, a
      000AC3 CArDDr0B              2405 	jp	Z, 00172$
                                   2406 ;main.c:329: uint8_t tile_data = board[cursor_tile_x][cursor_tile_y];
      000AC6 21 98 01              2407 	ld	hl, #408
      000AC9 39                    2408 	add	hl, sp
      000ACA 4E                    2409 	ld	c, (hl)
      000ACB 06 00                 2410 	ld	b, #0x00
      000ACD 69                    2411 	ld	l, c
      000ACE 60                    2412 	ld	h, b
      000ACF 29                    2413 	add	hl, hl
      000AD0 29                    2414 	add	hl, hl
      000AD1 29                    2415 	add	hl, hl
      000AD2 09                    2416 	add	hl, bc
      000AD3 29                    2417 	add	hl, hl
      000AD4 4D                    2418 	ld	c, l
      000AD5 44                    2419 	ld	b, h
      000AD6 21 9C 01              2420 	ld	hl, #412
      000AD9 39                    2421 	add	hl, sp
      000ADA 2A                    2422 	ld	a,	(hl+)
      000ADB 66                    2423 	ld	h, (hl)
      000ADC 6F                    2424 	ld	l, a
      000ADD 09                    2425 	add	hl, bc
      000ADE 4D                    2426 	ld	c, l
      000ADF 44                    2427 	ld	b, h
      000AE0 21 99 01              2428 	ld	hl, #409
      000AE3 39                    2429 	add	hl, sp
      000AE4 6E                    2430 	ld	l, (hl)
      000AE5 26 00                 2431 	ld	h, #0x00
      000AE7 09                    2432 	add	hl, bc
      000AE8 E5                    2433 	push	hl
      000AE9 7D                    2434 	ld	a, l
      000AEA 21 B3 01              2435 	ld	hl, #435
      000AED 39                    2436 	add	hl, sp
      000AEE 77                    2437 	ld	(hl), a
      000AEF E1                    2438 	pop	hl
      000AF0 7C                    2439 	ld	a, h
      000AF1 21 B2 01              2440 	ld	hl, #434
      000AF4 39                    2441 	add	hl, sp
      000AF5 32                    2442 	ld	(hl-), a
      000AF6 2A                    2443 	ld	a, (hl+)
      000AF7 5F                    2444 	ld	e, a
      000AF8 56                    2445 	ld	d, (hl)
      000AF9 1A                    2446 	ld	a, (de)
      000AFA 21 B6 01              2447 	ld	hl, #438
      000AFD 39                    2448 	add	hl, sp
      000AFE 77                    2449 	ld	(hl), a
                                   2450 ;main.c:330: uint8_t is_alive = tile_data & k_tile_is_alive_mask;
      000AFF 21rE1r02              2451 	ld	hl, #_k_tile_is_alive_mask
      000B02 4E                    2452 	ld	c, (hl)
                                   2453 ;main.c:259: update_tile_position(tile_data & k_tile_sprite_index_mask, x, y);
      000B03 FArE0r02              2454 	ld	a, (#_k_tile_sprite_index_mask)
      000B06 21 B5 01              2455 	ld	hl, #437
      000B09 39                    2456 	add	hl, sp
                                   2457 ;main.c:330: uint8_t is_alive = tile_data & k_tile_is_alive_mask;
      000B0A 22                    2458 	ld	(hl+), a
      000B0B 7E                    2459 	ld	a, (hl)
      000B0C A1                    2460 	and	a, c
      000B0D 21 B0 01              2461 	ld	hl, #432
      000B10 39                    2462 	add	hl, sp
      000B11 77                    2463 	ld	(hl), a
                                   2464 ;main.c:332: if (!is_alive)
      000B12 7E                    2465 	ld	a, (hl)
      000B13 B7                    2466 	or	a, a
      000B14 20 4A                 2467 	jr	NZ, 00166$
                                   2468 ;main.c:334: if (next_available_sprite_index < 39)
      000B16 21 B4 01              2469 	ld	hl, #436
      000B19 39                    2470 	add	hl, sp
      000B1A 7E                    2471 	ld	a, (hl)
      000B1B D6 27                 2472 	sub	a, #0x27
      000B1D D2rD0r0B              2473 	jp	NC, 00167$
                                   2474 ;main.c:337: tile_data |= available_sprites[next_available_sprite_index];
      000B20 21 9A 01              2475 	ld	hl,#0x19a
      000B23 39                    2476 	add	hl,sp
      000B24 2A                    2477 	ld	a, (hl+)
      000B25 5F                    2478 	ld	e, a
      000B26 56                    2479 	ld	d, (hl)
      000B27 21 B4 01              2480 	ld	hl, #436
      000B2A 39                    2481 	add	hl, sp
      000B2B 6E                    2482 	ld	l, (hl)
      000B2C 26 00                 2483 	ld	h, #0x00
      000B2E 19                    2484 	add	hl, de
      000B2F 4D                    2485 	ld	c, l
      000B30 44                    2486 	ld	b, h
      000B31 0A                    2487 	ld	a, (bc)
      000B32 21 B6 01              2488 	ld	hl, #438
      000B35 39                    2489 	add	hl, sp
      000B36 B6                    2490 	or	a, (hl)
                                   2491 ;main.c:338: next_available_sprite_index++;
      000B37 2B                    2492 	dec	hl
      000B38 2B                    2493 	dec	hl
      000B39 4F                    2494 	ld	c, a
      000B3A 34                    2495 	inc	(hl)
                                   2496 ;main.c:341: update_tile_position(tile_data & k_tile_sprite_index_mask, cursor_tile_x, cursor_tile_y);
      000B3B 23                    2497 	inc	hl
      000B3C 79                    2498 	ld	a, c
      000B3D A6                    2499 	and	a, (hl)
      000B3E C5                    2500 	push	bc
      000B3F 21 9B 01              2501 	ld	hl, #411
      000B42 39                    2502 	add	hl, sp
      000B43 66                    2503 	ld	h, (hl)
                                   2504 ;	spillPairReg hl
                                   2505 ;	spillPairReg hl
      000B44 E5                    2506 	push	hl
      000B45 33                    2507 	inc	sp
      000B46 21 9B 01              2508 	ld	hl, #411
      000B49 39                    2509 	add	hl, sp
      000B4A 66                    2510 	ld	h, (hl)
                                   2511 ;	spillPairReg hl
                                   2512 ;	spillPairReg hl
      000B4B E5                    2513 	push	hl
      000B4C 33                    2514 	inc	sp
      000B4D F5                    2515 	push	af
      000B4E 33                    2516 	inc	sp
      000B4F CDr31r03              2517 	call	_update_tile_position
      000B52 E8 03                 2518 	add	sp, #3
      000B54 C1                    2519 	pop	bc
                                   2520 ;main.c:344: tile_data |= k_tile_is_alive_mask;
      000B55 FArE1r02              2521 	ld	a, (#_k_tile_is_alive_mask)
      000B58 B1                    2522 	or	a, c
      000B59 21 B6 01              2523 	ld	hl, #438
      000B5C 39                    2524 	add	hl, sp
      000B5D 77                    2525 	ld	(hl), a
      000B5E 18 70                 2526 	jr	00167$
      000B60                       2527 00166$:
                                   2528 ;main.c:350: update_tile_position(tile_data & k_tile_sprite_index_mask, 0, 19);
      000B60 21 B5 01              2529 	ld	hl, #437
      000B63 39                    2530 	add	hl, sp
      000B64 2A                    2531 	ld	a, (hl+)
      000B65 A6                    2532 	and	a, (hl)
      000B66 2B                    2533 	dec	hl
      000B67 77                    2534 	ld	(hl), a
      000B68 3E 13                 2535 	ld	a, #0x13
      000B6A F5                    2536 	push	af
      000B6B 33                    2537 	inc	sp
      000B6C AF                    2538 	xor	a, a
      000B6D F5                    2539 	push	af
      000B6E 33                    2540 	inc	sp
      000B6F 7E                    2541 	ld	a, (hl)
      000B70 F5                    2542 	push	af
      000B71 33                    2543 	inc	sp
      000B72 CDr31r03              2544 	call	_update_tile_position
      000B75 E8 03                 2545 	add	sp, #3
                                   2546 ;main.c:353: next_available_sprite_index--;
      000B77 21 B4 01              2547 	ld	hl, #436
      000B7A 39                    2548 	add	hl, sp
      000B7B 35                    2549 	dec	(hl)
                                   2550 ;main.c:354: available_sprites[next_available_sprite_index] = tile_data & k_tile_sprite_index_mask;
      000B7C 21 9A 01              2551 	ld	hl,#0x19a
      000B7F 39                    2552 	add	hl,sp
      000B80 2A                    2553 	ld	a, (hl+)
      000B81 5F                    2554 	ld	e, a
      000B82 56                    2555 	ld	d, (hl)
      000B83 21 B4 01              2556 	ld	hl, #436
      000B86 39                    2557 	add	hl, sp
      000B87 6E                    2558 	ld	l, (hl)
      000B88 26 00                 2559 	ld	h, #0x00
      000B8A 19                    2560 	add	hl, de
      000B8B E5                    2561 	push	hl
      000B8C 7D                    2562 	ld	a, l
      000B8D 21 B1 01              2563 	ld	hl, #433
      000B90 39                    2564 	add	hl, sp
      000B91 77                    2565 	ld	(hl), a
      000B92 E1                    2566 	pop	hl
      000B93 7C                    2567 	ld	a, h
      000B94 21 B0 01              2568 	ld	hl, #432
      000B97 39                    2569 	add	hl, sp
      000B98 77                    2570 	ld	(hl), a
      000B99 FArE0r02              2571 	ld	a, (#_k_tile_sprite_index_mask)
      000B9C 21 B5 01              2572 	ld	hl, #437
      000B9F 39                    2573 	add	hl, sp
      000BA0 22                    2574 	ld	(hl+), a
      000BA1 3A                    2575 	ld	a, (hl-)
      000BA2 A6                    2576 	and	a, (hl)
      000BA3 4F                    2577 	ld	c, a
      000BA4 21 AF 01              2578 	ld	hl, #431
      000BA7 39                    2579 	add	hl, sp
      000BA8 2A                    2580 	ld	a,	(hl+)
      000BA9 66                    2581 	ld	h, (hl)
      000BAA 6F                    2582 	ld	l, a
      000BAB 71                    2583 	ld	(hl), c
                                   2584 ;main.c:357: tile_data &= ~k_tile_sprite_index_mask;
      000BAC 21 B5 01              2585 	ld	hl, #437
      000BAF 39                    2586 	add	hl, sp
      000BB0 7E                    2587 	ld	a, (hl)
      000BB1 2F                    2588 	cpl
      000BB2 21 B0 01              2589 	ld	hl, #432
      000BB5 39                    2590 	add	hl, sp
      000BB6 77                    2591 	ld	(hl), a
      000BB7 21 B6 01              2592 	ld	hl, #438
      000BBA 39                    2593 	add	hl, sp
      000BBB 7E                    2594 	ld	a, (hl)
      000BBC 21 B0 01              2595 	ld	hl, #432
      000BBF 39                    2596 	add	hl, sp
      000BC0 A6                    2597 	and	a, (hl)
      000BC1 21 B6 01              2598 	ld	hl, #438
      000BC4 39                    2599 	add	hl, sp
      000BC5 77                    2600 	ld	(hl), a
                                   2601 ;main.c:360: tile_data &= ~k_tile_is_alive_mask;
      000BC6 FArE1r02              2602 	ld	a, (#_k_tile_is_alive_mask)
      000BC9 2F                    2603 	cpl
      000BCA 21 B6 01              2604 	ld	hl, #438
      000BCD 39                    2605 	add	hl, sp
      000BCE A6                    2606 	and	a, (hl)
      000BCF 77                    2607 	ld	(hl), a
      000BD0                       2608 00167$:
                                   2609 ;main.c:364: board[cursor_tile_x][cursor_tile_y] = tile_data;
      000BD0 21 B1 01              2610 	ld	hl,#0x1b1
      000BD3 39                    2611 	add	hl,sp
      000BD4 2A                    2612 	ld	a, (hl+)
      000BD5 5F                    2613 	ld	e, a
      000BD6 56                    2614 	ld	d, (hl)
      000BD7 21 B6 01              2615 	ld	hl, #438
      000BDA 39                    2616 	add	hl, sp
      000BDB 7E                    2617 	ld	a, (hl)
      000BDC 12                    2618 	ld	(de), a
      000BDD                       2619 00172$:
                                   2620 ;main.c:369: wait_vbls_done(1);
      000BDD 3E 01                 2621 	ld	a, #0x01
      000BDF F5                    2622 	push	af
      000BE0 33                    2623 	inc	sp
      000BE1 CDrBFr02              2624 	call	_wait_vbls_done
      000BE4 33                    2625 	inc	sp
      000BE5 C3r8Br04              2626 	jp	00174$
                                   2627 ;main.c:371: }
      000BE8 21 B7 01              2628 	ld	hl, #439
      000BEB 39                    2629 	add	hl, sp
      000BEC F9                    2630 	ld	sp, hl
      000BED C9                    2631 	ret
                                   2632 	.area _CODE
                                   2633 	.area _INITIALIZER
      000000                       2634 __xinit__k_sprites:
      000000 00                    2635 	.db #0x00	; 0
      000001 00                    2636 	.db #0x00	; 0
      000002 00                    2637 	.db #0x00	; 0
      000003 00                    2638 	.db #0x00	; 0
      000004 00                    2639 	.db #0x00	; 0
      000005 00                    2640 	.db #0x00	; 0
      000006 00                    2641 	.db #0x00	; 0
      000007 00                    2642 	.db #0x00	; 0
      000008 00                    2643 	.db #0x00	; 0
      000009 00                    2644 	.db #0x00	; 0
      00000A 00                    2645 	.db #0x00	; 0
      00000B 00                    2646 	.db #0x00	; 0
      00000C 00                    2647 	.db #0x00	; 0
      00000D 00                    2648 	.db #0x00	; 0
      00000E 00                    2649 	.db #0x00	; 0
      00000F 00                    2650 	.db #0x00	; 0
      000010 00                    2651 	.db #0x00	; 0
      000011 00                    2652 	.db #0x00	; 0
      000012 7F                    2653 	.db #0x7f	; 127
      000013 7F                    2654 	.db #0x7f	; 127
      000014 7F                    2655 	.db #0x7f	; 127
      000015 7F                    2656 	.db #0x7f	; 127
      000016 7F                    2657 	.db #0x7f	; 127
      000017 7F                    2658 	.db #0x7f	; 127
      000018 7F                    2659 	.db #0x7f	; 127
      000019 7F                    2660 	.db #0x7f	; 127
      00001A 7F                    2661 	.db #0x7f	; 127
      00001B 7F                    2662 	.db #0x7f	; 127
      00001C 7F                    2663 	.db #0x7f	; 127
      00001D 7F                    2664 	.db #0x7f	; 127
      00001E 7F                    2665 	.db #0x7f	; 127
      00001F 7F                    2666 	.db #0x7f	; 127
      000020 00                    2667 	.db #0x00	; 0
      000021 00                    2668 	.db #0x00	; 0
      000022 00                    2669 	.db #0x00	; 0
      000023 3E                    2670 	.db #0x3e	; 62
      000024 00                    2671 	.db #0x00	; 0
      000025 41                    2672 	.db #0x41	; 65	'A'
      000026 00                    2673 	.db #0x00	; 0
      000027 41                    2674 	.db #0x41	; 65	'A'
      000028 00                    2675 	.db #0x00	; 0
      000029 41                    2676 	.db #0x41	; 65	'A'
      00002A 00                    2677 	.db #0x00	; 0
      00002B 41                    2678 	.db #0x41	; 65	'A'
      00002C 00                    2679 	.db #0x00	; 0
      00002D 41                    2680 	.db #0x41	; 65	'A'
      00002E 00                    2681 	.db #0x00	; 0
      00002F 3E                    2682 	.db #0x3e	; 62
      000030 00                    2683 	.db #0x00	; 0
      000031 00                    2684 	.db #0x00	; 0
      000032 41                    2685 	.db #0x41	; 65	'A'
      000033 7F                    2686 	.db #0x7f	; 127
      000034 3E                    2687 	.db #0x3e	; 62
      000035 7F                    2688 	.db #0x7f	; 127
      000036 3E                    2689 	.db #0x3e	; 62
      000037 7F                    2690 	.db #0x7f	; 127
      000038 3E                    2691 	.db #0x3e	; 62
      000039 7F                    2692 	.db #0x7f	; 127
      00003A 3E                    2693 	.db #0x3e	; 62
      00003B 7F                    2694 	.db #0x7f	; 127
      00003C 3E                    2695 	.db #0x3e	; 62
      00003D 7F                    2696 	.db #0x7f	; 127
      00003E 41                    2697 	.db #0x41	; 65	'A'
      00003F 7F                    2698 	.db #0x7f	; 127
                                   2699 	.area _CABS (ABS)
