                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _update_tile_position
                                     13 	.globl _update_tile_sprite
                                     14 	.globl _update_cursor_position
                                     15 	.globl _update_cursor_sprite
                                     16 	.globl _wait_vbls_done
                                     17 	.globl _is_input_held
                                     18 	.globl _was_input_released
                                     19 	.globl _was_input_depressed
                                     20 	.globl _update_input_state
                                     21 	.globl _set_sprite_data
                                     22 	.globl _set_bkg_tiles
                                     23 	.globl _set_bkg_data
                                     24 	.globl _wait_vbl_done
                                     25 	.globl _joypad
                                     26 	.globl _k_sprites
                                     27 	.globl _k_cursor_sprite_index
                                     28 	.globl _k_cursor_live_tile_index
                                     29 	.globl _k_cursor_empty_tile_index
                                     30 	.globl _k_live_tile_index
                                     31 	.globl _k_empty_tile_index
                                     32 	.globl _k_tile_was_alive_mask
                                     33 	.globl _k_tile_is_alive_mask
                                     34 	.globl _k_tile_sprite_index_mask
                                     35 	.globl _k_execution_state_active_mask
                                     36 	.globl _k_background_tiles
                                     37 	.globl _k_background_map
                                     38 ;--------------------------------------------------------
                                     39 ; special function registers
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area _DATA
                                     45 ;--------------------------------------------------------
                                     46 ; ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area _INITIALIZED
      000000                         49 _k_sprites::
      000000                         50 	.ds 64
                                     51 ;--------------------------------------------------------
                                     52 ; absolute external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area _DABS (ABS)
                                     55 ;--------------------------------------------------------
                                     56 ; global & static initialisations
                                     57 ;--------------------------------------------------------
                                     58 	.area _HOME
                                     59 	.area _GSINIT
                                     60 	.area _GSFINAL
                                     61 	.area _GSINIT
                                     62 ;--------------------------------------------------------
                                     63 ; Home
                                     64 ;--------------------------------------------------------
                                     65 	.area _HOME
                                     66 	.area _HOME
                                     67 ;--------------------------------------------------------
                                     68 ; code
                                     69 ;--------------------------------------------------------
                                     70 	.area _CODE
                                     71 ;input.h:31: void update_input_state(struct input_state* is, uint8_t button_state)
                                     72 ;	---------------------------------
                                     73 ; Function update_input_state
                                     74 ; ---------------------------------
      000000                         75 _update_input_state::
      000000 E8 FB                   76 	add	sp, #-5
                                     77 ;input.h:34: is->previous_state = is->current_state;
      000002 F8 07                   78 	ldhl	sp,	#7
      000004 7E                      79 	ld	a, (hl)
      000005 F8 00                   80 	ldhl	sp,	#0
      000007 77                      81 	ld	(hl), a
      000008 F8 08                   82 	ldhl	sp,	#8
      00000A 7E                      83 	ld	a, (hl)
      00000B F8 01                   84 	ldhl	sp,	#1
      00000D 22                      85 	ld	(hl+), a
      00000E C1                      86 	pop	bc
      00000F C5                      87 	push	bc
      000010 03                      88 	inc	bc
      000011 0A                      89 	ld	a, (bc)
      000012 77                      90 	ld	(hl), a
      000013 D1                      91 	pop	de
      000014 D5                      92 	push	de
      000015 7E                      93 	ld	a, (hl)
      000016 12                      94 	ld	(de), a
                                     95 ;input.h:37: is->current_state = ((button_state & J_A) == J_A) << btn_a;
      000017 F8 09                   96 	ldhl	sp,	#9
      000019 7E                      97 	ld	a, (hl)
      00001A F8 03                   98 	ldhl	sp,	#3
      00001C 22                      99 	ld	(hl+), a
      00001D AF                     100 	xor	a, a
      00001E 32                     101 	ld	(hl-), a
      00001F 7E                     102 	ld	a, (hl)
      000020 E6 10                  103 	and	a, #0x10
      000022 5F                     104 	ld	e, a
      000023 16 00                  105 	ld	d, #0x00
      000025 7B                     106 	ld	a, e
      000026 D6 10                  107 	sub	a, #0x10
      000028 B2                     108 	or	a, d
      000029 3E 01                  109 	ld	a, #0x01
      00002B 28 01                  110 	jr	Z, 00104$
      00002D AF                     111 	xor	a, a
      00002E                        112 00104$:
                                    113 ;input.h:38: is->current_state |= ((button_state & J_B) == J_B) << btn_b;
      00002E 02                     114 	ld	(bc), a
      00002F 5F                     115 	ld	e, a
      000030 F8 03                  116 	ldhl	sp,	#3
      000032 7E                     117 	ld	a, (hl)
      000033 E6 20                  118 	and	a, #0x20
                                    119 ;	spillPairReg hl
                                    120 ;	spillPairReg hl
      000035 2E 00                  121 	ld	l, #0x00
      000037 D6 20                  122 	sub	a, #0x20
      000039 B5                     123 	or	a, l
      00003A 3E 01                  124 	ld	a, #0x01
      00003C 28 01                  125 	jr	Z, 00106$
      00003E AF                     126 	xor	a, a
      00003F                        127 00106$:
      00003F 87                     128 	add	a, a
      000040 B3                     129 	or	a, e
      000041 5F                     130 	ld	e, a
      000042 02                     131 	ld	(bc), a
                                    132 ;input.h:39: is->current_state |= ((button_state & J_UP) == J_UP) << btn_up;
      000043 F8 03                  133 	ldhl	sp,	#3
      000045 7E                     134 	ld	a, (hl)
      000046 E6 04                  135 	and	a, #0x04
                                    136 ;	spillPairReg hl
                                    137 ;	spillPairReg hl
      000048 2E 00                  138 	ld	l, #0x00
      00004A D6 04                  139 	sub	a, #0x04
      00004C B5                     140 	or	a, l
      00004D 3E 01                  141 	ld	a, #0x01
      00004F 28 01                  142 	jr	Z, 00108$
      000051 AF                     143 	xor	a, a
      000052                        144 00108$:
      000052 87                     145 	add	a, a
      000053 87                     146 	add	a, a
      000054 B3                     147 	or	a, e
      000055 5F                     148 	ld	e, a
      000056 02                     149 	ld	(bc), a
                                    150 ;input.h:40: is->current_state |= ((button_state & J_DOWN) == J_DOWN) << btn_down;
      000057 F8 03                  151 	ldhl	sp,	#3
      000059 7E                     152 	ld	a, (hl)
      00005A E6 08                  153 	and	a, #0x08
                                    154 ;	spillPairReg hl
                                    155 ;	spillPairReg hl
      00005C 2E 00                  156 	ld	l, #0x00
      00005E D6 08                  157 	sub	a, #0x08
      000060 B5                     158 	or	a, l
      000061 3E 01                  159 	ld	a, #0x01
      000063 28 01                  160 	jr	Z, 00110$
      000065 AF                     161 	xor	a, a
      000066                        162 00110$:
      000066 87                     163 	add	a, a
      000067 87                     164 	add	a, a
      000068 87                     165 	add	a, a
      000069 B3                     166 	or	a, e
      00006A 5F                     167 	ld	e, a
      00006B 02                     168 	ld	(bc), a
                                    169 ;input.h:41: is->current_state |= ((button_state & J_LEFT) == J_LEFT) << btn_left;
      00006C F8 03                  170 	ldhl	sp,	#3
      00006E 7E                     171 	ld	a, (hl)
      00006F E6 02                  172 	and	a, #0x02
                                    173 ;	spillPairReg hl
                                    174 ;	spillPairReg hl
      000071 2E 00                  175 	ld	l, #0x00
      000073 D6 02                  176 	sub	a, #0x02
      000075 B5                     177 	or	a, l
      000076 3E 01                  178 	ld	a, #0x01
      000078 28 01                  179 	jr	Z, 00112$
      00007A AF                     180 	xor	a, a
      00007B                        181 00112$:
      00007B CB 37                  182 	swap	a
      00007D E6 F0                  183 	and	a, #0xf0
      00007F B3                     184 	or	a, e
      000080 5F                     185 	ld	e, a
      000081 02                     186 	ld	(bc), a
                                    187 ;input.h:42: is->current_state |= ((button_state & J_RIGHT) == J_RIGHT) << btn_right;
      000082 F8 03                  188 	ldhl	sp,	#3
      000084 7E                     189 	ld	a, (hl)
      000085 E6 01                  190 	and	a, #0x01
                                    191 ;	spillPairReg hl
                                    192 ;	spillPairReg hl
      000087 2E 00                  193 	ld	l, #0x00
      000089 3D                     194 	dec	a
      00008A B5                     195 	or	a, l
      00008B 3E 01                  196 	ld	a, #0x01
      00008D 28 01                  197 	jr	Z, 00114$
      00008F AF                     198 	xor	a, a
      000090                        199 00114$:
      000090 CB 37                  200 	swap	a
      000092 07                     201 	rlca
      000093 E6 E0                  202 	and	a, #0xe0
      000095 B3                     203 	or	a, e
      000096 5F                     204 	ld	e, a
      000097 02                     205 	ld	(bc), a
                                    206 ;input.h:43: is->current_state |= ((button_state & J_START) == J_START) << btn_start;
      000098 F8 03                  207 	ldhl	sp,	#3
      00009A 7E                     208 	ld	a, (hl)
      00009B E6 80                  209 	and	a, #0x80
                                    210 ;	spillPairReg hl
                                    211 ;	spillPairReg hl
      00009D 2E 00                  212 	ld	l, #0x00
      00009F D6 80                  213 	sub	a, #0x80
      0000A1 B5                     214 	or	a, l
      0000A2 3E 01                  215 	ld	a, #0x01
      0000A4 28 01                  216 	jr	Z, 00116$
      0000A6 AF                     217 	xor	a, a
      0000A7                        218 00116$:
      0000A7 0F                     219 	rrca
      0000A8 0F                     220 	rrca
      0000A9 E6 C0                  221 	and	a, #0xc0
      0000AB B3                     222 	or	a, e
      0000AC 5F                     223 	ld	e, a
      0000AD 02                     224 	ld	(bc), a
                                    225 ;input.h:44: is->current_state |= ((button_state & J_SELECT) == J_SELECT) << btn_select;
      0000AE F8 03                  226 	ldhl	sp,	#3
      0000B0 7E                     227 	ld	a, (hl)
      0000B1 E6 40                  228 	and	a, #0x40
                                    229 ;	spillPairReg hl
                                    230 ;	spillPairReg hl
      0000B3 2E 00                  231 	ld	l, #0x00
      0000B5 D6 40                  232 	sub	a, #0x40
      0000B7 B5                     233 	or	a, l
      0000B8 3E 01                  234 	ld	a, #0x01
      0000BA 28 01                  235 	jr	Z, 00118$
      0000BC AF                     236 	xor	a, a
      0000BD                        237 00118$:
      0000BD 0F                     238 	rrca
      0000BE E6 80                  239 	and	a, #0x80
      0000C0 B3                     240 	or	a, e
      0000C1 57                     241 	ld	d, a
      0000C2 02                     242 	ld	(bc), a
                                    243 ;input.h:47: is->held_buttons = is->previous_state & is->current_state;
      0000C3 C1                     244 	pop	bc
      0000C4 C5                     245 	push	bc
      0000C5 03                     246 	inc	bc
      0000C6 03                     247 	inc	bc
      0000C7 F8 02                  248 	ldhl	sp,	#2
                                    249 ;input.h:50: is->depressed_buttons = (is->current_state ^ is->held_buttons);
                                    250 ;input.h:53: is->released_buttons = (is->previous_state ^ is->held_buttons);
      0000C9 3A                     251 	ld	a, (hl-)
      0000CA 2B                     252 	dec	hl
      0000CB A2                     253 	and	a, d
      0000CC 5F                     254 	ld	e, a
      0000CD 02                     255 	ld	(bc), a
      0000CE C1                     256 	pop	bc
      0000CF C5                     257 	push	bc
      0000D0 03                     258 	inc	bc
      0000D1 03                     259 	inc	bc
      0000D2 03                     260 	inc	bc
      0000D3 7A                     261 	ld	a, d
      0000D4 AB                     262 	xor	a, e
      0000D5 02                     263 	ld	(bc), a
      0000D6 D5                     264 	push	de
      0000D7 2A                     265 	ld	a, (hl+)
      0000D8 5F                     266 	ld	e, a
      0000D9 56                     267 	ld	d, (hl)
      0000DA 21 04 00               268 	ld	hl, #0x0004
      0000DD 19                     269 	add	hl, de
      0000DE D1                     270 	pop	de
      0000DF 4D                     271 	ld	c, l
      0000E0 44                     272 	ld	b, h
      0000E1 F8 02                  273 	ldhl	sp,	#2
      0000E3 7E                     274 	ld	a, (hl)
      0000E4 AB                     275 	xor	a, e
      0000E5 02                     276 	ld	(bc), a
                                    277 ;input.h:54: }
      0000E6 E8 05                  278 	add	sp, #5
      0000E8 C9                     279 	ret
      0000E9                        280 _k_background_map:
      0000E9 00                     281 	.db #0x00	; 0
      0000EA 00                     282 	.db #0x00	; 0
      0000EB 00                     283 	.db #0x00	; 0
      0000EC 00                     284 	.db #0x00	; 0
      0000ED 00                     285 	.db #0x00	; 0
      0000EE 00                     286 	.db #0x00	; 0
      0000EF 00                     287 	.db #0x00	; 0
      0000F0 00                     288 	.db #0x00	; 0
      0000F1 00                     289 	.db #0x00	; 0
      0000F2 00                     290 	.db #0x00	; 0
      0000F3 00                     291 	.db #0x00	; 0
      0000F4 00                     292 	.db #0x00	; 0
      0000F5 00                     293 	.db #0x00	; 0
      0000F6 00                     294 	.db #0x00	; 0
      0000F7 00                     295 	.db #0x00	; 0
      0000F8 00                     296 	.db #0x00	; 0
      0000F9 00                     297 	.db #0x00	; 0
      0000FA 00                     298 	.db #0x00	; 0
      0000FB 00                     299 	.db #0x00	; 0
      0000FC 00                     300 	.db #0x00	; 0
      0000FD 00                     301 	.db #0x00	; 0
      0000FE 00                     302 	.db #0x00	; 0
      0000FF 00                     303 	.db #0x00	; 0
      000100 00                     304 	.db #0x00	; 0
      000101 00                     305 	.db #0x00	; 0
      000102 00                     306 	.db #0x00	; 0
      000103 00                     307 	.db #0x00	; 0
      000104 00                     308 	.db #0x00	; 0
      000105 00                     309 	.db #0x00	; 0
      000106 00                     310 	.db #0x00	; 0
      000107 00                     311 	.db #0x00	; 0
      000108 00                     312 	.db #0x00	; 0
      000109 00                     313 	.db #0x00	; 0
      00010A 00                     314 	.db #0x00	; 0
      00010B 00                     315 	.db #0x00	; 0
      00010C 00                     316 	.db #0x00	; 0
      00010D 00                     317 	.db #0x00	; 0
      00010E 00                     318 	.db #0x00	; 0
      00010F 00                     319 	.db #0x00	; 0
      000110 00                     320 	.db #0x00	; 0
      000111 00                     321 	.db #0x00	; 0
      000112 00                     322 	.db #0x00	; 0
      000113 00                     323 	.db #0x00	; 0
      000114 00                     324 	.db #0x00	; 0
      000115 00                     325 	.db #0x00	; 0
      000116 00                     326 	.db #0x00	; 0
      000117 00                     327 	.db #0x00	; 0
      000118 00                     328 	.db #0x00	; 0
      000119 00                     329 	.db #0x00	; 0
      00011A 00                     330 	.db #0x00	; 0
      00011B 00                     331 	.db #0x00	; 0
      00011C 00                     332 	.db #0x00	; 0
      00011D 00                     333 	.db #0x00	; 0
      00011E 00                     334 	.db #0x00	; 0
      00011F 00                     335 	.db #0x00	; 0
      000120 00                     336 	.db #0x00	; 0
      000121 00                     337 	.db #0x00	; 0
      000122 00                     338 	.db #0x00	; 0
      000123 00                     339 	.db #0x00	; 0
      000124 00                     340 	.db #0x00	; 0
      000125 00                     341 	.db #0x00	; 0
      000126 00                     342 	.db #0x00	; 0
      000127 00                     343 	.db #0x00	; 0
      000128 00                     344 	.db #0x00	; 0
      000129 00                     345 	.db #0x00	; 0
      00012A 00                     346 	.db #0x00	; 0
      00012B 00                     347 	.db #0x00	; 0
      00012C 00                     348 	.db #0x00	; 0
      00012D 00                     349 	.db #0x00	; 0
      00012E 00                     350 	.db #0x00	; 0
      00012F 00                     351 	.db #0x00	; 0
      000130 00                     352 	.db #0x00	; 0
      000131 00                     353 	.db #0x00	; 0
      000132 00                     354 	.db #0x00	; 0
      000133 00                     355 	.db #0x00	; 0
      000134 00                     356 	.db #0x00	; 0
      000135 00                     357 	.db #0x00	; 0
      000136 00                     358 	.db #0x00	; 0
      000137 00                     359 	.db #0x00	; 0
      000138 00                     360 	.db #0x00	; 0
      000139 00                     361 	.db #0x00	; 0
      00013A 00                     362 	.db #0x00	; 0
      00013B 00                     363 	.db #0x00	; 0
      00013C 00                     364 	.db #0x00	; 0
      00013D 00                     365 	.db #0x00	; 0
      00013E 00                     366 	.db #0x00	; 0
      00013F 00                     367 	.db #0x00	; 0
      000140 00                     368 	.db #0x00	; 0
      000141 00                     369 	.db #0x00	; 0
      000142 00                     370 	.db #0x00	; 0
      000143 00                     371 	.db #0x00	; 0
      000144 00                     372 	.db #0x00	; 0
      000145 00                     373 	.db #0x00	; 0
      000146 00                     374 	.db #0x00	; 0
      000147 00                     375 	.db #0x00	; 0
      000148 00                     376 	.db #0x00	; 0
      000149 00                     377 	.db #0x00	; 0
      00014A 00                     378 	.db #0x00	; 0
      00014B 00                     379 	.db #0x00	; 0
      00014C 00                     380 	.db #0x00	; 0
      00014D 00                     381 	.db #0x00	; 0
      00014E 00                     382 	.db #0x00	; 0
      00014F 00                     383 	.db #0x00	; 0
      000150 00                     384 	.db #0x00	; 0
      000151 00                     385 	.db #0x00	; 0
      000152 00                     386 	.db #0x00	; 0
      000153 00                     387 	.db #0x00	; 0
      000154 00                     388 	.db #0x00	; 0
      000155 00                     389 	.db #0x00	; 0
      000156 00                     390 	.db #0x00	; 0
      000157 00                     391 	.db #0x00	; 0
      000158 00                     392 	.db #0x00	; 0
      000159 00                     393 	.db #0x00	; 0
      00015A 00                     394 	.db #0x00	; 0
      00015B 00                     395 	.db #0x00	; 0
      00015C 00                     396 	.db #0x00	; 0
      00015D 00                     397 	.db #0x00	; 0
      00015E 00                     398 	.db #0x00	; 0
      00015F 00                     399 	.db #0x00	; 0
      000160 00                     400 	.db #0x00	; 0
      000161 00                     401 	.db #0x00	; 0
      000162 00                     402 	.db #0x00	; 0
      000163 00                     403 	.db #0x00	; 0
      000164 00                     404 	.db #0x00	; 0
      000165 00                     405 	.db #0x00	; 0
      000166 00                     406 	.db #0x00	; 0
      000167 00                     407 	.db #0x00	; 0
      000168 00                     408 	.db #0x00	; 0
      000169 00                     409 	.db #0x00	; 0
      00016A 00                     410 	.db #0x00	; 0
      00016B 00                     411 	.db #0x00	; 0
      00016C 00                     412 	.db #0x00	; 0
      00016D 00                     413 	.db #0x00	; 0
      00016E 00                     414 	.db #0x00	; 0
      00016F 00                     415 	.db #0x00	; 0
      000170 00                     416 	.db #0x00	; 0
      000171 00                     417 	.db #0x00	; 0
      000172 00                     418 	.db #0x00	; 0
      000173 00                     419 	.db #0x00	; 0
      000174 00                     420 	.db #0x00	; 0
      000175 00                     421 	.db #0x00	; 0
      000176 00                     422 	.db #0x00	; 0
      000177 00                     423 	.db #0x00	; 0
      000178 00                     424 	.db #0x00	; 0
      000179 00                     425 	.db #0x00	; 0
      00017A 00                     426 	.db #0x00	; 0
      00017B 00                     427 	.db #0x00	; 0
      00017C 00                     428 	.db #0x00	; 0
      00017D 00                     429 	.db #0x00	; 0
      00017E 00                     430 	.db #0x00	; 0
      00017F 00                     431 	.db #0x00	; 0
      000180 00                     432 	.db #0x00	; 0
      000181 00                     433 	.db #0x00	; 0
      000182 00                     434 	.db #0x00	; 0
      000183 00                     435 	.db #0x00	; 0
      000184 00                     436 	.db #0x00	; 0
      000185 00                     437 	.db #0x00	; 0
      000186 00                     438 	.db #0x00	; 0
      000187 00                     439 	.db #0x00	; 0
      000188 00                     440 	.db #0x00	; 0
      000189 00                     441 	.db #0x00	; 0
      00018A 00                     442 	.db #0x00	; 0
      00018B 00                     443 	.db #0x00	; 0
      00018C 00                     444 	.db #0x00	; 0
      00018D 00                     445 	.db #0x00	; 0
      00018E 00                     446 	.db #0x00	; 0
      00018F 00                     447 	.db #0x00	; 0
      000190 00                     448 	.db #0x00	; 0
      000191 00                     449 	.db #0x00	; 0
      000192 00                     450 	.db #0x00	; 0
      000193 00                     451 	.db #0x00	; 0
      000194 00                     452 	.db #0x00	; 0
      000195 00                     453 	.db #0x00	; 0
      000196 00                     454 	.db #0x00	; 0
      000197 00                     455 	.db #0x00	; 0
      000198 00                     456 	.db #0x00	; 0
      000199 00                     457 	.db #0x00	; 0
      00019A 00                     458 	.db #0x00	; 0
      00019B 00                     459 	.db #0x00	; 0
      00019C 00                     460 	.db #0x00	; 0
      00019D 00                     461 	.db #0x00	; 0
      00019E 00                     462 	.db #0x00	; 0
      00019F 00                     463 	.db #0x00	; 0
      0001A0 00                     464 	.db #0x00	; 0
      0001A1 00                     465 	.db #0x00	; 0
      0001A2 00                     466 	.db #0x00	; 0
      0001A3 00                     467 	.db #0x00	; 0
      0001A4 00                     468 	.db #0x00	; 0
      0001A5 00                     469 	.db #0x00	; 0
      0001A6 00                     470 	.db #0x00	; 0
      0001A7 00                     471 	.db #0x00	; 0
      0001A8 00                     472 	.db #0x00	; 0
      0001A9 00                     473 	.db #0x00	; 0
      0001AA 00                     474 	.db #0x00	; 0
      0001AB 00                     475 	.db #0x00	; 0
      0001AC 00                     476 	.db #0x00	; 0
      0001AD 00                     477 	.db #0x00	; 0
      0001AE 00                     478 	.db #0x00	; 0
      0001AF 00                     479 	.db #0x00	; 0
      0001B0 00                     480 	.db #0x00	; 0
      0001B1 00                     481 	.db #0x00	; 0
      0001B2 00                     482 	.db #0x00	; 0
      0001B3 00                     483 	.db #0x00	; 0
      0001B4 00                     484 	.db #0x00	; 0
      0001B5 00                     485 	.db #0x00	; 0
      0001B6 00                     486 	.db #0x00	; 0
      0001B7 00                     487 	.db #0x00	; 0
      0001B8 00                     488 	.db #0x00	; 0
      0001B9 00                     489 	.db #0x00	; 0
      0001BA 00                     490 	.db #0x00	; 0
      0001BB 00                     491 	.db #0x00	; 0
      0001BC 00                     492 	.db #0x00	; 0
      0001BD 00                     493 	.db #0x00	; 0
      0001BE 00                     494 	.db #0x00	; 0
      0001BF 00                     495 	.db #0x00	; 0
      0001C0 00                     496 	.db #0x00	; 0
      0001C1 00                     497 	.db #0x00	; 0
      0001C2 00                     498 	.db #0x00	; 0
      0001C3 00                     499 	.db #0x00	; 0
      0001C4 00                     500 	.db #0x00	; 0
      0001C5 00                     501 	.db #0x00	; 0
      0001C6 00                     502 	.db #0x00	; 0
      0001C7 00                     503 	.db #0x00	; 0
      0001C8 00                     504 	.db #0x00	; 0
      0001C9 00                     505 	.db #0x00	; 0
      0001CA 00                     506 	.db #0x00	; 0
      0001CB 00                     507 	.db #0x00	; 0
      0001CC 00                     508 	.db #0x00	; 0
      0001CD 00                     509 	.db #0x00	; 0
      0001CE 00                     510 	.db #0x00	; 0
      0001CF 00                     511 	.db #0x00	; 0
      0001D0 00                     512 	.db #0x00	; 0
      0001D1 00                     513 	.db #0x00	; 0
      0001D2 00                     514 	.db #0x00	; 0
      0001D3 00                     515 	.db #0x00	; 0
      0001D4 00                     516 	.db #0x00	; 0
      0001D5 00                     517 	.db #0x00	; 0
      0001D6 00                     518 	.db #0x00	; 0
      0001D7 00                     519 	.db #0x00	; 0
      0001D8 00                     520 	.db #0x00	; 0
      0001D9 00                     521 	.db #0x00	; 0
      0001DA 00                     522 	.db #0x00	; 0
      0001DB 00                     523 	.db #0x00	; 0
      0001DC 00                     524 	.db #0x00	; 0
      0001DD 00                     525 	.db #0x00	; 0
      0001DE 00                     526 	.db #0x00	; 0
      0001DF 00                     527 	.db #0x00	; 0
      0001E0 00                     528 	.db #0x00	; 0
      0001E1 00                     529 	.db #0x00	; 0
      0001E2 00                     530 	.db #0x00	; 0
      0001E3 00                     531 	.db #0x00	; 0
      0001E4 00                     532 	.db #0x00	; 0
      0001E5 00                     533 	.db #0x00	; 0
      0001E6 00                     534 	.db #0x00	; 0
      0001E7 00                     535 	.db #0x00	; 0
      0001E8 00                     536 	.db #0x00	; 0
      0001E9 00                     537 	.db #0x00	; 0
      0001EA 00                     538 	.db #0x00	; 0
      0001EB 00                     539 	.db #0x00	; 0
      0001EC 00                     540 	.db #0x00	; 0
      0001ED 00                     541 	.db #0x00	; 0
      0001EE 00                     542 	.db #0x00	; 0
      0001EF 00                     543 	.db #0x00	; 0
      0001F0 00                     544 	.db #0x00	; 0
      0001F1 00                     545 	.db #0x00	; 0
      0001F2 00                     546 	.db #0x00	; 0
      0001F3 00                     547 	.db #0x00	; 0
      0001F4 00                     548 	.db #0x00	; 0
      0001F5 00                     549 	.db #0x00	; 0
      0001F6 00                     550 	.db #0x00	; 0
      0001F7 00                     551 	.db #0x00	; 0
      0001F8 00                     552 	.db #0x00	; 0
      0001F9 00                     553 	.db #0x00	; 0
      0001FA 00                     554 	.db #0x00	; 0
      0001FB 00                     555 	.db #0x00	; 0
      0001FC 00                     556 	.db #0x00	; 0
      0001FD 00                     557 	.db #0x00	; 0
      0001FE 00                     558 	.db #0x00	; 0
      0001FF 00                     559 	.db #0x00	; 0
      000200 00                     560 	.db #0x00	; 0
      000201 00                     561 	.db #0x00	; 0
      000202 00                     562 	.db #0x00	; 0
      000203 00                     563 	.db #0x00	; 0
      000204 00                     564 	.db #0x00	; 0
      000205 00                     565 	.db #0x00	; 0
      000206 00                     566 	.db #0x00	; 0
      000207 00                     567 	.db #0x00	; 0
      000208 00                     568 	.db #0x00	; 0
      000209 00                     569 	.db #0x00	; 0
      00020A 00                     570 	.db #0x00	; 0
      00020B 00                     571 	.db #0x00	; 0
      00020C 00                     572 	.db #0x00	; 0
      00020D 00                     573 	.db #0x00	; 0
      00020E 00                     574 	.db #0x00	; 0
      00020F 00                     575 	.db #0x00	; 0
      000210 00                     576 	.db #0x00	; 0
      000211 00                     577 	.db #0x00	; 0
      000212 00                     578 	.db #0x00	; 0
      000213 00                     579 	.db #0x00	; 0
      000214 00                     580 	.db #0x00	; 0
      000215 00                     581 	.db #0x00	; 0
      000216 00                     582 	.db #0x00	; 0
      000217 00                     583 	.db #0x00	; 0
      000218 00                     584 	.db #0x00	; 0
      000219 00                     585 	.db #0x00	; 0
      00021A 00                     586 	.db #0x00	; 0
      00021B 00                     587 	.db #0x00	; 0
      00021C 00                     588 	.db #0x00	; 0
      00021D 00                     589 	.db #0x00	; 0
      00021E 00                     590 	.db #0x00	; 0
      00021F 00                     591 	.db #0x00	; 0
      000220 00                     592 	.db #0x00	; 0
      000221 00                     593 	.db #0x00	; 0
      000222 00                     594 	.db #0x00	; 0
      000223 00                     595 	.db #0x00	; 0
      000224 00                     596 	.db #0x00	; 0
      000225 00                     597 	.db #0x00	; 0
      000226 00                     598 	.db #0x00	; 0
      000227 00                     599 	.db #0x00	; 0
      000228 00                     600 	.db #0x00	; 0
      000229 00                     601 	.db #0x00	; 0
      00022A 00                     602 	.db #0x00	; 0
      00022B 00                     603 	.db #0x00	; 0
      00022C 00                     604 	.db #0x00	; 0
      00022D 00                     605 	.db #0x00	; 0
      00022E 00                     606 	.db #0x00	; 0
      00022F 00                     607 	.db #0x00	; 0
      000230 00                     608 	.db #0x00	; 0
      000231 00                     609 	.db #0x00	; 0
      000232 00                     610 	.db #0x00	; 0
      000233 00                     611 	.db #0x00	; 0
      000234 00                     612 	.db #0x00	; 0
      000235 00                     613 	.db #0x00	; 0
      000236 00                     614 	.db #0x00	; 0
      000237 00                     615 	.db #0x00	; 0
      000238 00                     616 	.db #0x00	; 0
      000239 00                     617 	.db #0x00	; 0
      00023A 00                     618 	.db #0x00	; 0
      00023B 00                     619 	.db #0x00	; 0
      00023C 00                     620 	.db #0x00	; 0
      00023D 00                     621 	.db #0x00	; 0
      00023E 00                     622 	.db #0x00	; 0
      00023F 00                     623 	.db #0x00	; 0
      000240 00                     624 	.db #0x00	; 0
      000241 00                     625 	.db #0x00	; 0
      000242 00                     626 	.db #0x00	; 0
      000243 00                     627 	.db #0x00	; 0
      000244 00                     628 	.db #0x00	; 0
      000245 00                     629 	.db #0x00	; 0
      000246 00                     630 	.db #0x00	; 0
      000247 00                     631 	.db #0x00	; 0
      000248 00                     632 	.db #0x00	; 0
      000249 00                     633 	.db #0x00	; 0
      00024A 00                     634 	.db #0x00	; 0
      00024B 00                     635 	.db #0x00	; 0
      00024C 00                     636 	.db #0x00	; 0
      00024D 00                     637 	.db #0x00	; 0
      00024E 00                     638 	.db #0x00	; 0
      00024F 00                     639 	.db #0x00	; 0
      000250 00                     640 	.db #0x00	; 0
      000251                        641 _k_background_tiles:
      000251 FF                     642 	.db #0xff	; 255
      000252 00                     643 	.db #0x00	; 0
      000253 80                     644 	.db #0x80	; 128
      000254 00                     645 	.db #0x00	; 0
      000255 80                     646 	.db #0x80	; 128
      000256 00                     647 	.db #0x00	; 0
      000257 80                     648 	.db #0x80	; 128
      000258 00                     649 	.db #0x00	; 0
      000259 80                     650 	.db #0x80	; 128
      00025A 00                     651 	.db #0x00	; 0
      00025B 80                     652 	.db #0x80	; 128
      00025C 00                     653 	.db #0x00	; 0
      00025D 80                     654 	.db #0x80	; 128
      00025E 00                     655 	.db #0x00	; 0
      00025F 80                     656 	.db #0x80	; 128
      000260 00                     657 	.db #0x00	; 0
      000261 FF                     658 	.db #0xff	; 255
      000262 00                     659 	.db #0x00	; 0
      000263 80                     660 	.db #0x80	; 128
      000264 00                     661 	.db #0x00	; 0
      000265 80                     662 	.db #0x80	; 128
      000266 00                     663 	.db #0x00	; 0
      000267 80                     664 	.db #0x80	; 128
      000268 00                     665 	.db #0x00	; 0
      000269 80                     666 	.db #0x80	; 128
      00026A 00                     667 	.db #0x00	; 0
      00026B 80                     668 	.db #0x80	; 128
      00026C 00                     669 	.db #0x00	; 0
      00026D 80                     670 	.db #0x80	; 128
      00026E 00                     671 	.db #0x00	; 0
      00026F 80                     672 	.db #0x80	; 128
      000270 00                     673 	.db #0x00	; 0
      000271                        674 _SCREEN_MIN_X:
      000271 08                     675 	.db #0x08	; 8
      000272                        676 _SCREEN_MIN_Y:
      000272 10                     677 	.db #0x10	; 16
      000273                        678 _SCREEN_WIDTH:
      000273 A0                     679 	.db #0xa0	; 160
      000274                        680 _SCREEN_HEIGHT:
      000274 90                     681 	.db #0x90	; 144
      000275                        682 _SPRITE_TILE_WIDTH:
      000275 08                     683 	.db #0x08	; 8
      000276                        684 _SPRITE_TILE_HEIGHT:
      000276 08                     685 	.db #0x08	; 8
                                    686 ;input.h:58: uint8_t was_input_depressed(struct input_state* is, uint8_t button)
                                    687 ;	---------------------------------
                                    688 ; Function was_input_depressed
                                    689 ; ---------------------------------
      000277                        690 _was_input_depressed::
                                    691 ;input.h:60: return (is->depressed_buttons & (1 << button)) != 0x00;
      000277 F8 02                  692 	ldhl	sp,	#2
      000279 2A                     693 	ld	a, (hl+)
      00027A 4F                     694 	ld	c, a
      00027B 2A                     695 	ld	a, (hl+)
      00027C 47                     696 	ld	b, a
      00027D 03                     697 	inc	bc
      00027E 03                     698 	inc	bc
      00027F 03                     699 	inc	bc
      000280 0A                     700 	ld	a, (bc)
      000281 4E                     701 	ld	c, (hl)
      000282 21 01 00               702 	ld	hl, #0x0001
      000285 0C                     703 	inc	c
      000286 18 01                  704 	jr	00104$
      000288                        705 00103$:
      000288 29                     706 	add	hl, hl
      000289                        707 00104$:
      000289 0D                     708 	dec	c
      00028A 20 FC                  709 	jr	NZ,00103$
      00028C 0E 00                  710 	ld	c, #0x00
      00028E A5                     711 	and	a, l
      00028F 5F                     712 	ld	e, a
      000290 79                     713 	ld	a, c
      000291 A4                     714 	and	a, h
      000292 B3                     715 	or	a, e
      000293 D6 01                  716 	sub	a,#0x01
      000295 3E 00                  717 	ld	a, #0x00
      000297 17                     718 	rla
      000298 EE 01                  719 	xor	a, #0x01
      00029A 5F                     720 	ld	e, a
                                    721 ;input.h:61: }
      00029B C9                     722 	ret
                                    723 ;input.h:63: uint8_t was_input_released(struct input_state* is, uint8_t button)
                                    724 ;	---------------------------------
                                    725 ; Function was_input_released
                                    726 ; ---------------------------------
      00029C                        727 _was_input_released::
                                    728 ;input.h:65: return (is->released_buttons & (1 << button)) != 0x00;
      00029C F8 02                  729 	ldhl	sp,	#2
      00029E 2A                     730 	ld	a, (hl+)
      00029F 4F                     731 	ld	c, a
      0002A0 2A                     732 	ld	a, (hl+)
      0002A1 47                     733 	ld	b, a
      0002A2 03                     734 	inc	bc
      0002A3 03                     735 	inc	bc
      0002A4 03                     736 	inc	bc
      0002A5 03                     737 	inc	bc
      0002A6 0A                     738 	ld	a, (bc)
      0002A7 4E                     739 	ld	c, (hl)
      0002A8 21 01 00               740 	ld	hl, #0x0001
      0002AB 0C                     741 	inc	c
      0002AC 18 01                  742 	jr	00104$
      0002AE                        743 00103$:
      0002AE 29                     744 	add	hl, hl
      0002AF                        745 00104$:
      0002AF 0D                     746 	dec	c
      0002B0 20 FC                  747 	jr	NZ,00103$
      0002B2 0E 00                  748 	ld	c, #0x00
      0002B4 A5                     749 	and	a, l
      0002B5 5F                     750 	ld	e, a
      0002B6 79                     751 	ld	a, c
      0002B7 A4                     752 	and	a, h
      0002B8 B3                     753 	or	a, e
      0002B9 D6 01                  754 	sub	a,#0x01
      0002BB 3E 00                  755 	ld	a, #0x00
      0002BD 17                     756 	rla
      0002BE EE 01                  757 	xor	a, #0x01
      0002C0 5F                     758 	ld	e, a
                                    759 ;input.h:66: }
      0002C1 C9                     760 	ret
                                    761 ;input.h:68: uint8_t is_input_held(struct input_state* is, uint8_t button)
                                    762 ;	---------------------------------
                                    763 ; Function is_input_held
                                    764 ; ---------------------------------
      0002C2                        765 _is_input_held::
                                    766 ;input.h:70: return (is->held_buttons & (1 << button)) != 0x00;
      0002C2 F8 02                  767 	ldhl	sp,	#2
      0002C4 2A                     768 	ld	a, (hl+)
      0002C5 4F                     769 	ld	c, a
      0002C6 2A                     770 	ld	a, (hl+)
      0002C7 47                     771 	ld	b, a
      0002C8 03                     772 	inc	bc
      0002C9 03                     773 	inc	bc
      0002CA 0A                     774 	ld	a, (bc)
      0002CB 4E                     775 	ld	c, (hl)
      0002CC 21 01 00               776 	ld	hl, #0x0001
      0002CF 0C                     777 	inc	c
      0002D0 18 01                  778 	jr	00104$
      0002D2                        779 00103$:
      0002D2 29                     780 	add	hl, hl
      0002D3                        781 00104$:
      0002D3 0D                     782 	dec	c
      0002D4 20 FC                  783 	jr	NZ,00103$
      0002D6 0E 00                  784 	ld	c, #0x00
      0002D8 A5                     785 	and	a, l
      0002D9 5F                     786 	ld	e, a
      0002DA 79                     787 	ld	a, c
      0002DB A4                     788 	and	a, h
      0002DC B3                     789 	or	a, e
      0002DD D6 01                  790 	sub	a,#0x01
      0002DF 3E 00                  791 	ld	a, #0x00
      0002E1 17                     792 	rla
      0002E2 EE 01                  793 	xor	a, #0x01
      0002E4 5F                     794 	ld	e, a
                                    795 ;input.h:71: }
      0002E5 C9                     796 	ret
                                    797 ;utility.h:6: void wait_vbls_done(uint8_t num_loops)
                                    798 ;	---------------------------------
                                    799 ; Function wait_vbls_done
                                    800 ; ---------------------------------
      0002E6                        801 _wait_vbls_done::
                                    802 ;utility.h:8: for (uint8_t loop_counter = 0; loop_counter < num_loops; ++loop_counter)
      0002E6 0E 00                  803 	ld	c, #0x00
      0002E8                        804 00103$:
      0002E8 79                     805 	ld	a, c
      0002E9 F8 02                  806 	ldhl	sp,	#2
      0002EB 96                     807 	sub	a, (hl)
      0002EC D0                     808 	ret	NC
                                    809 ;utility.h:10: wait_vbl_done();
      0002ED CDr00r00               810 	call	_wait_vbl_done
                                    811 ;utility.h:8: for (uint8_t loop_counter = 0; loop_counter < num_loops; ++loop_counter)
      0002F0 0C                     812 	inc	c
                                    813 ;utility.h:12: }
      0002F1 18 F5                  814 	jr	00103$
                                    815 ;main.c:38: void update_cursor_sprite(uint8_t tile_index)
                                    816 ;	---------------------------------
                                    817 ; Function update_cursor_sprite
                                    818 ; ---------------------------------
      0002F3                        819 _update_cursor_sprite::
                                    820 ;main.c:40: set_sprite_tile(k_cursor_sprite_index, tile_index);
      0002F3 F8 02                  821 	ldhl	sp,	#2
      0002F5 4E                     822 	ld	c, (hl)
      0002F6 21r0Er03               823 	ld	hl, #_k_cursor_sprite_index
                                    824 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0002F9 6E                     825 	ld	l, (hl)
                                    826 ;	spillPairReg hl
                                    827 ;	spillPairReg hl
      0002FA 26 00                  828 	ld	h, #0x00
                                    829 ;	spillPairReg hl
                                    830 ;	spillPairReg hl
      0002FC 29                     831 	add	hl, hl
      0002FD 29                     832 	add	hl, hl
      0002FE 11r00r00               833 	ld	de, #_shadow_OAM
      000301 19                     834 	add	hl, de
      000302 23                     835 	inc	hl
      000303 23                     836 	inc	hl
      000304 71                     837 	ld	(hl), c
                                    838 ;main.c:40: set_sprite_tile(k_cursor_sprite_index, tile_index);
                                    839 ;main.c:41: }
      000305 C9                     840 	ret
      000306                        841 _k_execution_state_active_mask:
      000306 01                     842 	.db #0x01	; 1
      000307                        843 _k_tile_sprite_index_mask:
      000307 3F                     844 	.db #0x3f	; 63
      000308                        845 _k_tile_is_alive_mask:
      000308 40                     846 	.db #0x40	; 64
      000309                        847 _k_tile_was_alive_mask:
      000309 80                     848 	.db #0x80	; 128
      00030A                        849 _k_empty_tile_index:
      00030A 00                     850 	.db #0x00	; 0
      00030B                        851 _k_live_tile_index:
      00030B 01                     852 	.db #0x01	; 1
      00030C                        853 _k_cursor_empty_tile_index:
      00030C 02                     854 	.db #0x02	; 2
      00030D                        855 _k_cursor_live_tile_index:
      00030D 03                     856 	.db #0x03	; 3
      00030E                        857 _k_cursor_sprite_index:
      00030E 00                     858 	.db #0x00	; 0
                                    859 ;main.c:43: void update_cursor_position(uint8_t tile_x, uint8_t tile_y)
                                    860 ;	---------------------------------
                                    861 ; Function update_cursor_position
                                    862 ; ---------------------------------
      00030F                        863 _update_cursor_position::
                                    864 ;main.c:47: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
      00030F FAr76r02               865 	ld	a, (#_SPRITE_TILE_HEIGHT)
      000312 F5                     866 	push	af
      000313 33                     867 	inc	sp
      000314 F8 04                  868 	ldhl	sp,	#4
      000316 7E                     869 	ld	a, (hl)
      000317 F5                     870 	push	af
      000318 33                     871 	inc	sp
      000319 CDr00r00               872 	call	__muluchar
      00031C E1                     873 	pop	hl
      00031D FAr72r02               874 	ld	a, (#_SCREEN_MIN_Y)
      000320 83                     875 	add	a, e
      000321 47                     876 	ld	b, a
                                    877 ;main.c:46: SCREEN_MIN_X + (tile_x * SPRITE_TILE_WIDTH),
      000322 FAr75r02               878 	ld	a, (#_SPRITE_TILE_WIDTH)
      000325 C5                     879 	push	bc
      000326 F5                     880 	push	af
      000327 33                     881 	inc	sp
      000328 F8 05                  882 	ldhl	sp,	#5
      00032A 7E                     883 	ld	a, (hl)
      00032B F5                     884 	push	af
      00032C 33                     885 	inc	sp
      00032D CDr00r00               886 	call	__muluchar
      000330 E1                     887 	pop	hl
      000331 C1                     888 	pop	bc
      000332 FAr71r02               889 	ld	a, (#_SCREEN_MIN_X)
      000335 83                     890 	add	a, e
      000336 21r0Er03               891 	ld	hl, #_k_cursor_sprite_index
                                    892 ;main.c:47: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
                                    893 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000339 6E                     894 	ld	l, (hl)
      00033A 4F                     895 	ld	c, a
                                    896 ;	spillPairReg hl
                                    897 ;	spillPairReg hl
      00033B 26 00                  898 	ld	h, #0x00
                                    899 ;	spillPairReg hl
                                    900 ;	spillPairReg hl
      00033D 29                     901 	add	hl, hl
      00033E 29                     902 	add	hl, hl
      00033F 11r00r00               903 	ld	de, #_shadow_OAM
      000342 19                     904 	add	hl, de
                                    905 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000343 78                     906 	ld	a, b
      000344 22                     907 	ld	(hl+), a
      000345 71                     908 	ld	(hl), c
                                    909 ;main.c:47: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
                                    910 ;main.c:48: }
      000346 C9                     911 	ret
                                    912 ;main.c:50: void update_tile_sprite(uint8_t sprite_index, uint8_t tile_index)
                                    913 ;	---------------------------------
                                    914 ; Function update_tile_sprite
                                    915 ; ---------------------------------
      000347                        916 _update_tile_sprite::
                                    917 ;main.c:52: set_sprite_tile(sprite_index, tile_index);
      000347 F8 03                  918 	ldhl	sp,	#3
      000349 3A                     919 	ld	a, (hl-)
      00034A 4F                     920 	ld	c, a
                                    921 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00034B 6E                     922 	ld	l, (hl)
      00034C 11r00r00               923 	ld	de, #_shadow_OAM+0
                                    924 ;	spillPairReg hl
                                    925 ;	spillPairReg hl
      00034F 26 00                  926 	ld	h, #0x00
                                    927 ;	spillPairReg hl
                                    928 ;	spillPairReg hl
      000351 29                     929 	add	hl, hl
      000352 29                     930 	add	hl, hl
      000353 19                     931 	add	hl, de
      000354 23                     932 	inc	hl
      000355 23                     933 	inc	hl
      000356 71                     934 	ld	(hl), c
                                    935 ;main.c:52: set_sprite_tile(sprite_index, tile_index);
                                    936 ;main.c:53: }
      000357 C9                     937 	ret
                                    938 ;main.c:55: void update_tile_position(uint8_t tile_index, uint8_t tile_x, uint8_t tile_y)
                                    939 ;	---------------------------------
                                    940 ; Function update_tile_position
                                    941 ; ---------------------------------
      000358                        942 _update_tile_position::
                                    943 ;main.c:59: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
      000358 FAr76r02               944 	ld	a, (#_SPRITE_TILE_HEIGHT)
      00035B F5                     945 	push	af
      00035C 33                     946 	inc	sp
      00035D F8 05                  947 	ldhl	sp,	#5
      00035F 7E                     948 	ld	a, (hl)
      000360 F5                     949 	push	af
      000361 33                     950 	inc	sp
      000362 CDr00r00               951 	call	__muluchar
      000365 E1                     952 	pop	hl
      000366 FAr72r02               953 	ld	a, (#_SCREEN_MIN_Y)
      000369 83                     954 	add	a, e
      00036A 47                     955 	ld	b, a
                                    956 ;main.c:58: SCREEN_MIN_X + (tile_x * SPRITE_TILE_WIDTH),
      00036B FAr75r02               957 	ld	a, (#_SPRITE_TILE_WIDTH)
      00036E C5                     958 	push	bc
      00036F F5                     959 	push	af
      000370 33                     960 	inc	sp
      000371 F8 06                  961 	ldhl	sp,	#6
      000373 7E                     962 	ld	a, (hl)
      000374 F5                     963 	push	af
      000375 33                     964 	inc	sp
      000376 CDr00r00               965 	call	__muluchar
      000379 E1                     966 	pop	hl
      00037A C1                     967 	pop	bc
      00037B FAr71r02               968 	ld	a, (#_SCREEN_MIN_X)
      00037E 83                     969 	add	a, e
      00037F F8 02                  970 	ldhl	sp,	#2
                                    971 ;main.c:59: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
                                    972 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000381 6E                     973 	ld	l, (hl)
      000382 4F                     974 	ld	c, a
                                    975 ;	spillPairReg hl
                                    976 ;	spillPairReg hl
      000383 26 00                  977 	ld	h, #0x00
                                    978 ;	spillPairReg hl
                                    979 ;	spillPairReg hl
      000385 29                     980 	add	hl, hl
      000386 29                     981 	add	hl, hl
      000387 11r00r00               982 	ld	de, #_shadow_OAM
      00038A 19                     983 	add	hl, de
                                    984 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00038B 78                     985 	ld	a, b
      00038C 22                     986 	ld	(hl+), a
      00038D 71                     987 	ld	(hl), c
                                    988 ;main.c:59: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
                                    989 ;main.c:60: }
      00038E C9                     990 	ret
                                    991 ;main.c:64: int main()
                                    992 ;	---------------------------------
                                    993 ; Function main
                                    994 ; ---------------------------------
      00038F                        995 _main::
      00038F 21 4A FE               996 	ld	hl, #-438
      000392 39                     997 	add	hl, sp
      000393 F9                     998 	ld	sp, hl
                                    999 ;main.c:68: input_state.previous_state = 0x00;
      000394 F8 02                 1000 	ldhl	sp,	#2
      000396 4D                    1001 	ld	c, l
      000397 44                    1002 	ld	b, h
      000398 AF                    1003 	xor	a, a
      000399 02                    1004 	ld	(bc), a
                                   1005 ;main.c:69: input_state.current_state = 0x00;
      00039A F8 02                 1006 	ldhl	sp,	#2
      00039C 7D                    1007 	ld	a, l
      00039D 54                    1008 	ld	d, h
      00039E 21 96 01              1009 	ld	hl, #406
      0003A1 39                    1010 	add	hl, sp
      0003A2 22                    1011 	ld	(hl+), a
      0003A3 7A                    1012 	ld	a, d
      0003A4 32                    1013 	ld	(hl-), a
      0003A5 2A                    1014 	ld	a, (hl+)
      0003A6 4F                    1015 	ld	c, a
                                   1016 ;main.c:70: input_state.held_buttons = 0x00;
      0003A7 3A                    1017 	ld	a, (hl-)
      0003A8 47                    1018 	ld	b, a
      0003A9 03                    1019 	inc	bc
      0003AA AF                    1020 	xor	a, a
      0003AB 02                    1021 	ld	(bc), a
      0003AC 2A                    1022 	ld	a, (hl+)
      0003AD 4F                    1023 	ld	c, a
                                   1024 ;main.c:71: input_state.depressed_buttons = 0x00;
      0003AE 3A                    1025 	ld	a, (hl-)
      0003AF 47                    1026 	ld	b, a
      0003B0 03                    1027 	inc	bc
      0003B1 03                    1028 	inc	bc
      0003B2 AF                    1029 	xor	a, a
      0003B3 02                    1030 	ld	(bc), a
      0003B4 2A                    1031 	ld	a, (hl+)
      0003B5 4F                    1032 	ld	c, a
                                   1033 ;main.c:72: input_state.released_buttons = 0x00;
      0003B6 3A                    1034 	ld	a, (hl-)
      0003B7 47                    1035 	ld	b, a
      0003B8 03                    1036 	inc	bc
      0003B9 03                    1037 	inc	bc
      0003BA 03                    1038 	inc	bc
      0003BB AF                    1039 	xor	a, a
      0003BC 02                    1040 	ld	(bc), a
      0003BD 2A                    1041 	ld	a, (hl+)
      0003BE 5F                    1042 	ld	e, a
      0003BF 56                    1043 	ld	d, (hl)
      0003C0 21 04 00              1044 	ld	hl, #0x0004
      0003C3 19                    1045 	add	hl, de
      0003C4 4D                    1046 	ld	c, l
      0003C5 44                    1047 	ld	b, h
      0003C6 AF                    1048 	xor	a, a
      0003C7 02                    1049 	ld	(bc), a
                                   1050 ;main.c:75: uint8_t execution_state = 0x00;
      0003C8 21 B2 01              1051 	ld	hl, #434
      0003CB 39                    1052 	add	hl, sp
      0003CC 36 00                 1053 	ld	(hl), #0x00
                                   1054 ;main.c:78: uint8_t cursor_tile_x = 10;
      0003CE 21 98 01              1055 	ld	hl, #408
      0003D1 39                    1056 	add	hl, sp
                                   1057 ;main.c:79: uint8_t cursor_tile_y = 9;
      0003D2 3E 0A                 1058 	ld	a, #0x0a
      0003D4 22                    1059 	ld	(hl+), a
      0003D5 36 09                 1060 	ld	(hl), #0x09
                                   1061 ;main.c:87: uint8_t next_available_sprite_index = 0;
      0003D7 21 B3 01              1062 	ld	hl, #435
      0003DA 39                    1063 	add	hl, sp
      0003DB 36 00                 1064 	ld	(hl), #0x00
                                   1065 ;main.c:90: for (uint8_t i = 0; i < 39; ++i)
      0003DD 21 6F 01              1066 	ld	hl, #367
      0003E0 39                    1067 	add	hl, sp
      0003E1 7D                    1068 	ld	a, l
      0003E2 54                    1069 	ld	d, h
      0003E3 21 9A 01              1070 	ld	hl, #410
      0003E6 39                    1071 	add	hl, sp
      0003E7 22                    1072 	ld	(hl+), a
      0003E8 72                    1073 	ld	(hl), d
      0003E9 1E 00                 1074 	ld	e, #0x00
      0003EB                       1075 00134$:
      0003EB 7B                    1076 	ld	a, e
      0003EC D6 27                 1077 	sub	a, #0x27
      0003EE 30 2F                 1078 	jr	NC, 00101$
                                   1079 ;main.c:92: available_sprites[i] = i + 1;
      0003F0 D5                    1080 	push	de
      0003F1 16 00                 1081 	ld	d, #0x00
      0003F3 21 9C 01              1082 	ld	hl, #412
      0003F6 39                    1083 	add	hl, sp
      0003F7 2A                    1084 	ld	a,	(hl+)
      0003F8 66                    1085 	ld	h, (hl)
      0003F9 6F                    1086 	ld	l, a
      0003FA 19                    1087 	add	hl, de
      0003FB D1                    1088 	pop	de
      0003FC 4D                    1089 	ld	c, l
      0003FD 44                    1090 	ld	b, h
      0003FE 53                    1091 	ld	d, e
      0003FF 14                    1092 	inc	d
      000400 7A                    1093 	ld	a, d
      000401 02                    1094 	ld	(bc), a
                                   1095 ;main.c:93: update_tile_sprite(i + 1, k_live_tile_index);
      000402 FAr0Br03              1096 	ld	a, (#_k_live_tile_index)
      000405 D5                    1097 	push	de
      000406 F5                    1098 	push	af
      000407 33                    1099 	inc	sp
      000408 D5                    1100 	push	de
      000409 33                    1101 	inc	sp
      00040A CDr47r03              1102 	call	_update_tile_sprite
      00040D E1                    1103 	pop	hl
      00040E D1                    1104 	pop	de
                                   1105 ;main.c:94: update_tile_position(i + 1, 0, 19);
      00040F D5                    1106 	push	de
      000410 21 00 13              1107 	ld	hl, #0x1300
      000413 E5                    1108 	push	hl
      000414 D5                    1109 	push	de
      000415 33                    1110 	inc	sp
      000416 CDr58r03              1111 	call	_update_tile_position
      000419 E8 03                 1112 	add	sp, #3
      00041B D1                    1113 	pop	de
                                   1114 ;main.c:90: for (uint8_t i = 0; i < 39; ++i)
      00041C 1C                    1115 	inc	e
      00041D 18 CC                 1116 	jr	00134$
      00041F                       1117 00101$:
                                   1118 ;main.c:98: for (uint8_t x = 0; x < 20; ++x)
      00041F F8 07                 1119 	ldhl	sp,	#7
      000421 7D                    1120 	ld	a, l
      000422 54                    1121 	ld	d, h
      000423 21 9C 01              1122 	ld	hl, #412
      000426 39                    1123 	add	hl, sp
      000427 22                    1124 	ld	(hl+), a
      000428 72                    1125 	ld	(hl), d
      000429 21 B5 01              1126 	ld	hl, #437
      00042C 39                    1127 	add	hl, sp
      00042D 36 00                 1128 	ld	(hl), #0x00
      00042F                       1129 00140$:
      00042F 21 B5 01              1130 	ld	hl, #437
      000432 39                    1131 	add	hl, sp
      000433 7E                    1132 	ld	a, (hl)
      000434 D6 14                 1133 	sub	a, #0x14
      000436 30 2D                 1134 	jr	NC, 00103$
                                   1135 ;main.c:100: for (uint8_t y = 0; y < 18; ++y)
      000438 4E                    1136 	ld	c, (hl)
      000439 06 00                 1137 	ld	b, #0x00
      00043B 69                    1138 	ld	l, c
      00043C 60                    1139 	ld	h, b
      00043D 29                    1140 	add	hl, hl
      00043E 29                    1141 	add	hl, hl
      00043F 29                    1142 	add	hl, hl
      000440 09                    1143 	add	hl, bc
      000441 29                    1144 	add	hl, hl
      000442 4D                    1145 	ld	c, l
      000443 44                    1146 	ld	b, h
      000444 21 9C 01              1147 	ld	hl, #412
      000447 39                    1148 	add	hl, sp
      000448 2A                    1149 	ld	a,	(hl+)
      000449 66                    1150 	ld	h, (hl)
      00044A 6F                    1151 	ld	l, a
      00044B 09                    1152 	add	hl, bc
      00044C 5D                    1153 	ld	e, l
      00044D 54                    1154 	ld	d, h
      00044E 0E 00                 1155 	ld	c, #0x00
      000450                       1156 00137$:
      000450 79                    1157 	ld	a, c
      000451 D6 12                 1158 	sub	a, #0x12
      000453 30 09                 1159 	jr	NC, 00141$
                                   1160 ;main.c:102: board[x][y] = 0x00;
      000455 69                    1161 	ld	l, c
      000456 26 00                 1162 	ld	h, #0x00
      000458 19                    1163 	add	hl, de
      000459 36 00                 1164 	ld	(hl), #0x00
                                   1165 ;main.c:100: for (uint8_t y = 0; y < 18; ++y)
      00045B 0C                    1166 	inc	c
      00045C 18 F2                 1167 	jr	00137$
      00045E                       1168 00141$:
                                   1169 ;main.c:98: for (uint8_t x = 0; x < 20; ++x)
      00045E 21 B5 01              1170 	ld	hl, #437
      000461 39                    1171 	add	hl, sp
      000462 34                    1172 	inc	(hl)
      000463 18 CA                 1173 	jr	00140$
      000465                       1174 00103$:
                                   1175 ;main.c:107: set_sprite_data(0, 3, k_sprites);
      000465 11r00r00              1176 	ld	de, #_k_sprites
      000468 D5                    1177 	push	de
      000469 21 00 03              1178 	ld	hl, #0x300
      00046C E5                    1179 	push	hl
      00046D CDr00r00              1180 	call	_set_sprite_data
      000470 E8 04                 1181 	add	sp, #4
                                   1182 ;main.c:108: set_bkg_data(0, 2, k_background_tiles);
      000472 11r51r02              1183 	ld	de, #_k_background_tiles
      000475 D5                    1184 	push	de
      000476 21 00 02              1185 	ld	hl, #0x200
      000479 E5                    1186 	push	hl
      00047A CDr00r00              1187 	call	_set_bkg_data
      00047D E8 04                 1188 	add	sp, #4
                                   1189 ;main.c:111: set_bkg_tiles(0, 0, 20, 18, k_background_map);
      00047F 11rE9r00              1190 	ld	de, #_k_background_map
      000482 D5                    1191 	push	de
      000483 21 14 12              1192 	ld	hl, #0x1214
      000486 E5                    1193 	push	hl
      000487 AF                    1194 	xor	a, a
      000488 0F                    1195 	rrca
      000489 F5                    1196 	push	af
      00048A CDr00r00              1197 	call	_set_bkg_tiles
      00048D E8 06                 1198 	add	sp, #6
                                   1199 ;main.c:114: update_cursor_sprite(k_cursor_empty_tile_index);
      00048F FAr0Cr03              1200 	ld	a, (#_k_cursor_empty_tile_index)
      000492 F5                    1201 	push	af
      000493 33                    1202 	inc	sp
      000494 CDrF3r02              1203 	call	_update_cursor_sprite
      000497 33                    1204 	inc	sp
                                   1205 ;main.c:115: update_cursor_position(cursor_tile_x, cursor_tile_y);
      000498 21 0A 09              1206 	ld	hl, #0x90a
      00049B E5                    1207 	push	hl
      00049C CDr0Fr03              1208 	call	_update_cursor_position
      00049F E1                    1209 	pop	hl
                                   1210 ;main.c:117: SHOW_BKG;
      0004A0 F0r00                 1211 	ldh	a, (_LCDC_REG + 0)
      0004A2 F6 01                 1212 	or	a, #0x01
      0004A4 E0r00                 1213 	ldh	(_LCDC_REG + 0), a
                                   1214 ;main.c:118: SHOW_SPRITES;
      0004A6 F0r00                 1215 	ldh	a, (_LCDC_REG + 0)
      0004A8 F6 02                 1216 	or	a, #0x02
      0004AA E0r00                 1217 	ldh	(_LCDC_REG + 0), a
                                   1218 ;main.c:119: DISPLAY_ON;
      0004AC F0r00                 1219 	ldh	a, (_LCDC_REG + 0)
      0004AE F6 80                 1220 	or	a, #0x80
      0004B0 E0r00                 1221 	ldh	(_LCDC_REG + 0), a
                                   1222 ;main.c:121: while (1)
      0004B2                       1223 00131$:
                                   1224 ;main.c:124: update_input_state(&input_state, joypad());
      0004B2 CDr00r00              1225 	call	_joypad
      0004B5 7B                    1226 	ld	a, e
      0004B6 21 96 01              1227 	ld	hl, #406
      0004B9 39                    1228 	add	hl, sp
      0004BA 4E                    1229 	ld	c, (hl)
      0004BB 23                    1230 	inc	hl
      0004BC 46                    1231 	ld	b, (hl)
      0004BD F5                    1232 	push	af
      0004BE 33                    1233 	inc	sp
      0004BF C5                    1234 	push	bc
      0004C0 CDr00r00              1235 	call	_update_input_state
      0004C3 E8 03                 1236 	add	sp, #3
                                   1237 ;main.c:127: if (was_input_released(&input_state, btn_start))
      0004C5 21 96 01              1238 	ld	hl, #406
      0004C8 39                    1239 	add	hl, sp
      0004C9 2A                    1240 	ld	a, (hl+)
      0004CA 4F                    1241 	ld	c, a
      0004CB 46                    1242 	ld	b, (hl)
      0004CC 3E 06                 1243 	ld	a, #0x06
      0004CE F5                    1244 	push	af
      0004CF 33                    1245 	inc	sp
      0004D0 C5                    1246 	push	bc
      0004D1 CDr9Cr02              1247 	call	_was_input_released
      0004D4 E8 03                 1248 	add	sp, #3
      0004D6 7B                    1249 	ld	a, e
      0004D7 B7                    1250 	or	a, a
      0004D8 28 1E                 1251 	jr	Z, 00105$
                                   1252 ;main.c:129: execution_state ^= k_execution_state_active_mask;
      0004DA 21r06r03              1253 	ld	hl, #_k_execution_state_active_mask
      0004DD 4E                    1254 	ld	c, (hl)
      0004DE 21 B2 01              1255 	ld	hl, #434
      0004E1 39                    1256 	add	hl, sp
      0004E2 7E                    1257 	ld	a, (hl)
      0004E3 A9                    1258 	xor	a, c
      0004E4 77                    1259 	ld	(hl), a
                                   1260 ;main.c:132: (execution_state & k_execution_state_active_mask) == k_execution_state_active_mask
      0004E5 7E                    1261 	ld	a, (hl)
      0004E6 A1                    1262 	and	a, c
      0004E7 91                    1263 	sub	a, c
      0004E8 20 05                 1264 	jr	NZ, 00156$
                                   1265 ;main.c:133: ? k_empty_tile_index
      0004EA FAr0Ar03              1266 	ld	a, (#_k_empty_tile_index)
      0004ED 18 03                 1267 	jr	00157$
      0004EF                       1268 00156$:
                                   1269 ;main.c:134: : k_cursor_empty_tile_index);
      0004EF FAr0Cr03              1270 	ld	a, (#_k_cursor_empty_tile_index)
      0004F2                       1271 00157$:
      0004F2 F5                    1272 	push	af
      0004F3 33                    1273 	inc	sp
      0004F4 CDrF3r02              1274 	call	_update_cursor_sprite
      0004F7 33                    1275 	inc	sp
      0004F8                       1276 00105$:
                                   1277 ;main.c:138: if ((execution_state & k_execution_state_active_mask) == k_execution_state_active_mask)
      0004F8 21r06r03              1278 	ld	hl, #_k_execution_state_active_mask
      0004FB 4E                    1279 	ld	c, (hl)
      0004FC 21 B2 01              1280 	ld	hl, #434
      0004FF 39                    1281 	add	hl, sp
      000500 7E                    1282 	ld	a, (hl)
      000501 A1                    1283 	and	a, c
      000502 91                    1284 	sub	a, c
      000503 C2rECr09              1285 	jp	NZ,00128$
                                   1286 ;main.c:140: for (uint8_t x = 0; x < 20; ++x)
      000506 21 9C 01              1287 	ld	hl, #412
      000509 39                    1288 	add	hl, sp
      00050A 7E                    1289 	ld	a, (hl)
      00050B 21 AC 01              1290 	ld	hl, #428
      00050E 39                    1291 	add	hl, sp
      00050F 77                    1292 	ld	(hl), a
      000510 21 9D 01              1293 	ld	hl, #413
      000513 39                    1294 	add	hl, sp
      000514 7E                    1295 	ld	a, (hl)
      000515 21 AD 01              1296 	ld	hl, #429
      000518 39                    1297 	add	hl, sp
      000519 77                    1298 	ld	(hl), a
      00051A 21 B4 01              1299 	ld	hl, #436
      00051D 39                    1300 	add	hl, sp
      00051E 36 00                 1301 	ld	(hl), #0x00
      000520                       1302 00146$:
      000520 21 B4 01              1303 	ld	hl, #436
      000523 39                    1304 	add	hl, sp
      000524 7E                    1305 	ld	a, (hl)
      000525 D6 14                 1306 	sub	a, #0x14
      000527 30 77                 1307 	jr	NC, 00107$
                                   1308 ;main.c:142: for (uint8_t y = 0; y < 18; ++y)
      000529 4E                    1309 	ld	c, (hl)
      00052A 06 00                 1310 	ld	b, #0x00
      00052C 69                    1311 	ld	l, c
      00052D 60                    1312 	ld	h, b
      00052E 29                    1313 	add	hl, hl
      00052F 29                    1314 	add	hl, hl
      000530 29                    1315 	add	hl, hl
      000531 09                    1316 	add	hl, bc
      000532 29                    1317 	add	hl, hl
      000533 4D                    1318 	ld	c, l
      000534 44                    1319 	ld	b, h
      000535 21 AC 01              1320 	ld	hl, #428
      000538 39                    1321 	add	hl, sp
      000539 2A                    1322 	ld	a,	(hl+)
      00053A 66                    1323 	ld	h, (hl)
      00053B 6F                    1324 	ld	l, a
      00053C 09                    1325 	add	hl, bc
      00053D E5                    1326 	push	hl
      00053E 7D                    1327 	ld	a, l
      00053F 21 B0 01              1328 	ld	hl, #432
      000542 39                    1329 	add	hl, sp
      000543 77                    1330 	ld	(hl), a
      000544 E1                    1331 	pop	hl
      000545 7C                    1332 	ld	a, h
      000546 21 AF 01              1333 	ld	hl, #431
      000549 39                    1334 	add	hl, sp
      00054A 77                    1335 	ld	(hl), a
      00054B 21 B5 01              1336 	ld	hl, #437
      00054E 39                    1337 	add	hl, sp
      00054F 36 00                 1338 	ld	(hl), #0x00
      000551                       1339 00143$:
      000551 21 B5 01              1340 	ld	hl, #437
      000554 39                    1341 	add	hl, sp
      000555 7E                    1342 	ld	a, (hl)
      000556 D6 12                 1343 	sub	a, #0x12
      000558 30 3E                 1344 	jr	NC, 00147$
                                   1345 ;main.c:144: uint8_t tile_data = board[x][y];
      00055A 21 AE 01              1346 	ld	hl,#0x1ae
      00055D 39                    1347 	add	hl,sp
      00055E 2A                    1348 	ld	a, (hl+)
      00055F 5F                    1349 	ld	e, a
      000560 56                    1350 	ld	d, (hl)
      000561 21 B5 01              1351 	ld	hl, #437
      000564 39                    1352 	add	hl, sp
      000565 6E                    1353 	ld	l, (hl)
      000566 26 00                 1354 	ld	h, #0x00
      000568 19                    1355 	add	hl, de
      000569 E5                    1356 	push	hl
      00056A 7D                    1357 	ld	a, l
      00056B 21 B2 01              1358 	ld	hl, #434
      00056E 39                    1359 	add	hl, sp
      00056F 77                    1360 	ld	(hl), a
      000570 E1                    1361 	pop	hl
      000571 7C                    1362 	ld	a, h
      000572 21 B1 01              1363 	ld	hl, #433
      000575 39                    1364 	add	hl, sp
      000576 32                    1365 	ld	(hl-), a
      000577 2A                    1366 	ld	a, (hl+)
      000578 5F                    1367 	ld	e, a
      000579 56                    1368 	ld	d, (hl)
      00057A 1A                    1369 	ld	a, (de)
      00057B 47                    1370 	ld	b, a
                                   1371 ;main.c:147: board[x][y] = (tile_data & ~k_tile_was_alive_mask) | ((tile_data & k_tile_is_alive_mask) << 1);
      00057C FAr09r03              1372 	ld	a, (#_k_tile_was_alive_mask)
      00057F 2F                    1373 	cpl
      000580 A0                    1374 	and	a, b
      000581 4F                    1375 	ld	c, a
      000582 FAr08r03              1376 	ld	a, (#_k_tile_is_alive_mask)
      000585 A0                    1377 	and	a, b
      000586 87                    1378 	add	a, a
      000587 B1                    1379 	or	a, c
      000588 4F                    1380 	ld	c, a
      000589 21 B0 01              1381 	ld	hl, #432
      00058C 39                    1382 	add	hl, sp
      00058D 2A                    1383 	ld	a,	(hl+)
      00058E 66                    1384 	ld	h, (hl)
      00058F 6F                    1385 	ld	l, a
      000590 71                    1386 	ld	(hl), c
                                   1387 ;main.c:142: for (uint8_t y = 0; y < 18; ++y)
      000591 21 B5 01              1388 	ld	hl, #437
      000594 39                    1389 	add	hl, sp
      000595 34                    1390 	inc	(hl)
      000596 18 B9                 1391 	jr	00143$
      000598                       1392 00147$:
                                   1393 ;main.c:140: for (uint8_t x = 0; x < 20; ++x)
      000598 21 B4 01              1394 	ld	hl, #436
      00059B 39                    1395 	add	hl, sp
      00059C 34                    1396 	inc	(hl)
      00059D C3r20r05              1397 	jp	00146$
      0005A0                       1398 00107$:
                                   1399 ;main.c:152: for (uint8_t x = 0; x < 20; ++x)
      0005A0 21 9C 01              1400 	ld	hl, #412
      0005A3 39                    1401 	add	hl, sp
      0005A4 2A                    1402 	ld	a, (hl+)
      0005A5 23                    1403 	inc	hl
      0005A6 32                    1404 	ld	(hl-), a
      0005A7 2A                    1405 	ld	a, (hl+)
      0005A8 23                    1406 	inc	hl
      0005A9 77                    1407 	ld	(hl), a
      0005AA 21 9A 01              1408 	ld	hl, #410
      0005AD 39                    1409 	add	hl, sp
      0005AE 7E                    1410 	ld	a, (hl)
      0005AF 21 A0 01              1411 	ld	hl, #416
      0005B2 39                    1412 	add	hl, sp
      0005B3 77                    1413 	ld	(hl), a
      0005B4 21 9B 01              1414 	ld	hl, #411
      0005B7 39                    1415 	add	hl, sp
      0005B8 7E                    1416 	ld	a, (hl)
      0005B9 21 A1 01              1417 	ld	hl, #417
      0005BC 39                    1418 	add	hl, sp
      0005BD 77                    1419 	ld	(hl), a
      0005BE 21 9A 01              1420 	ld	hl, #410
      0005C1 39                    1421 	add	hl, sp
      0005C2 7E                    1422 	ld	a, (hl)
      0005C3 21 A2 01              1423 	ld	hl, #418
      0005C6 39                    1424 	add	hl, sp
      0005C7 77                    1425 	ld	(hl), a
      0005C8 21 9B 01              1426 	ld	hl, #411
      0005CB 39                    1427 	add	hl, sp
      0005CC 7E                    1428 	ld	a, (hl)
      0005CD 21 A3 01              1429 	ld	hl, #419
      0005D0 39                    1430 	add	hl, sp
      0005D1 77                    1431 	ld	(hl), a
      0005D2 21 B4 01              1432 	ld	hl, #436
      0005D5 39                    1433 	add	hl, sp
      0005D6 36 00                 1434 	ld	(hl), #0x00
      0005D8                       1435 00152$:
      0005D8 21 B4 01              1436 	ld	hl, #436
      0005DB 39                    1437 	add	hl, sp
      0005DC 7E                    1438 	ld	a, (hl)
      0005DD D6 14                 1439 	sub	a, #0x14
      0005DF D2rC3r0B              1440 	jp	NC, 00129$
                                   1441 ;main.c:154: for (uint8_t y = 0; y < 18; ++y)
      0005E2 4E                    1442 	ld	c, (hl)
      0005E3 06 00                 1443 	ld	b, #0x00
      0005E5 69                    1444 	ld	l, c
      0005E6 60                    1445 	ld	h, b
      0005E7 29                    1446 	add	hl, hl
      0005E8 29                    1447 	add	hl, hl
      0005E9 29                    1448 	add	hl, hl
      0005EA 09                    1449 	add	hl, bc
      0005EB 29                    1450 	add	hl, hl
      0005EC 4D                    1451 	ld	c, l
      0005ED 44                    1452 	ld	b, h
      0005EE 21 9E 01              1453 	ld	hl, #414
      0005F1 39                    1454 	add	hl, sp
      0005F2 2A                    1455 	ld	a,	(hl+)
      0005F3 66                    1456 	ld	h, (hl)
      0005F4 6F                    1457 	ld	l, a
      0005F5 09                    1458 	add	hl, bc
      0005F6 E5                    1459 	push	hl
      0005F7 7D                    1460 	ld	a, l
      0005F8 21 A6 01              1461 	ld	hl, #422
      0005FB 39                    1462 	add	hl, sp
      0005FC 77                    1463 	ld	(hl), a
      0005FD E1                    1464 	pop	hl
      0005FE 7C                    1465 	ld	a, h
      0005FF 21 A5 01              1466 	ld	hl, #421
      000602 39                    1467 	add	hl, sp
      000603 77                    1468 	ld	(hl), a
      000604 21 B4 01              1469 	ld	hl, #436
      000607 39                    1470 	add	hl, sp
      000608 7E                    1471 	ld	a, (hl)
      000609 D6 13                 1472 	sub	a, #0x13
      00060B 3E 00                 1473 	ld	a, #0x00
      00060D 17                    1474 	rla
      00060E 21 A6 01              1475 	ld	hl, #422
      000611 39                    1476 	add	hl, sp
      000612 77                    1477 	ld	(hl), a
      000613 21 B5 01              1478 	ld	hl, #437
      000616 39                    1479 	add	hl, sp
      000617 36 00                 1480 	ld	(hl), #0x00
      000619                       1481 00149$:
      000619 21 B5 01              1482 	ld	hl, #437
      00061C 39                    1483 	add	hl, sp
      00061D 7E                    1484 	ld	a, (hl)
      00061E D6 12                 1485 	sub	a, #0x12
      000620 D2rE4r09              1486 	jp	NC, 00153$
                                   1487 ;main.c:156: uint8_t tile_data = board[x][y];
      000623 21 A4 01              1488 	ld	hl,#0x1a4
      000626 39                    1489 	add	hl,sp
      000627 2A                    1490 	ld	a, (hl+)
      000628 5F                    1491 	ld	e, a
      000629 56                    1492 	ld	d, (hl)
      00062A 21 B5 01              1493 	ld	hl, #437
      00062D 39                    1494 	add	hl, sp
      00062E 6E                    1495 	ld	l, (hl)
      00062F 26 00                 1496 	ld	h, #0x00
      000631 19                    1497 	add	hl, de
      000632 E5                    1498 	push	hl
      000633 7D                    1499 	ld	a, l
      000634 21 A9 01              1500 	ld	hl, #425
      000637 39                    1501 	add	hl, sp
      000638 77                    1502 	ld	(hl), a
      000639 E1                    1503 	pop	hl
      00063A 7C                    1504 	ld	a, h
      00063B 21 A8 01              1505 	ld	hl, #424
      00063E 39                    1506 	add	hl, sp
      00063F 32                    1507 	ld	(hl-), a
      000640 2A                    1508 	ld	a, (hl+)
      000641 5F                    1509 	ld	e, a
      000642 2A                    1510 	ld	a, (hl+)
      000643 57                    1511 	ld	d, a
      000644 1A                    1512 	ld	a, (de)
      000645 77                    1513 	ld	(hl), a
                                   1514 ;main.c:157: uint8_t neighbour_count = 0;
      000646 21 B0 01              1515 	ld	hl, #432
      000649 39                    1516 	add	hl, sp
      00064A 36 00                 1517 	ld	(hl), #0x00
                                   1518 ;main.c:147: board[x][y] = (tile_data & ~k_tile_was_alive_mask) | ((tile_data & k_tile_is_alive_mask) << 1);
      00064C FAr09r03              1519 	ld	a, (#_k_tile_was_alive_mask)
      00064F 21 AA 01              1520 	ld	hl, #426
      000652 39                    1521 	add	hl, sp
      000653 77                    1522 	ld	(hl), a
                                   1523 ;main.c:160: neighbour_count += y > 0 && (board[x][y - 1] & k_tile_was_alive_mask) != 0x00;
      000654 21 B5 01              1524 	ld	hl, #437
      000657 39                    1525 	add	hl, sp
      000658 7E                    1526 	ld	a, (hl)
      000659 21 B1 01              1527 	ld	hl, #433
      00065C 39                    1528 	add	hl, sp
      00065D 77                    1529 	ld	(hl), a
      00065E 7E                    1530 	ld	a, (hl)
      00065F 3D                    1531 	dec	a
      000660 21 AB 01              1532 	ld	hl, #427
      000663 39                    1533 	add	hl, sp
      000664 77                    1534 	ld	(hl), a
      000665 21 B5 01              1535 	ld	hl, #437
      000668 39                    1536 	add	hl, sp
      000669 7E                    1537 	ld	a, (hl)
      00066A B7                    1538 	or	a, a
      00066B 28 28                 1539 	jr	Z, 00158$
      00066D 21 A4 01              1540 	ld	hl,#0x1a4
      000670 39                    1541 	add	hl,sp
      000671 2A                    1542 	ld	a, (hl+)
      000672 5F                    1543 	ld	e, a
      000673 56                    1544 	ld	d, (hl)
      000674 21 AB 01              1545 	ld	hl, #427
      000677 39                    1546 	add	hl, sp
      000678 6E                    1547 	ld	l, (hl)
      000679 26 00                 1548 	ld	h, #0x00
      00067B 19                    1549 	add	hl, de
      00067C E5                    1550 	push	hl
      00067D 7D                    1551 	ld	a, l
      00067E 21 B0 01              1552 	ld	hl, #432
      000681 39                    1553 	add	hl, sp
      000682 77                    1554 	ld	(hl), a
      000683 E1                    1555 	pop	hl
      000684 7C                    1556 	ld	a, h
      000685 21 AF 01              1557 	ld	hl, #431
      000688 39                    1558 	add	hl, sp
      000689 32                    1559 	ld	(hl-), a
      00068A 2A                    1560 	ld	a, (hl+)
      00068B 5F                    1561 	ld	e, a
      00068C 56                    1562 	ld	d, (hl)
      00068D 1A                    1563 	ld	a, (de)
      00068E 21 AA 01              1564 	ld	hl, #426
      000691 39                    1565 	add	hl, sp
      000692 A6                    1566 	and	a,(hl)
      000693 20 03                 1567 	jr	NZ, 00159$
      000695                       1568 00158$:
      000695 AF                    1569 	xor	a, a
      000696 18 02                 1570 	jr	00160$
      000698                       1571 00159$:
      000698 3E 01                 1572 	ld	a, #0x01
      00069A                       1573 00160$:
      00069A 21 AF 01              1574 	ld	hl, #431
      00069D 39                    1575 	add	hl, sp
      00069E 22                    1576 	ld	(hl+), a
      00069F 3A                    1577 	ld	a, (hl-)
      0006A0 86                    1578 	add	a, (hl)
      0006A1 2B                    1579 	dec	hl
      0006A2 77                    1580 	ld	(hl), a
                                   1581 ;main.c:163: neighbour_count += x < 19 && y > 0 && (board[x + 1][y - 1] & k_tile_was_alive_mask) != 0x00;
      0006A3 21 B4 01              1582 	ld	hl, #436
      0006A6 39                    1583 	add	hl, sp
      0006A7 7E                    1584 	ld	a, (hl)
      0006A8 21 AC 01              1585 	ld	hl, #428
      0006AB 39                    1586 	add	hl, sp
      0006AC 22                    1587 	ld	(hl+), a
      0006AD AF                    1588 	xor	a, a
      0006AE 32                    1589 	ld	(hl-), a
      0006AF 2A                    1590 	ld	a, (hl+)
      0006B0 4F                    1591 	ld	c, a
      0006B1 46                    1592 	ld	b, (hl)
      0006B2 03                    1593 	inc	bc
      0006B3 69                    1594 	ld	l, c
      0006B4 60                    1595 	ld	h, b
      0006B5 29                    1596 	add	hl, hl
      0006B6 29                    1597 	add	hl, hl
      0006B7 29                    1598 	add	hl, hl
      0006B8 09                    1599 	add	hl, bc
      0006B9 29                    1600 	add	hl, hl
      0006BA 4D                    1601 	ld	c, l
      0006BB 44                    1602 	ld	b, h
      0006BC 21 9E 01              1603 	ld	hl, #414
      0006BF 39                    1604 	add	hl, sp
      0006C0 2A                    1605 	ld	a,	(hl+)
      0006C1 66                    1606 	ld	h, (hl)
      0006C2 6F                    1607 	ld	l, a
      0006C3 09                    1608 	add	hl, bc
      0006C4 33                    1609 	inc	sp
      0006C5 33                    1610 	inc	sp
      0006C6 E5                    1611 	push	hl
      0006C7 21 A6 01              1612 	ld	hl, #422
      0006CA 39                    1613 	add	hl, sp
      0006CB CB 46                 1614 	bit	0, (hl)
      0006CD 28 2B                 1615 	jr	Z, 00161$
      0006CF 21 B5 01              1616 	ld	hl, #437
      0006D2 39                    1617 	add	hl, sp
      0006D3 7E                    1618 	ld	a, (hl)
      0006D4 B7                    1619 	or	a, a
      0006D5 28 23                 1620 	jr	Z, 00161$
      0006D7 D1                    1621 	pop	de
      0006D8 D5                    1622 	push	de
      0006D9 21 AB 01              1623 	ld	hl, #427
      0006DC 39                    1624 	add	hl, sp
      0006DD 6E                    1625 	ld	l, (hl)
      0006DE 26 00                 1626 	ld	h, #0x00
      0006E0 19                    1627 	add	hl, de
      0006E1 E5                    1628 	push	hl
      0006E2 7D                    1629 	ld	a, l
      0006E3 21 B1 01              1630 	ld	hl, #433
      0006E6 39                    1631 	add	hl, sp
      0006E7 77                    1632 	ld	(hl), a
      0006E8 E1                    1633 	pop	hl
      0006E9 7C                    1634 	ld	a, h
      0006EA 21 B0 01              1635 	ld	hl, #432
      0006ED 39                    1636 	add	hl, sp
      0006EE 32                    1637 	ld	(hl-), a
      0006EF 2A                    1638 	ld	a, (hl+)
      0006F0 5F                    1639 	ld	e, a
      0006F1 56                    1640 	ld	d, (hl)
      0006F2 1A                    1641 	ld	a, (de)
      0006F3 21 AA 01              1642 	ld	hl, #426
      0006F6 39                    1643 	add	hl, sp
      0006F7 A6                    1644 	and	a,(hl)
      0006F8 20 03                 1645 	jr	NZ, 00162$
      0006FA                       1646 00161$:
      0006FA AF                    1647 	xor	a, a
      0006FB 18 02                 1648 	jr	00163$
      0006FD                       1649 00162$:
      0006FD 3E 01                 1650 	ld	a, #0x01
      0006FF                       1651 00163$:
      0006FF 21 AE 01              1652 	ld	hl, #430
      000702 39                    1653 	add	hl, sp
      000703 4E                    1654 	ld	c, (hl)
      000704 81                    1655 	add	a, c
      000705 4F                    1656 	ld	c, a
                                   1657 ;main.c:166: neighbour_count += x < 19 && (board[x + 1][y] & k_tile_was_alive_mask) != 0x00;
      000706 21 A6 01              1658 	ld	hl, #422
      000709 39                    1659 	add	hl, sp
      00070A CB 46                 1660 	bit	0, (hl)
      00070C 28 14                 1661 	jr	Z, 00167$
      00070E D1                    1662 	pop	de
      00070F D5                    1663 	push	de
      000710 21 B5 01              1664 	ld	hl, #437
      000713 39                    1665 	add	hl, sp
      000714 6E                    1666 	ld	l, (hl)
      000715 26 00                 1667 	ld	h, #0x00
      000717 19                    1668 	add	hl, de
      000718 5D                    1669 	ld	e, l
      000719 54                    1670 	ld	d, h
      00071A 1A                    1671 	ld	a, (de)
      00071B 21 AA 01              1672 	ld	hl, #426
      00071E 39                    1673 	add	hl, sp
      00071F A6                    1674 	and	a,(hl)
      000720 20 03                 1675 	jr	NZ, 00168$
      000722                       1676 00167$:
      000722 AF                    1677 	xor	a, a
      000723 18 02                 1678 	jr	00169$
      000725                       1679 00168$:
      000725 3E 01                 1680 	ld	a, #0x01
      000727                       1681 00169$:
      000727 81                    1682 	add	a, c
      000728 4F                    1683 	ld	c, a
                                   1684 ;main.c:169: neighbour_count += x < 19 && y < 17 && (board[x + 1][y + 1] & k_tile_was_alive_mask) != 0x00;
      000729 21 B5 01              1685 	ld	hl, #437
      00072C 39                    1686 	add	hl, sp
      00072D 7E                    1687 	ld	a, (hl)
      00072E D6 11                 1688 	sub	a, #0x11
      000730 3E 00                 1689 	ld	a, #0x00
      000732 17                    1690 	rla
      000733 21 AE 01              1691 	ld	hl, #430
      000736 39                    1692 	add	hl, sp
      000737 77                    1693 	ld	(hl), a
      000738 21 B1 01              1694 	ld	hl, #433
      00073B 39                    1695 	add	hl, sp
      00073C 3A                    1696 	ld	a, (hl-)
      00073D 3C                    1697 	inc	a
      00073E 77                    1698 	ld	(hl), a
      00073F 21 A6 01              1699 	ld	hl, #422
      000742 39                    1700 	add	hl, sp
      000743 CB 46                 1701 	bit	0, (hl)
      000745 28 1A                 1702 	jr	Z, 00170$
      000747 21 AE 01              1703 	ld	hl, #430
      00074A 39                    1704 	add	hl, sp
      00074B CB 46                 1705 	bit	0, (hl)
      00074D 28 12                 1706 	jr	Z, 00170$
      00074F 23                    1707 	inc	hl
      000750 23                    1708 	inc	hl
      000751 D1                    1709 	pop	de
      000752 D5                    1710 	push	de
      000753 6E                    1711 	ld	l, (hl)
      000754 26 00                 1712 	ld	h, #0x00
      000756 19                    1713 	add	hl, de
      000757 5D                    1714 	ld	e, l
      000758 54                    1715 	ld	d, h
      000759 1A                    1716 	ld	a, (de)
      00075A 21 AA 01              1717 	ld	hl, #426
      00075D 39                    1718 	add	hl, sp
      00075E A6                    1719 	and	a,(hl)
      00075F 20 03                 1720 	jr	NZ, 00171$
      000761                       1721 00170$:
      000761 AF                    1722 	xor	a, a
      000762 18 02                 1723 	jr	00172$
      000764                       1724 00171$:
      000764 3E 01                 1725 	ld	a, #0x01
      000766                       1726 00172$:
      000766 81                    1727 	add	a, c
      000767 21 B1 01              1728 	ld	hl, #433
      00076A 39                    1729 	add	hl, sp
      00076B 77                    1730 	ld	(hl), a
                                   1731 ;main.c:172: neighbour_count +=y < 17 && (board[x][y + 1] & k_tile_was_alive_mask) != 0x00;
      00076C 21 AE 01              1732 	ld	hl, #430
      00076F 39                    1733 	add	hl, sp
      000770 CB 46                 1734 	bit	0, (hl)
      000772 28 1C                 1735 	jr	Z, 00176$
      000774 21 A4 01              1736 	ld	hl,#0x1a4
      000777 39                    1737 	add	hl,sp
      000778 2A                    1738 	ld	a, (hl+)
      000779 5F                    1739 	ld	e, a
      00077A 56                    1740 	ld	d, (hl)
      00077B 21 B0 01              1741 	ld	hl, #432
      00077E 39                    1742 	add	hl, sp
      00077F 6E                    1743 	ld	l, (hl)
      000780 26 00                 1744 	ld	h, #0x00
      000782 19                    1745 	add	hl, de
      000783 33                    1746 	inc	sp
      000784 33                    1747 	inc	sp
      000785 5D                    1748 	ld	e, l
      000786 54                    1749 	ld	d, h
      000787 D5                    1750 	push	de
      000788 1A                    1751 	ld	a, (de)
      000789 21 AA 01              1752 	ld	hl, #426
      00078C 39                    1753 	add	hl, sp
      00078D A6                    1754 	and	a,(hl)
      00078E 20 03                 1755 	jr	NZ, 00177$
      000790                       1756 00176$:
      000790 AF                    1757 	xor	a, a
      000791 18 02                 1758 	jr	00178$
      000793                       1759 00177$:
      000793 3E 01                 1760 	ld	a, #0x01
      000795                       1761 00178$:
      000795 21 AF 01              1762 	ld	hl, #431
      000798 39                    1763 	add	hl, sp
      000799 22                    1764 	ld	(hl+), a
      00079A 23                    1765 	inc	hl
      00079B 3A                    1766 	ld	a, (hl-)
      00079C 2B                    1767 	dec	hl
      00079D 86                    1768 	add	a, (hl)
      00079E 23                    1769 	inc	hl
      00079F 23                    1770 	inc	hl
      0007A0 77                    1771 	ld	(hl), a
                                   1772 ;main.c:175: neighbour_count += x > 0 && y < 17 && (board[x - 1][y + 1] & k_tile_was_alive_mask) != 0x00;
      0007A1 21 AC 01              1773 	ld	hl,#0x1ac
      0007A4 39                    1774 	add	hl,sp
      0007A5 2A                    1775 	ld	a, (hl+)
      0007A6 4F                    1776 	ld	c, a
      0007A7 46                    1777 	ld	b, (hl)
      0007A8 0B                    1778 	dec	bc
      0007A9 69                    1779 	ld	l, c
      0007AA 60                    1780 	ld	h, b
      0007AB 29                    1781 	add	hl, hl
      0007AC 29                    1782 	add	hl, hl
      0007AD 29                    1783 	add	hl, hl
      0007AE 09                    1784 	add	hl, bc
      0007AF 29                    1785 	add	hl, hl
      0007B0 4D                    1786 	ld	c, l
      0007B1 44                    1787 	ld	b, h
      0007B2 21 9E 01              1788 	ld	hl, #414
      0007B5 39                    1789 	add	hl, sp
      0007B6 2A                    1790 	ld	a,	(hl+)
      0007B7 66                    1791 	ld	h, (hl)
      0007B8 6F                    1792 	ld	l, a
      0007B9 09                    1793 	add	hl, bc
      0007BA E5                    1794 	push	hl
      0007BB 7D                    1795 	ld	a, l
      0007BC 21 AE 01              1796 	ld	hl, #430
      0007BF 39                    1797 	add	hl, sp
      0007C0 77                    1798 	ld	(hl), a
      0007C1 E1                    1799 	pop	hl
      0007C2 7C                    1800 	ld	a, h
      0007C3 21 AD 01              1801 	ld	hl, #429
      0007C6 39                    1802 	add	hl, sp
      0007C7 77                    1803 	ld	(hl), a
      0007C8 21 B4 01              1804 	ld	hl, #436
      0007CB 39                    1805 	add	hl, sp
      0007CC 7E                    1806 	ld	a, (hl)
      0007CD B7                    1807 	or	a, a
      0007CE 28 2E                 1808 	jr	Z, 00179$
      0007D0 21 AE 01              1809 	ld	hl, #430
      0007D3 39                    1810 	add	hl, sp
      0007D4 CB 46                 1811 	bit	0, (hl)
      0007D6 28 26                 1812 	jr	Z, 00179$
      0007D8 23                    1813 	inc	hl
      0007D9 23                    1814 	inc	hl
      0007DA 5E                    1815 	ld	e, (hl)
      0007DB 16 00                 1816 	ld	d, #0x00
      0007DD 21 AC 01              1817 	ld	hl, #428
      0007E0 39                    1818 	add	hl, sp
      0007E1 2A                    1819 	ld	a,	(hl+)
      0007E2 66                    1820 	ld	h, (hl)
      0007E3 6F                    1821 	ld	l, a
      0007E4 19                    1822 	add	hl, de
      0007E5 E5                    1823 	push	hl
      0007E6 7D                    1824 	ld	a, l
      0007E7 21 B1 01              1825 	ld	hl, #433
      0007EA 39                    1826 	add	hl, sp
      0007EB 77                    1827 	ld	(hl), a
      0007EC E1                    1828 	pop	hl
      0007ED 7C                    1829 	ld	a, h
      0007EE 21 B0 01              1830 	ld	hl, #432
      0007F1 39                    1831 	add	hl, sp
      0007F2 32                    1832 	ld	(hl-), a
      0007F3 2A                    1833 	ld	a, (hl+)
      0007F4 5F                    1834 	ld	e, a
      0007F5 56                    1835 	ld	d, (hl)
      0007F6 1A                    1836 	ld	a, (de)
      0007F7 21 AA 01              1837 	ld	hl, #426
      0007FA 39                    1838 	add	hl, sp
      0007FB A6                    1839 	and	a,(hl)
      0007FC 20 03                 1840 	jr	NZ, 00180$
      0007FE                       1841 00179$:
      0007FE AF                    1842 	xor	a, a
      0007FF 18 02                 1843 	jr	00181$
      000801                       1844 00180$:
      000801 3E 01                 1845 	ld	a, #0x01
      000803                       1846 00181$:
      000803 21 B1 01              1847 	ld	hl, #433
      000806 39                    1848 	add	hl, sp
      000807 4E                    1849 	ld	c, (hl)
      000808 2B                    1850 	dec	hl
      000809 2B                    1851 	dec	hl
      00080A 81                    1852 	add	a, c
      00080B 77                    1853 	ld	(hl), a
                                   1854 ;main.c:178: neighbour_count += x > 0 && (board[x - 1][y] & k_tile_was_alive_mask) != 0x00;
      00080C 21 B4 01              1855 	ld	hl, #436
      00080F 39                    1856 	add	hl, sp
      000810 7E                    1857 	ld	a, (hl)
      000811 B7                    1858 	or	a, a
      000812 28 28                 1859 	jr	Z, 00185$
      000814 21 AC 01              1860 	ld	hl,#0x1ac
      000817 39                    1861 	add	hl,sp
      000818 2A                    1862 	ld	a, (hl+)
      000819 5F                    1863 	ld	e, a
      00081A 56                    1864 	ld	d, (hl)
      00081B 21 B5 01              1865 	ld	hl, #437
      00081E 39                    1866 	add	hl, sp
      00081F 6E                    1867 	ld	l, (hl)
      000820 26 00                 1868 	ld	h, #0x00
      000822 19                    1869 	add	hl, de
      000823 E5                    1870 	push	hl
      000824 7D                    1871 	ld	a, l
      000825 21 B2 01              1872 	ld	hl, #434
      000828 39                    1873 	add	hl, sp
      000829 77                    1874 	ld	(hl), a
      00082A E1                    1875 	pop	hl
      00082B 7C                    1876 	ld	a, h
      00082C 21 B1 01              1877 	ld	hl, #433
      00082F 39                    1878 	add	hl, sp
      000830 32                    1879 	ld	(hl-), a
      000831 2A                    1880 	ld	a, (hl+)
      000832 5F                    1881 	ld	e, a
      000833 56                    1882 	ld	d, (hl)
      000834 1A                    1883 	ld	a, (de)
      000835 21 AA 01              1884 	ld	hl, #426
      000838 39                    1885 	add	hl, sp
      000839 A6                    1886 	and	a,(hl)
      00083A 20 03                 1887 	jr	NZ, 00186$
      00083C                       1888 00185$:
      00083C AF                    1889 	xor	a, a
      00083D 18 02                 1890 	jr	00187$
      00083F                       1891 00186$:
      00083F 3E 01                 1892 	ld	a, #0x01
      000841                       1893 00187$:
      000841 21 AF 01              1894 	ld	hl, #431
      000844 39                    1895 	add	hl, sp
      000845 4E                    1896 	ld	c, (hl)
      000846 81                    1897 	add	a, c
      000847 77                    1898 	ld	(hl), a
                                   1899 ;main.c:181: neighbour_count += x > 0 && y > 0 && (board[x - 1][y - 1] & k_tile_was_alive_mask) != 0x00;
      000848 21 B4 01              1900 	ld	hl, #436
      00084B 39                    1901 	add	hl, sp
      00084C 7E                    1902 	ld	a, (hl)
      00084D B7                    1903 	or	a, a
      00084E 28 2A                 1904 	jr	Z, 00188$
      000850 23                    1905 	inc	hl
      000851 7E                    1906 	ld	a, (hl)
      000852 B7                    1907 	or	a, a
      000853 28 25                 1908 	jr	Z, 00188$
      000855 21 AB 01              1909 	ld	hl, #427
      000858 39                    1910 	add	hl, sp
      000859 2A                    1911 	ld	a, (hl+)
      00085A 5F                    1912 	ld	e, a
      00085B 16 00                 1913 	ld	d, #0x00
      00085D 2A                    1914 	ld	a,	(hl+)
      00085E 66                    1915 	ld	h, (hl)
      00085F 6F                    1916 	ld	l, a
      000860 19                    1917 	add	hl, de
      000861 E5                    1918 	push	hl
      000862 7D                    1919 	ld	a, l
      000863 21 B2 01              1920 	ld	hl, #434
      000866 39                    1921 	add	hl, sp
      000867 77                    1922 	ld	(hl), a
      000868 E1                    1923 	pop	hl
      000869 7C                    1924 	ld	a, h
      00086A 21 B1 01              1925 	ld	hl, #433
      00086D 39                    1926 	add	hl, sp
      00086E 32                    1927 	ld	(hl-), a
      00086F 2A                    1928 	ld	a, (hl+)
      000870 5F                    1929 	ld	e, a
      000871 56                    1930 	ld	d, (hl)
      000872 1A                    1931 	ld	a, (de)
      000873 21 AA 01              1932 	ld	hl, #426
      000876 39                    1933 	add	hl, sp
      000877 A6                    1934 	and	a,(hl)
      000878 20 08                 1935 	jr	NZ, 00189$
      00087A                       1936 00188$:
      00087A 21 B1 01              1937 	ld	hl, #433
      00087D 39                    1938 	add	hl, sp
      00087E 36 00                 1939 	ld	(hl), #0x00
      000880 18 06                 1940 	jr	00190$
      000882                       1941 00189$:
      000882 21 B1 01              1942 	ld	hl, #433
      000885 39                    1943 	add	hl, sp
      000886 36 01                 1944 	ld	(hl), #0x01
      000888                       1945 00190$:
      000888 21 B1 01              1946 	ld	hl, #433
      00088B 39                    1947 	add	hl, sp
      00088C 3A                    1948 	ld	a, (hl-)
      00088D 2B                    1949 	dec	hl
      00088E 4E                    1950 	ld	c, (hl)
      00088F 23                    1951 	inc	hl
      000890 23                    1952 	inc	hl
      000891 81                    1953 	add	a, c
      000892 77                    1954 	ld	(hl), a
                                   1955 ;main.c:147: board[x][y] = (tile_data & ~k_tile_was_alive_mask) | ((tile_data & k_tile_is_alive_mask) << 1);
      000893 FAr08r03              1956 	ld	a, (#_k_tile_is_alive_mask)
      000896 21 AF 01              1957 	ld	hl, #431
      000899 39                    1958 	add	hl, sp
      00089A 77                    1959 	ld	(hl), a
                                   1960 ;main.c:184: uint8_t is_alive = (tile_data & k_tile_is_alive_mask) != 0x00;
      00089B 21 A9 01              1961 	ld	hl, #425
      00089E 39                    1962 	add	hl, sp
      00089F 7E                    1963 	ld	a, (hl)
      0008A0 21 AF 01              1964 	ld	hl, #431
      0008A3 39                    1965 	add	hl, sp
      0008A4 A6                    1966 	and	a, (hl)
      0008A5 D6 01                 1967 	sub	a,#0x01
      0008A7 3E 00                 1968 	ld	a, #0x00
      0008A9 17                    1969 	rla
      0008AA EE 01                 1970 	xor	a, #0x01
                                   1971 ;main.c:185: uint8_t come_to_life = !is_alive && neighbour_count == 3;
      0008AC 47                    1972 	ld	b, a
      0008AD B7                    1973 	or	a, a
      0008AE 20 07                 1974 	jr	NZ, 00194$
      0008B0 23                    1975 	inc	hl
      0008B1 23                    1976 	inc	hl
      0008B2 7E                    1977 	ld	a, (hl)
      0008B3 D6 03                 1978 	sub	a, #0x03
      0008B5 28 04                 1979 	jr	Z, 00195$
      0008B7                       1980 00194$:
      0008B7 0E 00                 1981 	ld	c, #0x00
      0008B9 18 02                 1982 	jr	00196$
      0008BB                       1983 00195$:
      0008BB 0E 01                 1984 	ld	c, #0x01
      0008BD                       1985 00196$:
                                   1986 ;main.c:190: uint8_t remain_alive = is_alive && neighbour_count >= 2 && neighbour_count <= 3;
      0008BD 78                    1987 	ld	a, b
      0008BE B7                    1988 	or	a, a
      0008BF 28 0E                 1989 	jr	Z, 00197$
      0008C1 21 B1 01              1990 	ld	hl, #433
      0008C4 39                    1991 	add	hl, sp
      0008C5 7E                    1992 	ld	a, (hl)
      0008C6 D6 02                 1993 	sub	a, #0x02
      0008C8 38 05                 1994 	jr	C, 00197$
      0008CA 3E 03                 1995 	ld	a, #0x03
      0008CC 96                    1996 	sub	a, (hl)
      0008CD 30 04                 1997 	jr	NC, 00198$
      0008CF                       1998 00197$:
      0008CF 1E 00                 1999 	ld	e, #0x00
      0008D1 18 02                 2000 	jr	00199$
      0008D3                       2001 00198$:
      0008D3 1E 01                 2002 	ld	e, #0x01
      0008D5                       2003 00199$:
                                   2004 ;main.c:193: tile_data = (tile_data & ~k_tile_is_alive_mask) | (((come_to_life | remain_alive) != 0x00) << 6);
      0008D5 21 AF 01              2005 	ld	hl, #431
      0008D8 39                    2006 	add	hl, sp
      0008D9 2A                    2007 	ld	a, (hl+)
      0008DA 2F                    2008 	cpl
      0008DB 77                    2009 	ld	(hl), a
      0008DC 21 A9 01              2010 	ld	hl, #425
      0008DF 39                    2011 	add	hl, sp
      0008E0 7E                    2012 	ld	a, (hl)
      0008E1 21 B0 01              2013 	ld	hl, #432
      0008E4 39                    2014 	add	hl, sp
      0008E5 A6                    2015 	and	a, (hl)
      0008E6 6F                    2016 	ld	l, a
                                   2017 ;	spillPairReg hl
                                   2018 ;	spillPairReg hl
      0008E7 79                    2019 	ld	a, c
      0008E8 B3                    2020 	or	a, e
      0008E9 D6 01                 2021 	sub	a,#0x01
      0008EB 3E 00                 2022 	ld	a, #0x00
      0008ED 17                    2023 	rla
      0008EE EE 01                 2024 	xor	a, #0x01
      0008F0 0F                    2025 	rrca
      0008F1 0F                    2026 	rrca
      0008F2 E6 C0                 2027 	and	a, #0xc0
      0008F4 B5                    2028 	or	a, l
      0008F5 21 B1 01              2029 	ld	hl, #433
      0008F8 39                    2030 	add	hl, sp
      0008F9 77                    2031 	ld	(hl), a
                                   2032 ;main.c:196: is_alive = (tile_data & k_tile_is_alive_mask) != 0x00;
      0008FA 3A                    2033 	ld	a, (hl-)
      0008FB 2B                    2034 	dec	hl
      0008FC A6                    2035 	and	a, (hl)
      0008FD D6 01                 2036 	sub	a,#0x01
      0008FF 3E 00                 2037 	ld	a, #0x00
      000901 17                    2038 	rla
      000902 EE 01                 2039 	xor	a, #0x01
                                   2040 ;main.c:197: uint8_t was_alive = (tile_data & k_tile_was_alive_mask) != 0x00;
      000904 22                    2041 	ld	(hl+), a
      000905 23                    2042 	inc	hl
      000906 7E                    2043 	ld	a, (hl)
      000907 21 AA 01              2044 	ld	hl, #426
      00090A 39                    2045 	add	hl, sp
      00090B A6                    2046 	and	a, (hl)
      00090C 23                    2047 	inc	hl
      00090D 23                    2048 	inc	hl
      00090E D6 01                 2049 	sub	a, #0x01
      000910 3E 00                 2050 	ld	a, #0x00
      000912 17                    2051 	rla
      000913 EE 01                 2052 	xor	a, #0x01
      000915 77                    2053 	ld	(hl), a
      000916 2A                    2054 	ld	a, (hl+)
      000917 77                    2055 	ld	(hl), a
                                   2056 ;main.c:210: update_tile_position(tile_data & k_tile_sprite_index_mask, x, y);
      000918 FAr07r03              2057 	ld	a, (#_k_tile_sprite_index_mask)
      00091B 21 AE 01              2058 	ld	hl, #430
      00091E 39                    2059 	add	hl, sp
                                   2060 ;main.c:200: if (!was_alive && is_alive)
      00091F 32                    2061 	ld	(hl-), a
      000920 2B                    2062 	dec	hl
      000921 7E                    2063 	ld	a, (hl)
      000922 B7                    2064 	or	a, a
      000923 20 60                 2065 	jr	NZ, 00115$
      000925 21 AF 01              2066 	ld	hl, #431
      000928 39                    2067 	add	hl, sp
      000929 7E                    2068 	ld	a, (hl)
      00092A B7                    2069 	or	a, a
      00092B 28 58                 2070 	jr	Z, 00115$
                                   2071 ;main.c:203: if (next_available_sprite_index < 39)
      00092D 21 B3 01              2072 	ld	hl, #435
      000930 39                    2073 	add	hl, sp
      000931 7E                    2074 	ld	a, (hl)
      000932 D6 27                 2075 	sub	a, #0x27
      000934 30 45                 2076 	jr	NC, 00109$
                                   2077 ;main.c:206: tile_data |= available_sprites[next_available_sprite_index];
      000936 21 A2 01              2078 	ld	hl,#0x1a2
      000939 39                    2079 	add	hl,sp
      00093A 2A                    2080 	ld	a, (hl+)
      00093B 5F                    2081 	ld	e, a
      00093C 56                    2082 	ld	d, (hl)
      00093D 21 B3 01              2083 	ld	hl, #435
      000940 39                    2084 	add	hl, sp
      000941 6E                    2085 	ld	l, (hl)
      000942 26 00                 2086 	ld	h, #0x00
      000944 19                    2087 	add	hl, de
      000945 E5                    2088 	push	hl
      000946 7D                    2089 	ld	a, l
      000947 21 B1 01              2090 	ld	hl, #433
      00094A 39                    2091 	add	hl, sp
      00094B 77                    2092 	ld	(hl), a
      00094C E1                    2093 	pop	hl
      00094D 7C                    2094 	ld	a, h
      00094E 21 B0 01              2095 	ld	hl, #432
      000951 39                    2096 	add	hl, sp
      000952 32                    2097 	ld	(hl-), a
      000953 2A                    2098 	ld	a, (hl+)
      000954 5F                    2099 	ld	e, a
      000955 2A                    2100 	ld	a, (hl+)
      000956 57                    2101 	ld	d, a
      000957 1A                    2102 	ld	a, (de)
      000958 B6                    2103 	or	a, (hl)
                                   2104 ;main.c:207: next_available_sprite_index++;
      000959 22                    2105 	ld	(hl+), a
      00095A 23                    2106 	inc	hl
      00095B 34                    2107 	inc	(hl)
                                   2108 ;main.c:210: update_tile_position(tile_data & k_tile_sprite_index_mask, x, y);
      00095C 2B                    2109 	dec	hl
      00095D 2B                    2110 	dec	hl
      00095E 7E                    2111 	ld	a, (hl)
      00095F 21 AE 01              2112 	ld	hl, #430
      000962 39                    2113 	add	hl, sp
      000963 A6                    2114 	and	a, (hl)
      000964 21 B5 01              2115 	ld	hl, #437
      000967 39                    2116 	add	hl, sp
      000968 66                    2117 	ld	h, (hl)
                                   2118 ;	spillPairReg hl
                                   2119 ;	spillPairReg hl
      000969 E5                    2120 	push	hl
      00096A 33                    2121 	inc	sp
      00096B 21 B5 01              2122 	ld	hl, #437
      00096E 39                    2123 	add	hl, sp
      00096F 66                    2124 	ld	h, (hl)
                                   2125 ;	spillPairReg hl
                                   2126 ;	spillPairReg hl
      000970 E5                    2127 	push	hl
      000971 33                    2128 	inc	sp
      000972 F5                    2129 	push	af
      000973 33                    2130 	inc	sp
      000974 CDr58r03              2131 	call	_update_tile_position
      000977 E8 03                 2132 	add	sp, #3
      000979 18 54                 2133 	jr	00116$
      00097B                       2134 00109$:
                                   2135 ;main.c:215: tile_data &= ~k_tile_is_alive_mask;
      00097B 21 B1 01              2136 	ld	hl, #433
      00097E 39                    2137 	add	hl, sp
      00097F 3A                    2138 	ld	a, (hl-)
      000980 A6                    2139 	and	a, (hl)
      000981 23                    2140 	inc	hl
      000982 77                    2141 	ld	(hl), a
      000983 18 4A                 2142 	jr	00116$
      000985                       2143 00115$:
                                   2144 ;main.c:218: else if (was_alive && !is_alive)
      000985 21 AD 01              2145 	ld	hl, #429
      000988 39                    2146 	add	hl, sp
      000989 7E                    2147 	ld	a, (hl)
      00098A B7                    2148 	or	a, a
      00098B 28 42                 2149 	jr	Z, 00116$
      00098D 23                    2150 	inc	hl
      00098E 23                    2151 	inc	hl
      00098F 7E                    2152 	ld	a, (hl)
      000990 B7                    2153 	or	a, a
      000991 20 3C                 2154 	jr	NZ, 00116$
                                   2155 ;main.c:221: update_tile_position(tile_data & k_tile_sprite_index_mask, 0, 19);
      000993 23                    2156 	inc	hl
      000994 23                    2157 	inc	hl
      000995 7E                    2158 	ld	a, (hl)
      000996 21 AE 01              2159 	ld	hl, #430
      000999 39                    2160 	add	hl, sp
      00099A A6                    2161 	and	a, (hl)
      00099B 26 13                 2162 	ld	h, #0x13
                                   2163 ;	spillPairReg hl
                                   2164 ;	spillPairReg hl
      00099D E5                    2165 	push	hl
      00099E 33                    2166 	inc	sp
      00099F 26 00                 2167 	ld	h, #0x00
                                   2168 ;	spillPairReg hl
                                   2169 ;	spillPairReg hl
      0009A1 E5                    2170 	push	hl
      0009A2 33                    2171 	inc	sp
      0009A3 F5                    2172 	push	af
      0009A4 33                    2173 	inc	sp
      0009A5 CDr58r03              2174 	call	_update_tile_position
      0009A8 E8 03                 2175 	add	sp, #3
                                   2176 ;main.c:224: next_available_sprite_index--;
      0009AA 21 B3 01              2177 	ld	hl, #435
      0009AD 39                    2178 	add	hl, sp
      0009AE 35                    2179 	dec	(hl)
                                   2180 ;main.c:225: available_sprites[next_available_sprite_index] = tile_data & k_tile_sprite_index_mask;
      0009AF 21 A0 01              2181 	ld	hl,#0x1a0
      0009B2 39                    2182 	add	hl,sp
      0009B3 2A                    2183 	ld	a, (hl+)
      0009B4 5F                    2184 	ld	e, a
      0009B5 56                    2185 	ld	d, (hl)
      0009B6 21 B3 01              2186 	ld	hl, #435
      0009B9 39                    2187 	add	hl, sp
      0009BA 6E                    2188 	ld	l, (hl)
      0009BB 26 00                 2189 	ld	h, #0x00
      0009BD 19                    2190 	add	hl, de
      0009BE 5D                    2191 	ld	e, l
      0009BF 54                    2192 	ld	d, h
      0009C0 21r07r03              2193 	ld	hl, #_k_tile_sprite_index_mask
      0009C3 4E                    2194 	ld	c, (hl)
      0009C4 21 B1 01              2195 	ld	hl, #433
      0009C7 39                    2196 	add	hl, sp
      0009C8 7E                    2197 	ld	a, (hl)
      0009C9 A1                    2198 	and	a, c
      0009CA 12                    2199 	ld	(de), a
                                   2200 ;main.c:228: tile_data &= ~k_tile_sprite_index_mask;
      0009CB 79                    2201 	ld	a, c
      0009CC 2F                    2202 	cpl
      0009CD A6                    2203 	and	a, (hl)
      0009CE 77                    2204 	ld	(hl), a
      0009CF                       2205 00116$:
                                   2206 ;main.c:231: board[x][y] = tile_data;
      0009CF 21 A7 01              2207 	ld	hl,#0x1a7
      0009D2 39                    2208 	add	hl,sp
      0009D3 2A                    2209 	ld	a, (hl+)
      0009D4 5F                    2210 	ld	e, a
      0009D5 56                    2211 	ld	d, (hl)
      0009D6 21 B1 01              2212 	ld	hl, #433
      0009D9 39                    2213 	add	hl, sp
      0009DA 7E                    2214 	ld	a, (hl)
      0009DB 12                    2215 	ld	(de), a
                                   2216 ;main.c:154: for (uint8_t y = 0; y < 18; ++y)
      0009DC 21 B5 01              2217 	ld	hl, #437
      0009DF 39                    2218 	add	hl, sp
      0009E0 34                    2219 	inc	(hl)
      0009E1 C3r19r06              2220 	jp	00149$
      0009E4                       2221 00153$:
                                   2222 ;main.c:152: for (uint8_t x = 0; x < 20; ++x)
      0009E4 21 B4 01              2223 	ld	hl, #436
      0009E7 39                    2224 	add	hl, sp
      0009E8 34                    2225 	inc	(hl)
      0009E9 C3rD8r05              2226 	jp	00152$
      0009EC                       2227 00128$:
                                   2228 ;main.c:244: cursor_tile_y -= was_input_depressed(&input_state, btn_up);
      0009EC 21 96 01              2229 	ld	hl, #406
      0009EF 39                    2230 	add	hl, sp
      0009F0 2A                    2231 	ld	a, (hl+)
      0009F1 4F                    2232 	ld	c, a
      0009F2 46                    2233 	ld	b, (hl)
      0009F3 3E 02                 2234 	ld	a, #0x02
      0009F5 F5                    2235 	push	af
      0009F6 33                    2236 	inc	sp
      0009F7 C5                    2237 	push	bc
      0009F8 CDr77r02              2238 	call	_was_input_depressed
      0009FB E8 03                 2239 	add	sp, #3
      0009FD 21 99 01              2240 	ld	hl, #409
      000A00 39                    2241 	add	hl, sp
      000A01 7E                    2242 	ld	a, (hl)
      000A02 93                    2243 	sub	a, e
      000A03 4F                    2244 	ld	c, a
                                   2245 ;main.c:245: cursor_tile_y += was_input_depressed(&input_state, btn_down);
      000A04 21 96 01              2246 	ld	hl, #406
      000A07 39                    2247 	add	hl, sp
      000A08 2A                    2248 	ld	a, (hl+)
      000A09 5F                    2249 	ld	e, a
      000A0A 56                    2250 	ld	d, (hl)
      000A0B C5                    2251 	push	bc
      000A0C 3E 03                 2252 	ld	a, #0x03
      000A0E F5                    2253 	push	af
      000A0F 33                    2254 	inc	sp
      000A10 D5                    2255 	push	de
      000A11 CDr77r02              2256 	call	_was_input_depressed
      000A14 E8 03                 2257 	add	sp, #3
      000A16 7B                    2258 	ld	a, e
      000A17 C1                    2259 	pop	bc
      000A18 81                    2260 	add	a, c
      000A19 21 B5 01              2261 	ld	hl, #437
      000A1C 39                    2262 	add	hl, sp
      000A1D 77                    2263 	ld	(hl), a
                                   2264 ;main.c:246: cursor_tile_x -= was_input_depressed(&input_state, btn_left);
      000A1E 21 96 01              2265 	ld	hl, #406
      000A21 39                    2266 	add	hl, sp
      000A22 2A                    2267 	ld	a, (hl+)
      000A23 4F                    2268 	ld	c, a
      000A24 46                    2269 	ld	b, (hl)
      000A25 3E 04                 2270 	ld	a, #0x04
      000A27 F5                    2271 	push	af
      000A28 33                    2272 	inc	sp
      000A29 C5                    2273 	push	bc
      000A2A CDr77r02              2274 	call	_was_input_depressed
      000A2D E8 03                 2275 	add	sp, #3
      000A2F 21 98 01              2276 	ld	hl, #408
      000A32 39                    2277 	add	hl, sp
                                   2278 ;main.c:247: cursor_tile_x += was_input_depressed(&input_state, btn_right);
      000A33 3A                    2279 	ld	a, (hl-)
      000A34 2B                    2280 	dec	hl
      000A35 93                    2281 	sub	a, e
      000A36 4F                    2282 	ld	c, a
      000A37 2A                    2283 	ld	a, (hl+)
      000A38 5F                    2284 	ld	e, a
      000A39 56                    2285 	ld	d, (hl)
      000A3A C5                    2286 	push	bc
      000A3B 3E 05                 2287 	ld	a, #0x05
      000A3D F5                    2288 	push	af
      000A3E 33                    2289 	inc	sp
      000A3F D5                    2290 	push	de
      000A40 CDr77r02              2291 	call	_was_input_depressed
      000A43 E8 03                 2292 	add	sp, #3
      000A45 7B                    2293 	ld	a, e
      000A46 C1                    2294 	pop	bc
      000A47 81                    2295 	add	a, c
                                   2296 ;main.c:251: ? 19
      000A48 5F                    2297 	ld	e, a
      000A49 3C                    2298 	inc	a
      000A4A 20 05                 2299 	jr	NZ, 00203$
      000A4C 11 13 00              2300 	ld	de, #0x0013
      000A4F 18 08                 2301 	jr	00204$
      000A51                       2302 00203$:
                                   2303 ;main.c:253: ? 0
      000A51 3E 13                 2304 	ld	a, #0x13
      000A53 93                    2305 	sub	a, e
      000A54 30 03                 2306 	jr	NC, 00205$
      000A56 11 00 00              2307 	ld	de, #0x0000
                                   2308 ;main.c:254: : cursor_tile_x;
      000A59                       2309 00205$:
      000A59                       2310 00204$:
      000A59 21 98 01              2311 	ld	hl, #408
      000A5C 39                    2312 	add	hl, sp
      000A5D 73                    2313 	ld	(hl), e
                                   2314 ;main.c:258: ? 17
      000A5E 21 B5 01              2315 	ld	hl, #437
      000A61 39                    2316 	add	hl, sp
      000A62 7E                    2317 	ld	a, (hl)
      000A63 3C                    2318 	inc	a
      000A64 20 05                 2319 	jr	NZ, 00207$
      000A66 01 11 00              2320 	ld	bc, #0x0011
      000A69 18 1E                 2321 	jr	00208$
      000A6B                       2322 00207$:
                                   2323 ;main.c:260: ? 0
      000A6B 3E 11                 2324 	ld	a, #0x11
      000A6D 21 B5 01              2325 	ld	hl, #437
      000A70 39                    2326 	add	hl, sp
      000A71 96                    2327 	sub	a, (hl)
      000A72 30 06                 2328 	jr	NC, 00209$
      000A74 2B                    2329 	dec	hl
      000A75 AF                    2330 	xor	a, a
      000A76 22                    2331 	ld	(hl+), a
      000A77 77                    2332 	ld	(hl), a
      000A78 18 08                 2333 	jr	00210$
      000A7A                       2334 00209$:
                                   2335 ;main.c:261: : cursor_tile_y;
      000A7A 21 B5 01              2336 	ld	hl, #437
      000A7D 39                    2337 	add	hl, sp
      000A7E 3A                    2338 	ld	a, (hl-)
      000A7F 22                    2339 	ld	(hl+), a
      000A80 36 00                 2340 	ld	(hl), #0x00
      000A82                       2341 00210$:
      000A82 21 B4 01              2342 	ld	hl, #436
      000A85 39                    2343 	add	hl, sp
      000A86 2A                    2344 	ld	a, (hl+)
      000A87 4F                    2345 	ld	c, a
      000A88 46                    2346 	ld	b, (hl)
      000A89                       2347 00208$:
      000A89 21 99 01              2348 	ld	hl, #409
      000A8C 39                    2349 	add	hl, sp
      000A8D 71                    2350 	ld	(hl), c
                                   2351 ;main.c:263: update_cursor_position(cursor_tile_x, cursor_tile_y);
      000A8E 3A                    2352 	ld	a, (hl-)
      000A8F 57                    2353 	ld	d, a
      000A90 5E                    2354 	ld	e, (hl)
      000A91 D5                    2355 	push	de
      000A92 CDr0Fr03              2356 	call	_update_cursor_position
      000A95 E1                    2357 	pop	hl
                                   2358 ;main.c:266: if (was_input_depressed(&input_state, btn_b))
      000A96 21 96 01              2359 	ld	hl, #406
      000A99 39                    2360 	add	hl, sp
      000A9A 2A                    2361 	ld	a, (hl+)
      000A9B 4F                    2362 	ld	c, a
      000A9C 46                    2363 	ld	b, (hl)
      000A9D 3E 01                 2364 	ld	a, #0x01
      000A9F F5                    2365 	push	af
      000AA0 33                    2366 	inc	sp
      000AA1 C5                    2367 	push	bc
      000AA2 CDr77r02              2368 	call	_was_input_depressed
      000AA5 E8 03                 2369 	add	sp, #3
      000AA7 7B                    2370 	ld	a, e
      000AA8 B7                    2371 	or	a, a
      000AA9 CArC3r0B              2372 	jp	Z, 00129$
                                   2373 ;main.c:268: uint8_t tile_data = board[cursor_tile_x][cursor_tile_y];
      000AAC 21 98 01              2374 	ld	hl, #408
      000AAF 39                    2375 	add	hl, sp
      000AB0 4E                    2376 	ld	c, (hl)
      000AB1 06 00                 2377 	ld	b, #0x00
      000AB3 69                    2378 	ld	l, c
      000AB4 60                    2379 	ld	h, b
      000AB5 29                    2380 	add	hl, hl
      000AB6 29                    2381 	add	hl, hl
      000AB7 29                    2382 	add	hl, hl
      000AB8 09                    2383 	add	hl, bc
      000AB9 29                    2384 	add	hl, hl
      000ABA 4D                    2385 	ld	c, l
      000ABB 44                    2386 	ld	b, h
      000ABC 21 9C 01              2387 	ld	hl, #412
      000ABF 39                    2388 	add	hl, sp
      000AC0 2A                    2389 	ld	a,	(hl+)
      000AC1 66                    2390 	ld	h, (hl)
      000AC2 6F                    2391 	ld	l, a
      000AC3 09                    2392 	add	hl, bc
      000AC4 4D                    2393 	ld	c, l
      000AC5 44                    2394 	ld	b, h
      000AC6 21 99 01              2395 	ld	hl, #409
      000AC9 39                    2396 	add	hl, sp
      000ACA 6E                    2397 	ld	l, (hl)
      000ACB 26 00                 2398 	ld	h, #0x00
      000ACD 09                    2399 	add	hl, bc
      000ACE E5                    2400 	push	hl
      000ACF 7D                    2401 	ld	a, l
      000AD0 21 B2 01              2402 	ld	hl, #434
      000AD3 39                    2403 	add	hl, sp
      000AD4 77                    2404 	ld	(hl), a
      000AD5 E1                    2405 	pop	hl
      000AD6 7C                    2406 	ld	a, h
      000AD7 21 B1 01              2407 	ld	hl, #433
      000ADA 39                    2408 	add	hl, sp
      000ADB 32                    2409 	ld	(hl-), a
      000ADC 2A                    2410 	ld	a, (hl+)
      000ADD 5F                    2411 	ld	e, a
      000ADE 56                    2412 	ld	d, (hl)
      000ADF 1A                    2413 	ld	a, (de)
      000AE0 21 B5 01              2414 	ld	hl, #437
      000AE3 39                    2415 	add	hl, sp
      000AE4 77                    2416 	ld	(hl), a
                                   2417 ;main.c:269: uint8_t is_alive = tile_data & k_tile_is_alive_mask;
      000AE5 21r08r03              2418 	ld	hl, #_k_tile_is_alive_mask
      000AE8 4E                    2419 	ld	c, (hl)
                                   2420 ;main.c:210: update_tile_position(tile_data & k_tile_sprite_index_mask, x, y);
      000AE9 FAr07r03              2421 	ld	a, (#_k_tile_sprite_index_mask)
      000AEC 21 B4 01              2422 	ld	hl, #436
      000AEF 39                    2423 	add	hl, sp
                                   2424 ;main.c:269: uint8_t is_alive = tile_data & k_tile_is_alive_mask;
      000AF0 22                    2425 	ld	(hl+), a
      000AF1 7E                    2426 	ld	a, (hl)
      000AF2 A1                    2427 	and	a, c
      000AF3 21 AF 01              2428 	ld	hl, #431
      000AF6 39                    2429 	add	hl, sp
      000AF7 77                    2430 	ld	(hl), a
                                   2431 ;main.c:271: if (!is_alive)
      000AF8 7E                    2432 	ld	a, (hl)
      000AF9 B7                    2433 	or	a, a
      000AFA 20 4A                 2434 	jr	NZ, 00123$
                                   2435 ;main.c:273: if (next_available_sprite_index < 39)
      000AFC 21 B3 01              2436 	ld	hl, #435
      000AFF 39                    2437 	add	hl, sp
      000B00 7E                    2438 	ld	a, (hl)
      000B01 D6 27                 2439 	sub	a, #0x27
      000B03 D2rB6r0B              2440 	jp	NC, 00124$
                                   2441 ;main.c:276: tile_data |= available_sprites[next_available_sprite_index];
      000B06 21 9A 01              2442 	ld	hl,#0x19a
      000B09 39                    2443 	add	hl,sp
      000B0A 2A                    2444 	ld	a, (hl+)
      000B0B 5F                    2445 	ld	e, a
      000B0C 56                    2446 	ld	d, (hl)
      000B0D 21 B3 01              2447 	ld	hl, #435
      000B10 39                    2448 	add	hl, sp
      000B11 6E                    2449 	ld	l, (hl)
      000B12 26 00                 2450 	ld	h, #0x00
      000B14 19                    2451 	add	hl, de
      000B15 4D                    2452 	ld	c, l
      000B16 44                    2453 	ld	b, h
      000B17 0A                    2454 	ld	a, (bc)
      000B18 21 B5 01              2455 	ld	hl, #437
      000B1B 39                    2456 	add	hl, sp
      000B1C B6                    2457 	or	a, (hl)
                                   2458 ;main.c:277: next_available_sprite_index++;
      000B1D 2B                    2459 	dec	hl
      000B1E 2B                    2460 	dec	hl
      000B1F 4F                    2461 	ld	c, a
      000B20 34                    2462 	inc	(hl)
                                   2463 ;main.c:280: update_tile_position(tile_data & k_tile_sprite_index_mask, cursor_tile_x, cursor_tile_y);
      000B21 23                    2464 	inc	hl
      000B22 79                    2465 	ld	a, c
      000B23 A6                    2466 	and	a, (hl)
      000B24 C5                    2467 	push	bc
      000B25 21 9B 01              2468 	ld	hl, #411
      000B28 39                    2469 	add	hl, sp
      000B29 66                    2470 	ld	h, (hl)
                                   2471 ;	spillPairReg hl
                                   2472 ;	spillPairReg hl
      000B2A E5                    2473 	push	hl
      000B2B 33                    2474 	inc	sp
      000B2C 21 9B 01              2475 	ld	hl, #411
      000B2F 39                    2476 	add	hl, sp
      000B30 66                    2477 	ld	h, (hl)
                                   2478 ;	spillPairReg hl
                                   2479 ;	spillPairReg hl
      000B31 E5                    2480 	push	hl
      000B32 33                    2481 	inc	sp
      000B33 F5                    2482 	push	af
      000B34 33                    2483 	inc	sp
      000B35 CDr58r03              2484 	call	_update_tile_position
      000B38 E8 03                 2485 	add	sp, #3
      000B3A C1                    2486 	pop	bc
                                   2487 ;main.c:283: tile_data |= k_tile_is_alive_mask;
      000B3B FAr08r03              2488 	ld	a, (#_k_tile_is_alive_mask)
      000B3E B1                    2489 	or	a, c
      000B3F 21 B5 01              2490 	ld	hl, #437
      000B42 39                    2491 	add	hl, sp
      000B43 77                    2492 	ld	(hl), a
      000B44 18 70                 2493 	jr	00124$
      000B46                       2494 00123$:
                                   2495 ;main.c:289: update_tile_position(tile_data & k_tile_sprite_index_mask, 0, 19);
      000B46 21 B4 01              2496 	ld	hl, #436
      000B49 39                    2497 	add	hl, sp
      000B4A 2A                    2498 	ld	a, (hl+)
      000B4B A6                    2499 	and	a, (hl)
      000B4C 2B                    2500 	dec	hl
      000B4D 77                    2501 	ld	(hl), a
      000B4E 3E 13                 2502 	ld	a, #0x13
      000B50 F5                    2503 	push	af
      000B51 33                    2504 	inc	sp
      000B52 AF                    2505 	xor	a, a
      000B53 F5                    2506 	push	af
      000B54 33                    2507 	inc	sp
      000B55 7E                    2508 	ld	a, (hl)
      000B56 F5                    2509 	push	af
      000B57 33                    2510 	inc	sp
      000B58 CDr58r03              2511 	call	_update_tile_position
      000B5B E8 03                 2512 	add	sp, #3
                                   2513 ;main.c:292: next_available_sprite_index--;
      000B5D 21 B3 01              2514 	ld	hl, #435
      000B60 39                    2515 	add	hl, sp
      000B61 35                    2516 	dec	(hl)
                                   2517 ;main.c:293: available_sprites[next_available_sprite_index] = tile_data & k_tile_sprite_index_mask;
      000B62 21 9A 01              2518 	ld	hl,#0x19a
      000B65 39                    2519 	add	hl,sp
      000B66 2A                    2520 	ld	a, (hl+)
      000B67 5F                    2521 	ld	e, a
      000B68 56                    2522 	ld	d, (hl)
      000B69 21 B3 01              2523 	ld	hl, #435
      000B6C 39                    2524 	add	hl, sp
      000B6D 6E                    2525 	ld	l, (hl)
      000B6E 26 00                 2526 	ld	h, #0x00
      000B70 19                    2527 	add	hl, de
      000B71 E5                    2528 	push	hl
      000B72 7D                    2529 	ld	a, l
      000B73 21 B0 01              2530 	ld	hl, #432
      000B76 39                    2531 	add	hl, sp
      000B77 77                    2532 	ld	(hl), a
      000B78 E1                    2533 	pop	hl
      000B79 7C                    2534 	ld	a, h
      000B7A 21 AF 01              2535 	ld	hl, #431
      000B7D 39                    2536 	add	hl, sp
      000B7E 77                    2537 	ld	(hl), a
      000B7F FAr07r03              2538 	ld	a, (#_k_tile_sprite_index_mask)
      000B82 21 B4 01              2539 	ld	hl, #436
      000B85 39                    2540 	add	hl, sp
      000B86 22                    2541 	ld	(hl+), a
      000B87 3A                    2542 	ld	a, (hl-)
      000B88 A6                    2543 	and	a, (hl)
      000B89 4F                    2544 	ld	c, a
      000B8A 21 AE 01              2545 	ld	hl, #430
      000B8D 39                    2546 	add	hl, sp
      000B8E 2A                    2547 	ld	a,	(hl+)
      000B8F 66                    2548 	ld	h, (hl)
      000B90 6F                    2549 	ld	l, a
      000B91 71                    2550 	ld	(hl), c
                                   2551 ;main.c:296: tile_data &= ~k_tile_sprite_index_mask;
      000B92 21 B4 01              2552 	ld	hl, #436
      000B95 39                    2553 	add	hl, sp
      000B96 7E                    2554 	ld	a, (hl)
      000B97 2F                    2555 	cpl
      000B98 21 AF 01              2556 	ld	hl, #431
      000B9B 39                    2557 	add	hl, sp
      000B9C 77                    2558 	ld	(hl), a
      000B9D 21 B5 01              2559 	ld	hl, #437
      000BA0 39                    2560 	add	hl, sp
      000BA1 7E                    2561 	ld	a, (hl)
      000BA2 21 AF 01              2562 	ld	hl, #431
      000BA5 39                    2563 	add	hl, sp
      000BA6 A6                    2564 	and	a, (hl)
      000BA7 21 B5 01              2565 	ld	hl, #437
      000BAA 39                    2566 	add	hl, sp
      000BAB 77                    2567 	ld	(hl), a
                                   2568 ;main.c:299: tile_data &= ~k_tile_is_alive_mask;
      000BAC FAr08r03              2569 	ld	a, (#_k_tile_is_alive_mask)
      000BAF 2F                    2570 	cpl
      000BB0 21 B5 01              2571 	ld	hl, #437
      000BB3 39                    2572 	add	hl, sp
      000BB4 A6                    2573 	and	a, (hl)
      000BB5 77                    2574 	ld	(hl), a
      000BB6                       2575 00124$:
                                   2576 ;main.c:303: board[cursor_tile_x][cursor_tile_y] = tile_data;
      000BB6 21 B0 01              2577 	ld	hl,#0x1b0
      000BB9 39                    2578 	add	hl,sp
      000BBA 2A                    2579 	ld	a, (hl+)
      000BBB 5F                    2580 	ld	e, a
      000BBC 56                    2581 	ld	d, (hl)
      000BBD 21 B5 01              2582 	ld	hl, #437
      000BC0 39                    2583 	add	hl, sp
      000BC1 7E                    2584 	ld	a, (hl)
      000BC2 12                    2585 	ld	(de), a
      000BC3                       2586 00129$:
                                   2587 ;main.c:308: wait_vbls_done(1);
      000BC3 3E 01                 2588 	ld	a, #0x01
      000BC5 F5                    2589 	push	af
      000BC6 33                    2590 	inc	sp
      000BC7 CDrE6r02              2591 	call	_wait_vbls_done
      000BCA 33                    2592 	inc	sp
      000BCB C3rB2r04              2593 	jp	00131$
                                   2594 ;main.c:310: }
      000BCE 21 B6 01              2595 	ld	hl, #438
      000BD1 39                    2596 	add	hl, sp
      000BD2 F9                    2597 	ld	sp, hl
      000BD3 C9                    2598 	ret
                                   2599 	.area _CODE
                                   2600 	.area _INITIALIZER
      000000                       2601 __xinit__k_sprites:
      000000 00                    2602 	.db #0x00	; 0
      000001 00                    2603 	.db #0x00	; 0
      000002 00                    2604 	.db #0x00	; 0
      000003 00                    2605 	.db #0x00	; 0
      000004 00                    2606 	.db #0x00	; 0
      000005 00                    2607 	.db #0x00	; 0
      000006 00                    2608 	.db #0x00	; 0
      000007 00                    2609 	.db #0x00	; 0
      000008 00                    2610 	.db #0x00	; 0
      000009 00                    2611 	.db #0x00	; 0
      00000A 00                    2612 	.db #0x00	; 0
      00000B 00                    2613 	.db #0x00	; 0
      00000C 00                    2614 	.db #0x00	; 0
      00000D 00                    2615 	.db #0x00	; 0
      00000E 00                    2616 	.db #0x00	; 0
      00000F 00                    2617 	.db #0x00	; 0
      000010 00                    2618 	.db #0x00	; 0
      000011 00                    2619 	.db #0x00	; 0
      000012 7F                    2620 	.db #0x7f	; 127
      000013 7F                    2621 	.db #0x7f	; 127
      000014 7F                    2622 	.db #0x7f	; 127
      000015 7F                    2623 	.db #0x7f	; 127
      000016 7F                    2624 	.db #0x7f	; 127
      000017 7F                    2625 	.db #0x7f	; 127
      000018 7F                    2626 	.db #0x7f	; 127
      000019 7F                    2627 	.db #0x7f	; 127
      00001A 7F                    2628 	.db #0x7f	; 127
      00001B 7F                    2629 	.db #0x7f	; 127
      00001C 7F                    2630 	.db #0x7f	; 127
      00001D 7F                    2631 	.db #0x7f	; 127
      00001E 7F                    2632 	.db #0x7f	; 127
      00001F 7F                    2633 	.db #0x7f	; 127
      000020 00                    2634 	.db #0x00	; 0
      000021 00                    2635 	.db #0x00	; 0
      000022 00                    2636 	.db #0x00	; 0
      000023 3E                    2637 	.db #0x3e	; 62
      000024 00                    2638 	.db #0x00	; 0
      000025 41                    2639 	.db #0x41	; 65	'A'
      000026 00                    2640 	.db #0x00	; 0
      000027 41                    2641 	.db #0x41	; 65	'A'
      000028 00                    2642 	.db #0x00	; 0
      000029 41                    2643 	.db #0x41	; 65	'A'
      00002A 00                    2644 	.db #0x00	; 0
      00002B 41                    2645 	.db #0x41	; 65	'A'
      00002C 00                    2646 	.db #0x00	; 0
      00002D 41                    2647 	.db #0x41	; 65	'A'
      00002E 00                    2648 	.db #0x00	; 0
      00002F 3E                    2649 	.db #0x3e	; 62
      000030 00                    2650 	.db #0x00	; 0
      000031 00                    2651 	.db #0x00	; 0
      000032 41                    2652 	.db #0x41	; 65	'A'
      000033 7F                    2653 	.db #0x7f	; 127
      000034 3E                    2654 	.db #0x3e	; 62
      000035 7F                    2655 	.db #0x7f	; 127
      000036 3E                    2656 	.db #0x3e	; 62
      000037 7F                    2657 	.db #0x7f	; 127
      000038 3E                    2658 	.db #0x3e	; 62
      000039 7F                    2659 	.db #0x7f	; 127
      00003A 3E                    2660 	.db #0x3e	; 62
      00003B 7F                    2661 	.db #0x7f	; 127
      00003C 3E                    2662 	.db #0x3e	; 62
      00003D 7F                    2663 	.db #0x7f	; 127
      00003E 41                    2664 	.db #0x41	; 65	'A'
      00003F 7F                    2665 	.db #0x7f	; 127
                                   2666 	.area _CABS (ABS)
