                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _update_tile_position
                                     13 	.globl _update_tile_sprite
                                     14 	.globl _update_cursor_position
                                     15 	.globl _update_cursor_sprite
                                     16 	.globl _wait_vbls_done
                                     17 	.globl _is_input_held
                                     18 	.globl _was_input_released
                                     19 	.globl _was_input_depressed
                                     20 	.globl _update_input_state
                                     21 	.globl _set_sprite_data
                                     22 	.globl _set_bkg_tiles
                                     23 	.globl _set_bkg_data
                                     24 	.globl _wait_vbl_done
                                     25 	.globl _joypad
                                     26 	.globl _k_sprites
                                     27 	.globl _k_cursor_sprite_index
                                     28 	.globl _k_cursor_live_tile_index
                                     29 	.globl _k_cursor_empty_tile_index
                                     30 	.globl _k_live_tile_index
                                     31 	.globl _k_empty_tile_index
                                     32 	.globl _k_tile_sprite_index_mask
                                     33 	.globl _k_tile_is_east_column_mask
                                     34 	.globl _k_tile_is_west_column_mask
                                     35 	.globl _k_tile_is_south_row_mask
                                     36 	.globl _s_tile_is_north_row_mask
                                     37 	.globl _k_tile_was_alive_mask
                                     38 	.globl _k_tile_is_alive_mask
                                     39 	.globl _k_execution_state_active_mask
                                     40 	.globl _k_background_tiles
                                     41 	.globl _k_background_map
                                     42 ;--------------------------------------------------------
                                     43 ; special function registers
                                     44 ;--------------------------------------------------------
                                     45 ;--------------------------------------------------------
                                     46 ; ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area _DATA
                                     49 ;--------------------------------------------------------
                                     50 ; ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area _INITIALIZED
      000000                         53 _k_sprites::
      000000                         54 	.ds 64
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area _DABS (ABS)
                                     59 ;--------------------------------------------------------
                                     60 ; global & static initialisations
                                     61 ;--------------------------------------------------------
                                     62 	.area _HOME
                                     63 	.area _GSINIT
                                     64 	.area _GSFINAL
                                     65 	.area _GSINIT
                                     66 ;--------------------------------------------------------
                                     67 ; Home
                                     68 ;--------------------------------------------------------
                                     69 	.area _HOME
                                     70 	.area _HOME
                                     71 ;--------------------------------------------------------
                                     72 ; code
                                     73 ;--------------------------------------------------------
                                     74 	.area _CODE
                                     75 ;input.h:31: void update_input_state(struct input_state* is, uint8_t button_state)
                                     76 ;	---------------------------------
                                     77 ; Function update_input_state
                                     78 ; ---------------------------------
      000000                         79 _update_input_state::
      000000 E8 FB                   80 	add	sp, #-5
                                     81 ;input.h:34: is->previous_state = is->current_state;
      000002 F8 07                   82 	ldhl	sp,	#7
      000004 7E                      83 	ld	a, (hl)
      000005 F8 00                   84 	ldhl	sp,	#0
      000007 77                      85 	ld	(hl), a
      000008 F8 08                   86 	ldhl	sp,	#8
      00000A 7E                      87 	ld	a, (hl)
      00000B F8 01                   88 	ldhl	sp,	#1
      00000D 22                      89 	ld	(hl+), a
      00000E C1                      90 	pop	bc
      00000F C5                      91 	push	bc
      000010 03                      92 	inc	bc
      000011 0A                      93 	ld	a, (bc)
      000012 77                      94 	ld	(hl), a
      000013 D1                      95 	pop	de
      000014 D5                      96 	push	de
      000015 7E                      97 	ld	a, (hl)
      000016 12                      98 	ld	(de), a
                                     99 ;input.h:37: is->current_state = ((button_state & J_A) == J_A) << btn_a;
      000017 F8 09                  100 	ldhl	sp,	#9
      000019 7E                     101 	ld	a, (hl)
      00001A F8 03                  102 	ldhl	sp,	#3
      00001C 22                     103 	ld	(hl+), a
      00001D AF                     104 	xor	a, a
      00001E 32                     105 	ld	(hl-), a
      00001F 7E                     106 	ld	a, (hl)
      000020 E6 10                  107 	and	a, #0x10
      000022 5F                     108 	ld	e, a
      000023 16 00                  109 	ld	d, #0x00
      000025 7B                     110 	ld	a, e
      000026 D6 10                  111 	sub	a, #0x10
      000028 B2                     112 	or	a, d
      000029 3E 01                  113 	ld	a, #0x01
      00002B 28 01                  114 	jr	Z, 00104$
      00002D AF                     115 	xor	a, a
      00002E                        116 00104$:
                                    117 ;input.h:38: is->current_state |= ((button_state & J_B) == J_B) << btn_b;
      00002E 02                     118 	ld	(bc), a
      00002F 5F                     119 	ld	e, a
      000030 F8 03                  120 	ldhl	sp,	#3
      000032 7E                     121 	ld	a, (hl)
      000033 E6 20                  122 	and	a, #0x20
                                    123 ;	spillPairReg hl
                                    124 ;	spillPairReg hl
      000035 2E 00                  125 	ld	l, #0x00
      000037 D6 20                  126 	sub	a, #0x20
      000039 B5                     127 	or	a, l
      00003A 3E 01                  128 	ld	a, #0x01
      00003C 28 01                  129 	jr	Z, 00106$
      00003E AF                     130 	xor	a, a
      00003F                        131 00106$:
      00003F 87                     132 	add	a, a
      000040 B3                     133 	or	a, e
      000041 5F                     134 	ld	e, a
      000042 02                     135 	ld	(bc), a
                                    136 ;input.h:39: is->current_state |= ((button_state & J_UP) == J_UP) << btn_up;
      000043 F8 03                  137 	ldhl	sp,	#3
      000045 7E                     138 	ld	a, (hl)
      000046 E6 04                  139 	and	a, #0x04
                                    140 ;	spillPairReg hl
                                    141 ;	spillPairReg hl
      000048 2E 00                  142 	ld	l, #0x00
      00004A D6 04                  143 	sub	a, #0x04
      00004C B5                     144 	or	a, l
      00004D 3E 01                  145 	ld	a, #0x01
      00004F 28 01                  146 	jr	Z, 00108$
      000051 AF                     147 	xor	a, a
      000052                        148 00108$:
      000052 87                     149 	add	a, a
      000053 87                     150 	add	a, a
      000054 B3                     151 	or	a, e
      000055 5F                     152 	ld	e, a
      000056 02                     153 	ld	(bc), a
                                    154 ;input.h:40: is->current_state |= ((button_state & J_DOWN) == J_DOWN) << btn_down;
      000057 F8 03                  155 	ldhl	sp,	#3
      000059 7E                     156 	ld	a, (hl)
      00005A E6 08                  157 	and	a, #0x08
                                    158 ;	spillPairReg hl
                                    159 ;	spillPairReg hl
      00005C 2E 00                  160 	ld	l, #0x00
      00005E D6 08                  161 	sub	a, #0x08
      000060 B5                     162 	or	a, l
      000061 3E 01                  163 	ld	a, #0x01
      000063 28 01                  164 	jr	Z, 00110$
      000065 AF                     165 	xor	a, a
      000066                        166 00110$:
      000066 87                     167 	add	a, a
      000067 87                     168 	add	a, a
      000068 87                     169 	add	a, a
      000069 B3                     170 	or	a, e
      00006A 5F                     171 	ld	e, a
      00006B 02                     172 	ld	(bc), a
                                    173 ;input.h:41: is->current_state |= ((button_state & J_LEFT) == J_LEFT) << btn_left;
      00006C F8 03                  174 	ldhl	sp,	#3
      00006E 7E                     175 	ld	a, (hl)
      00006F E6 02                  176 	and	a, #0x02
                                    177 ;	spillPairReg hl
                                    178 ;	spillPairReg hl
      000071 2E 00                  179 	ld	l, #0x00
      000073 D6 02                  180 	sub	a, #0x02
      000075 B5                     181 	or	a, l
      000076 3E 01                  182 	ld	a, #0x01
      000078 28 01                  183 	jr	Z, 00112$
      00007A AF                     184 	xor	a, a
      00007B                        185 00112$:
      00007B CB 37                  186 	swap	a
      00007D E6 F0                  187 	and	a, #0xf0
      00007F B3                     188 	or	a, e
      000080 5F                     189 	ld	e, a
      000081 02                     190 	ld	(bc), a
                                    191 ;input.h:42: is->current_state |= ((button_state & J_RIGHT) == J_RIGHT) << btn_right;
      000082 F8 03                  192 	ldhl	sp,	#3
      000084 7E                     193 	ld	a, (hl)
      000085 E6 01                  194 	and	a, #0x01
                                    195 ;	spillPairReg hl
                                    196 ;	spillPairReg hl
      000087 2E 00                  197 	ld	l, #0x00
      000089 3D                     198 	dec	a
      00008A B5                     199 	or	a, l
      00008B 3E 01                  200 	ld	a, #0x01
      00008D 28 01                  201 	jr	Z, 00114$
      00008F AF                     202 	xor	a, a
      000090                        203 00114$:
      000090 CB 37                  204 	swap	a
      000092 07                     205 	rlca
      000093 E6 E0                  206 	and	a, #0xe0
      000095 B3                     207 	or	a, e
      000096 5F                     208 	ld	e, a
      000097 02                     209 	ld	(bc), a
                                    210 ;input.h:43: is->current_state |= ((button_state & J_START) == J_START) << btn_start;
      000098 F8 03                  211 	ldhl	sp,	#3
      00009A 7E                     212 	ld	a, (hl)
      00009B E6 80                  213 	and	a, #0x80
                                    214 ;	spillPairReg hl
                                    215 ;	spillPairReg hl
      00009D 2E 00                  216 	ld	l, #0x00
      00009F D6 80                  217 	sub	a, #0x80
      0000A1 B5                     218 	or	a, l
      0000A2 3E 01                  219 	ld	a, #0x01
      0000A4 28 01                  220 	jr	Z, 00116$
      0000A6 AF                     221 	xor	a, a
      0000A7                        222 00116$:
      0000A7 0F                     223 	rrca
      0000A8 0F                     224 	rrca
      0000A9 E6 C0                  225 	and	a, #0xc0
      0000AB B3                     226 	or	a, e
      0000AC 5F                     227 	ld	e, a
      0000AD 02                     228 	ld	(bc), a
                                    229 ;input.h:44: is->current_state |= ((button_state & J_SELECT) == J_SELECT) << btn_select;
      0000AE F8 03                  230 	ldhl	sp,	#3
      0000B0 7E                     231 	ld	a, (hl)
      0000B1 E6 40                  232 	and	a, #0x40
                                    233 ;	spillPairReg hl
                                    234 ;	spillPairReg hl
      0000B3 2E 00                  235 	ld	l, #0x00
      0000B5 D6 40                  236 	sub	a, #0x40
      0000B7 B5                     237 	or	a, l
      0000B8 3E 01                  238 	ld	a, #0x01
      0000BA 28 01                  239 	jr	Z, 00118$
      0000BC AF                     240 	xor	a, a
      0000BD                        241 00118$:
      0000BD 0F                     242 	rrca
      0000BE E6 80                  243 	and	a, #0x80
      0000C0 B3                     244 	or	a, e
      0000C1 57                     245 	ld	d, a
      0000C2 02                     246 	ld	(bc), a
                                    247 ;input.h:47: is->held_buttons = is->previous_state & is->current_state;
      0000C3 C1                     248 	pop	bc
      0000C4 C5                     249 	push	bc
      0000C5 03                     250 	inc	bc
      0000C6 03                     251 	inc	bc
      0000C7 F8 02                  252 	ldhl	sp,	#2
                                    253 ;input.h:50: is->depressed_buttons = (is->current_state ^ is->held_buttons);
                                    254 ;input.h:53: is->released_buttons = (is->previous_state ^ is->held_buttons);
      0000C9 3A                     255 	ld	a, (hl-)
      0000CA 2B                     256 	dec	hl
      0000CB A2                     257 	and	a, d
      0000CC 5F                     258 	ld	e, a
      0000CD 02                     259 	ld	(bc), a
      0000CE C1                     260 	pop	bc
      0000CF C5                     261 	push	bc
      0000D0 03                     262 	inc	bc
      0000D1 03                     263 	inc	bc
      0000D2 03                     264 	inc	bc
      0000D3 7A                     265 	ld	a, d
      0000D4 AB                     266 	xor	a, e
      0000D5 02                     267 	ld	(bc), a
      0000D6 D5                     268 	push	de
      0000D7 2A                     269 	ld	a, (hl+)
      0000D8 5F                     270 	ld	e, a
      0000D9 56                     271 	ld	d, (hl)
      0000DA 21 04 00               272 	ld	hl, #0x0004
      0000DD 19                     273 	add	hl, de
      0000DE D1                     274 	pop	de
      0000DF 4D                     275 	ld	c, l
      0000E0 44                     276 	ld	b, h
      0000E1 F8 02                  277 	ldhl	sp,	#2
      0000E3 7E                     278 	ld	a, (hl)
      0000E4 AB                     279 	xor	a, e
      0000E5 02                     280 	ld	(bc), a
                                    281 ;input.h:54: }
      0000E6 E8 05                  282 	add	sp, #5
      0000E8 C9                     283 	ret
      0000E9                        284 _k_background_map:
      0000E9 00                     285 	.db #0x00	; 0
      0000EA 00                     286 	.db #0x00	; 0
      0000EB 00                     287 	.db #0x00	; 0
      0000EC 00                     288 	.db #0x00	; 0
      0000ED 00                     289 	.db #0x00	; 0
      0000EE 00                     290 	.db #0x00	; 0
      0000EF 00                     291 	.db #0x00	; 0
      0000F0 00                     292 	.db #0x00	; 0
      0000F1 00                     293 	.db #0x00	; 0
      0000F2 00                     294 	.db #0x00	; 0
      0000F3 00                     295 	.db #0x00	; 0
      0000F4 00                     296 	.db #0x00	; 0
      0000F5 00                     297 	.db #0x00	; 0
      0000F6 00                     298 	.db #0x00	; 0
      0000F7 00                     299 	.db #0x00	; 0
      0000F8 00                     300 	.db #0x00	; 0
      0000F9 00                     301 	.db #0x00	; 0
      0000FA 00                     302 	.db #0x00	; 0
      0000FB 00                     303 	.db #0x00	; 0
      0000FC 00                     304 	.db #0x00	; 0
      0000FD 00                     305 	.db #0x00	; 0
      0000FE 00                     306 	.db #0x00	; 0
      0000FF 00                     307 	.db #0x00	; 0
      000100 00                     308 	.db #0x00	; 0
      000101 00                     309 	.db #0x00	; 0
      000102 00                     310 	.db #0x00	; 0
      000103 00                     311 	.db #0x00	; 0
      000104 00                     312 	.db #0x00	; 0
      000105 00                     313 	.db #0x00	; 0
      000106 00                     314 	.db #0x00	; 0
      000107 00                     315 	.db #0x00	; 0
      000108 00                     316 	.db #0x00	; 0
      000109 00                     317 	.db #0x00	; 0
      00010A 00                     318 	.db #0x00	; 0
      00010B 00                     319 	.db #0x00	; 0
      00010C 00                     320 	.db #0x00	; 0
      00010D 00                     321 	.db #0x00	; 0
      00010E 00                     322 	.db #0x00	; 0
      00010F 00                     323 	.db #0x00	; 0
      000110 00                     324 	.db #0x00	; 0
      000111 00                     325 	.db #0x00	; 0
      000112 00                     326 	.db #0x00	; 0
      000113 00                     327 	.db #0x00	; 0
      000114 00                     328 	.db #0x00	; 0
      000115 00                     329 	.db #0x00	; 0
      000116 00                     330 	.db #0x00	; 0
      000117 00                     331 	.db #0x00	; 0
      000118 00                     332 	.db #0x00	; 0
      000119 00                     333 	.db #0x00	; 0
      00011A 00                     334 	.db #0x00	; 0
      00011B 00                     335 	.db #0x00	; 0
      00011C 00                     336 	.db #0x00	; 0
      00011D 00                     337 	.db #0x00	; 0
      00011E 00                     338 	.db #0x00	; 0
      00011F 00                     339 	.db #0x00	; 0
      000120 00                     340 	.db #0x00	; 0
      000121 00                     341 	.db #0x00	; 0
      000122 00                     342 	.db #0x00	; 0
      000123 00                     343 	.db #0x00	; 0
      000124 00                     344 	.db #0x00	; 0
      000125 00                     345 	.db #0x00	; 0
      000126 00                     346 	.db #0x00	; 0
      000127 00                     347 	.db #0x00	; 0
      000128 00                     348 	.db #0x00	; 0
      000129 00                     349 	.db #0x00	; 0
      00012A 00                     350 	.db #0x00	; 0
      00012B 00                     351 	.db #0x00	; 0
      00012C 00                     352 	.db #0x00	; 0
      00012D 00                     353 	.db #0x00	; 0
      00012E 00                     354 	.db #0x00	; 0
      00012F 00                     355 	.db #0x00	; 0
      000130 00                     356 	.db #0x00	; 0
      000131 00                     357 	.db #0x00	; 0
      000132 00                     358 	.db #0x00	; 0
      000133 00                     359 	.db #0x00	; 0
      000134 00                     360 	.db #0x00	; 0
      000135 00                     361 	.db #0x00	; 0
      000136 00                     362 	.db #0x00	; 0
      000137 00                     363 	.db #0x00	; 0
      000138 00                     364 	.db #0x00	; 0
      000139 00                     365 	.db #0x00	; 0
      00013A 00                     366 	.db #0x00	; 0
      00013B 00                     367 	.db #0x00	; 0
      00013C 00                     368 	.db #0x00	; 0
      00013D 00                     369 	.db #0x00	; 0
      00013E 00                     370 	.db #0x00	; 0
      00013F 00                     371 	.db #0x00	; 0
      000140 00                     372 	.db #0x00	; 0
      000141 00                     373 	.db #0x00	; 0
      000142 00                     374 	.db #0x00	; 0
      000143 00                     375 	.db #0x00	; 0
      000144 00                     376 	.db #0x00	; 0
      000145 00                     377 	.db #0x00	; 0
      000146 00                     378 	.db #0x00	; 0
      000147 00                     379 	.db #0x00	; 0
      000148 00                     380 	.db #0x00	; 0
      000149 00                     381 	.db #0x00	; 0
      00014A 00                     382 	.db #0x00	; 0
      00014B 00                     383 	.db #0x00	; 0
      00014C 00                     384 	.db #0x00	; 0
      00014D 00                     385 	.db #0x00	; 0
      00014E 00                     386 	.db #0x00	; 0
      00014F 00                     387 	.db #0x00	; 0
      000150 00                     388 	.db #0x00	; 0
      000151 00                     389 	.db #0x00	; 0
      000152 00                     390 	.db #0x00	; 0
      000153 00                     391 	.db #0x00	; 0
      000154 00                     392 	.db #0x00	; 0
      000155 00                     393 	.db #0x00	; 0
      000156 00                     394 	.db #0x00	; 0
      000157 00                     395 	.db #0x00	; 0
      000158 00                     396 	.db #0x00	; 0
      000159 00                     397 	.db #0x00	; 0
      00015A 00                     398 	.db #0x00	; 0
      00015B 00                     399 	.db #0x00	; 0
      00015C 00                     400 	.db #0x00	; 0
      00015D 00                     401 	.db #0x00	; 0
      00015E 00                     402 	.db #0x00	; 0
      00015F 00                     403 	.db #0x00	; 0
      000160 00                     404 	.db #0x00	; 0
      000161 00                     405 	.db #0x00	; 0
      000162 00                     406 	.db #0x00	; 0
      000163 00                     407 	.db #0x00	; 0
      000164 00                     408 	.db #0x00	; 0
      000165 00                     409 	.db #0x00	; 0
      000166 00                     410 	.db #0x00	; 0
      000167 00                     411 	.db #0x00	; 0
      000168 00                     412 	.db #0x00	; 0
      000169 00                     413 	.db #0x00	; 0
      00016A 00                     414 	.db #0x00	; 0
      00016B 00                     415 	.db #0x00	; 0
      00016C 00                     416 	.db #0x00	; 0
      00016D 00                     417 	.db #0x00	; 0
      00016E 00                     418 	.db #0x00	; 0
      00016F 00                     419 	.db #0x00	; 0
      000170 00                     420 	.db #0x00	; 0
      000171 00                     421 	.db #0x00	; 0
      000172 00                     422 	.db #0x00	; 0
      000173 00                     423 	.db #0x00	; 0
      000174 00                     424 	.db #0x00	; 0
      000175 00                     425 	.db #0x00	; 0
      000176 00                     426 	.db #0x00	; 0
      000177 00                     427 	.db #0x00	; 0
      000178 00                     428 	.db #0x00	; 0
      000179 00                     429 	.db #0x00	; 0
      00017A 00                     430 	.db #0x00	; 0
      00017B 00                     431 	.db #0x00	; 0
      00017C 00                     432 	.db #0x00	; 0
      00017D 00                     433 	.db #0x00	; 0
      00017E 00                     434 	.db #0x00	; 0
      00017F 00                     435 	.db #0x00	; 0
      000180 00                     436 	.db #0x00	; 0
      000181 00                     437 	.db #0x00	; 0
      000182 00                     438 	.db #0x00	; 0
      000183 00                     439 	.db #0x00	; 0
      000184 00                     440 	.db #0x00	; 0
      000185 00                     441 	.db #0x00	; 0
      000186 00                     442 	.db #0x00	; 0
      000187 00                     443 	.db #0x00	; 0
      000188 00                     444 	.db #0x00	; 0
      000189 00                     445 	.db #0x00	; 0
      00018A 00                     446 	.db #0x00	; 0
      00018B 00                     447 	.db #0x00	; 0
      00018C 00                     448 	.db #0x00	; 0
      00018D 00                     449 	.db #0x00	; 0
      00018E 00                     450 	.db #0x00	; 0
      00018F 00                     451 	.db #0x00	; 0
      000190 00                     452 	.db #0x00	; 0
      000191 00                     453 	.db #0x00	; 0
      000192 00                     454 	.db #0x00	; 0
      000193 00                     455 	.db #0x00	; 0
      000194 00                     456 	.db #0x00	; 0
      000195 00                     457 	.db #0x00	; 0
      000196 00                     458 	.db #0x00	; 0
      000197 00                     459 	.db #0x00	; 0
      000198 00                     460 	.db #0x00	; 0
      000199 00                     461 	.db #0x00	; 0
      00019A 00                     462 	.db #0x00	; 0
      00019B 00                     463 	.db #0x00	; 0
      00019C 00                     464 	.db #0x00	; 0
      00019D 00                     465 	.db #0x00	; 0
      00019E 00                     466 	.db #0x00	; 0
      00019F 00                     467 	.db #0x00	; 0
      0001A0 00                     468 	.db #0x00	; 0
      0001A1 00                     469 	.db #0x00	; 0
      0001A2 00                     470 	.db #0x00	; 0
      0001A3 00                     471 	.db #0x00	; 0
      0001A4 00                     472 	.db #0x00	; 0
      0001A5 00                     473 	.db #0x00	; 0
      0001A6 00                     474 	.db #0x00	; 0
      0001A7 00                     475 	.db #0x00	; 0
      0001A8 00                     476 	.db #0x00	; 0
      0001A9 00                     477 	.db #0x00	; 0
      0001AA 00                     478 	.db #0x00	; 0
      0001AB 00                     479 	.db #0x00	; 0
      0001AC 00                     480 	.db #0x00	; 0
      0001AD 00                     481 	.db #0x00	; 0
      0001AE 00                     482 	.db #0x00	; 0
      0001AF 00                     483 	.db #0x00	; 0
      0001B0 00                     484 	.db #0x00	; 0
      0001B1 00                     485 	.db #0x00	; 0
      0001B2 00                     486 	.db #0x00	; 0
      0001B3 00                     487 	.db #0x00	; 0
      0001B4 00                     488 	.db #0x00	; 0
      0001B5 00                     489 	.db #0x00	; 0
      0001B6 00                     490 	.db #0x00	; 0
      0001B7 00                     491 	.db #0x00	; 0
      0001B8 00                     492 	.db #0x00	; 0
      0001B9 00                     493 	.db #0x00	; 0
      0001BA 00                     494 	.db #0x00	; 0
      0001BB 00                     495 	.db #0x00	; 0
      0001BC 00                     496 	.db #0x00	; 0
      0001BD 00                     497 	.db #0x00	; 0
      0001BE 00                     498 	.db #0x00	; 0
      0001BF 00                     499 	.db #0x00	; 0
      0001C0 00                     500 	.db #0x00	; 0
      0001C1 00                     501 	.db #0x00	; 0
      0001C2 00                     502 	.db #0x00	; 0
      0001C3 00                     503 	.db #0x00	; 0
      0001C4 00                     504 	.db #0x00	; 0
      0001C5 00                     505 	.db #0x00	; 0
      0001C6 00                     506 	.db #0x00	; 0
      0001C7 00                     507 	.db #0x00	; 0
      0001C8 00                     508 	.db #0x00	; 0
      0001C9 00                     509 	.db #0x00	; 0
      0001CA 00                     510 	.db #0x00	; 0
      0001CB 00                     511 	.db #0x00	; 0
      0001CC 00                     512 	.db #0x00	; 0
      0001CD 00                     513 	.db #0x00	; 0
      0001CE 00                     514 	.db #0x00	; 0
      0001CF 00                     515 	.db #0x00	; 0
      0001D0 00                     516 	.db #0x00	; 0
      0001D1 00                     517 	.db #0x00	; 0
      0001D2 00                     518 	.db #0x00	; 0
      0001D3 00                     519 	.db #0x00	; 0
      0001D4 00                     520 	.db #0x00	; 0
      0001D5 00                     521 	.db #0x00	; 0
      0001D6 00                     522 	.db #0x00	; 0
      0001D7 00                     523 	.db #0x00	; 0
      0001D8 00                     524 	.db #0x00	; 0
      0001D9 00                     525 	.db #0x00	; 0
      0001DA 00                     526 	.db #0x00	; 0
      0001DB 00                     527 	.db #0x00	; 0
      0001DC 00                     528 	.db #0x00	; 0
      0001DD 00                     529 	.db #0x00	; 0
      0001DE 00                     530 	.db #0x00	; 0
      0001DF 00                     531 	.db #0x00	; 0
      0001E0 00                     532 	.db #0x00	; 0
      0001E1 00                     533 	.db #0x00	; 0
      0001E2 00                     534 	.db #0x00	; 0
      0001E3 00                     535 	.db #0x00	; 0
      0001E4 00                     536 	.db #0x00	; 0
      0001E5 00                     537 	.db #0x00	; 0
      0001E6 00                     538 	.db #0x00	; 0
      0001E7 00                     539 	.db #0x00	; 0
      0001E8 00                     540 	.db #0x00	; 0
      0001E9 00                     541 	.db #0x00	; 0
      0001EA 00                     542 	.db #0x00	; 0
      0001EB 00                     543 	.db #0x00	; 0
      0001EC 00                     544 	.db #0x00	; 0
      0001ED 00                     545 	.db #0x00	; 0
      0001EE 00                     546 	.db #0x00	; 0
      0001EF 00                     547 	.db #0x00	; 0
      0001F0 00                     548 	.db #0x00	; 0
      0001F1 00                     549 	.db #0x00	; 0
      0001F2 00                     550 	.db #0x00	; 0
      0001F3 00                     551 	.db #0x00	; 0
      0001F4 00                     552 	.db #0x00	; 0
      0001F5 00                     553 	.db #0x00	; 0
      0001F6 00                     554 	.db #0x00	; 0
      0001F7 00                     555 	.db #0x00	; 0
      0001F8 00                     556 	.db #0x00	; 0
      0001F9 00                     557 	.db #0x00	; 0
      0001FA 00                     558 	.db #0x00	; 0
      0001FB 00                     559 	.db #0x00	; 0
      0001FC 00                     560 	.db #0x00	; 0
      0001FD 00                     561 	.db #0x00	; 0
      0001FE 00                     562 	.db #0x00	; 0
      0001FF 00                     563 	.db #0x00	; 0
      000200 00                     564 	.db #0x00	; 0
      000201 00                     565 	.db #0x00	; 0
      000202 00                     566 	.db #0x00	; 0
      000203 00                     567 	.db #0x00	; 0
      000204 00                     568 	.db #0x00	; 0
      000205 00                     569 	.db #0x00	; 0
      000206 00                     570 	.db #0x00	; 0
      000207 00                     571 	.db #0x00	; 0
      000208 00                     572 	.db #0x00	; 0
      000209 00                     573 	.db #0x00	; 0
      00020A 00                     574 	.db #0x00	; 0
      00020B 00                     575 	.db #0x00	; 0
      00020C 00                     576 	.db #0x00	; 0
      00020D 00                     577 	.db #0x00	; 0
      00020E 00                     578 	.db #0x00	; 0
      00020F 00                     579 	.db #0x00	; 0
      000210 00                     580 	.db #0x00	; 0
      000211 00                     581 	.db #0x00	; 0
      000212 00                     582 	.db #0x00	; 0
      000213 00                     583 	.db #0x00	; 0
      000214 00                     584 	.db #0x00	; 0
      000215 00                     585 	.db #0x00	; 0
      000216 00                     586 	.db #0x00	; 0
      000217 00                     587 	.db #0x00	; 0
      000218 00                     588 	.db #0x00	; 0
      000219 00                     589 	.db #0x00	; 0
      00021A 00                     590 	.db #0x00	; 0
      00021B 00                     591 	.db #0x00	; 0
      00021C 00                     592 	.db #0x00	; 0
      00021D 00                     593 	.db #0x00	; 0
      00021E 00                     594 	.db #0x00	; 0
      00021F 00                     595 	.db #0x00	; 0
      000220 00                     596 	.db #0x00	; 0
      000221 00                     597 	.db #0x00	; 0
      000222 00                     598 	.db #0x00	; 0
      000223 00                     599 	.db #0x00	; 0
      000224 00                     600 	.db #0x00	; 0
      000225 00                     601 	.db #0x00	; 0
      000226 00                     602 	.db #0x00	; 0
      000227 00                     603 	.db #0x00	; 0
      000228 00                     604 	.db #0x00	; 0
      000229 00                     605 	.db #0x00	; 0
      00022A 00                     606 	.db #0x00	; 0
      00022B 00                     607 	.db #0x00	; 0
      00022C 00                     608 	.db #0x00	; 0
      00022D 00                     609 	.db #0x00	; 0
      00022E 00                     610 	.db #0x00	; 0
      00022F 00                     611 	.db #0x00	; 0
      000230 00                     612 	.db #0x00	; 0
      000231 00                     613 	.db #0x00	; 0
      000232 00                     614 	.db #0x00	; 0
      000233 00                     615 	.db #0x00	; 0
      000234 00                     616 	.db #0x00	; 0
      000235 00                     617 	.db #0x00	; 0
      000236 00                     618 	.db #0x00	; 0
      000237 00                     619 	.db #0x00	; 0
      000238 00                     620 	.db #0x00	; 0
      000239 00                     621 	.db #0x00	; 0
      00023A 00                     622 	.db #0x00	; 0
      00023B 00                     623 	.db #0x00	; 0
      00023C 00                     624 	.db #0x00	; 0
      00023D 00                     625 	.db #0x00	; 0
      00023E 00                     626 	.db #0x00	; 0
      00023F 00                     627 	.db #0x00	; 0
      000240 00                     628 	.db #0x00	; 0
      000241 00                     629 	.db #0x00	; 0
      000242 00                     630 	.db #0x00	; 0
      000243 00                     631 	.db #0x00	; 0
      000244 00                     632 	.db #0x00	; 0
      000245 00                     633 	.db #0x00	; 0
      000246 00                     634 	.db #0x00	; 0
      000247 00                     635 	.db #0x00	; 0
      000248 00                     636 	.db #0x00	; 0
      000249 00                     637 	.db #0x00	; 0
      00024A 00                     638 	.db #0x00	; 0
      00024B 00                     639 	.db #0x00	; 0
      00024C 00                     640 	.db #0x00	; 0
      00024D 00                     641 	.db #0x00	; 0
      00024E 00                     642 	.db #0x00	; 0
      00024F 00                     643 	.db #0x00	; 0
      000250 00                     644 	.db #0x00	; 0
      000251                        645 _k_background_tiles:
      000251 FF                     646 	.db #0xff	; 255
      000252 00                     647 	.db #0x00	; 0
      000253 80                     648 	.db #0x80	; 128
      000254 00                     649 	.db #0x00	; 0
      000255 80                     650 	.db #0x80	; 128
      000256 00                     651 	.db #0x00	; 0
      000257 80                     652 	.db #0x80	; 128
      000258 00                     653 	.db #0x00	; 0
      000259 80                     654 	.db #0x80	; 128
      00025A 00                     655 	.db #0x00	; 0
      00025B 80                     656 	.db #0x80	; 128
      00025C 00                     657 	.db #0x00	; 0
      00025D 80                     658 	.db #0x80	; 128
      00025E 00                     659 	.db #0x00	; 0
      00025F 80                     660 	.db #0x80	; 128
      000260 00                     661 	.db #0x00	; 0
      000261 FF                     662 	.db #0xff	; 255
      000262 00                     663 	.db #0x00	; 0
      000263 80                     664 	.db #0x80	; 128
      000264 00                     665 	.db #0x00	; 0
      000265 80                     666 	.db #0x80	; 128
      000266 00                     667 	.db #0x00	; 0
      000267 80                     668 	.db #0x80	; 128
      000268 00                     669 	.db #0x00	; 0
      000269 80                     670 	.db #0x80	; 128
      00026A 00                     671 	.db #0x00	; 0
      00026B 80                     672 	.db #0x80	; 128
      00026C 00                     673 	.db #0x00	; 0
      00026D 80                     674 	.db #0x80	; 128
      00026E 00                     675 	.db #0x00	; 0
      00026F 80                     676 	.db #0x80	; 128
      000270 00                     677 	.db #0x00	; 0
      000271                        678 _SCREEN_MIN_X:
      000271 08                     679 	.db #0x08	; 8
      000272                        680 _SCREEN_MIN_Y:
      000272 10                     681 	.db #0x10	; 16
      000273                        682 _SCREEN_WIDTH:
      000273 A0                     683 	.db #0xa0	; 160
      000274                        684 _SCREEN_HEIGHT:
      000274 90                     685 	.db #0x90	; 144
      000275                        686 _SPRITE_TILE_WIDTH:
      000275 08                     687 	.db #0x08	; 8
      000276                        688 _SPRITE_TILE_HEIGHT:
      000276 08                     689 	.db #0x08	; 8
                                    690 ;input.h:58: uint8_t was_input_depressed(struct input_state* is, uint8_t button)
                                    691 ;	---------------------------------
                                    692 ; Function was_input_depressed
                                    693 ; ---------------------------------
      000277                        694 _was_input_depressed::
                                    695 ;input.h:60: return is->depressed_buttons & (1 << button);
      000277 F8 02                  696 	ldhl	sp,	#2
      000279 2A                     697 	ld	a, (hl+)
      00027A 4F                     698 	ld	c, a
      00027B 2A                     699 	ld	a, (hl+)
      00027C 47                     700 	ld	b, a
      00027D 03                     701 	inc	bc
      00027E 03                     702 	inc	bc
      00027F 03                     703 	inc	bc
      000280 0A                     704 	ld	a, (bc)
      000281 4E                     705 	ld	c, (hl)
      000282 06 01                  706 	ld	b, #0x01
      000284 0C                     707 	inc	c
      000285 18 02                  708 	jr	00104$
      000287                        709 00103$:
      000287 CB 20                  710 	sla	b
      000289                        711 00104$:
      000289 0D                     712 	dec	c
      00028A 20 FB                  713 	jr	NZ,00103$
      00028C A0                     714 	and	a, b
      00028D 5F                     715 	ld	e, a
                                    716 ;input.h:61: }
      00028E C9                     717 	ret
                                    718 ;input.h:63: uint8_t was_input_released(struct input_state* is, uint8_t button)
                                    719 ;	---------------------------------
                                    720 ; Function was_input_released
                                    721 ; ---------------------------------
      00028F                        722 _was_input_released::
                                    723 ;input.h:65: return is->released_buttons & (1 << button);
      00028F F8 02                  724 	ldhl	sp,	#2
      000291 2A                     725 	ld	a, (hl+)
      000292 4F                     726 	ld	c, a
      000293 46                     727 	ld	b, (hl)
      000294 21 04 00               728 	ld	hl, #0x0004
      000297 09                     729 	add	hl, bc
      000298 4E                     730 	ld	c, (hl)
      000299 F8 04                  731 	ldhl	sp,	#4
      00029B 46                     732 	ld	b, (hl)
      00029C 3E 01                  733 	ld	a, #0x01
      00029E 04                     734 	inc	b
      00029F 18 01                  735 	jr	00104$
      0002A1                        736 00103$:
      0002A1 87                     737 	add	a, a
      0002A2                        738 00104$:
      0002A2 05                     739 	dec	b
      0002A3 20 FC                  740 	jr	NZ,00103$
      0002A5 A1                     741 	and	a, c
      0002A6 5F                     742 	ld	e, a
                                    743 ;input.h:66: }
      0002A7 C9                     744 	ret
                                    745 ;input.h:68: uint8_t is_input_held(struct input_state* is, uint8_t button)
                                    746 ;	---------------------------------
                                    747 ; Function is_input_held
                                    748 ; ---------------------------------
      0002A8                        749 _is_input_held::
                                    750 ;input.h:70: return is->held_buttons & (1 << button);
      0002A8 F8 02                  751 	ldhl	sp,	#2
      0002AA 2A                     752 	ld	a, (hl+)
      0002AB 4F                     753 	ld	c, a
      0002AC 2A                     754 	ld	a, (hl+)
      0002AD 47                     755 	ld	b, a
      0002AE 03                     756 	inc	bc
      0002AF 03                     757 	inc	bc
      0002B0 0A                     758 	ld	a, (bc)
      0002B1 4E                     759 	ld	c, (hl)
      0002B2 06 01                  760 	ld	b, #0x01
      0002B4 0C                     761 	inc	c
      0002B5 18 02                  762 	jr	00104$
      0002B7                        763 00103$:
      0002B7 CB 20                  764 	sla	b
      0002B9                        765 00104$:
      0002B9 0D                     766 	dec	c
      0002BA 20 FB                  767 	jr	NZ,00103$
      0002BC A0                     768 	and	a, b
      0002BD 5F                     769 	ld	e, a
                                    770 ;input.h:71: }
      0002BE C9                     771 	ret
                                    772 ;utility.h:6: void wait_vbls_done(uint8_t num_loops)
                                    773 ;	---------------------------------
                                    774 ; Function wait_vbls_done
                                    775 ; ---------------------------------
      0002BF                        776 _wait_vbls_done::
                                    777 ;utility.h:8: for (uint8_t loop_counter = 0; loop_counter < num_loops; ++loop_counter)
      0002BF 0E 00                  778 	ld	c, #0x00
      0002C1                        779 00103$:
      0002C1 79                     780 	ld	a, c
      0002C2 F8 02                  781 	ldhl	sp,	#2
      0002C4 96                     782 	sub	a, (hl)
      0002C5 D0                     783 	ret	NC
                                    784 ;utility.h:10: wait_vbl_done();
      0002C6 CDr00r00               785 	call	_wait_vbl_done
                                    786 ;utility.h:8: for (uint8_t loop_counter = 0; loop_counter < num_loops; ++loop_counter)
      0002C9 0C                     787 	inc	c
                                    788 ;utility.h:12: }
      0002CA 18 F5                  789 	jr	00103$
                                    790 ;main.c:52: void update_cursor_sprite(uint8_t tile_index)
                                    791 ;	---------------------------------
                                    792 ; Function update_cursor_sprite
                                    793 ; ---------------------------------
      0002CC                        794 _update_cursor_sprite::
                                    795 ;main.c:54: set_sprite_tile(k_cursor_sprite_index, tile_index);
      0002CC F8 02                  796 	ldhl	sp,	#2
      0002CE 4E                     797 	ld	c, (hl)
      0002CF 21rF2r02               798 	ld	hl, #_k_cursor_sprite_index
                                    799 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0002D2 6E                     800 	ld	l, (hl)
                                    801 ;	spillPairReg hl
                                    802 ;	spillPairReg hl
      0002D3 26 00                  803 	ld	h, #0x00
                                    804 ;	spillPairReg hl
                                    805 ;	spillPairReg hl
      0002D5 29                     806 	add	hl, hl
      0002D6 29                     807 	add	hl, hl
      0002D7 11r00r00               808 	ld	de, #_shadow_OAM
      0002DA 19                     809 	add	hl, de
      0002DB 23                     810 	inc	hl
      0002DC 23                     811 	inc	hl
      0002DD 71                     812 	ld	(hl), c
                                    813 ;main.c:54: set_sprite_tile(k_cursor_sprite_index, tile_index);
                                    814 ;main.c:55: }
      0002DE C9                     815 	ret
      0002DF                        816 _k_execution_state_active_mask:
      0002DF 02                     817 	.db #0x02	; 2
      0002E0                        818 _k_tile_is_alive_mask:
      0002E0 01 00                  819 	.dw #0x0001
      0002E2                        820 _k_tile_was_alive_mask:
      0002E2 02 00                  821 	.dw #0x0002
      0002E4                        822 _s_tile_is_north_row_mask:
      0002E4 04 00                  823 	.dw #0x0004
      0002E6                        824 _k_tile_is_south_row_mask:
      0002E6 08 00                  825 	.dw #0x0008
      0002E8                        826 _k_tile_is_west_column_mask:
      0002E8 10 00                  827 	.dw #0x0010
      0002EA                        828 _k_tile_is_east_column_mask:
      0002EA 20 00                  829 	.dw #0x0020
      0002EC                        830 _k_tile_sprite_index_mask:
      0002EC 00 FF                  831 	.dw #0xff00
      0002EE                        832 _k_empty_tile_index:
      0002EE 00                     833 	.db #0x00	; 0
      0002EF                        834 _k_live_tile_index:
      0002EF 01                     835 	.db #0x01	; 1
      0002F0                        836 _k_cursor_empty_tile_index:
      0002F0 02                     837 	.db #0x02	; 2
      0002F1                        838 _k_cursor_live_tile_index:
      0002F1 03                     839 	.db #0x03	; 3
      0002F2                        840 _k_cursor_sprite_index:
      0002F2 00                     841 	.db #0x00	; 0
                                    842 ;main.c:57: void update_cursor_position(uint8_t tile_x, uint8_t tile_y)
                                    843 ;	---------------------------------
                                    844 ; Function update_cursor_position
                                    845 ; ---------------------------------
      0002F3                        846 _update_cursor_position::
                                    847 ;main.c:61: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
      0002F3 FAr76r02               848 	ld	a, (#_SPRITE_TILE_HEIGHT)
      0002F6 F5                     849 	push	af
      0002F7 33                     850 	inc	sp
      0002F8 F8 04                  851 	ldhl	sp,	#4
      0002FA 7E                     852 	ld	a, (hl)
      0002FB F5                     853 	push	af
      0002FC 33                     854 	inc	sp
      0002FD CDr00r00               855 	call	__muluchar
      000300 E1                     856 	pop	hl
      000301 FAr72r02               857 	ld	a, (#_SCREEN_MIN_Y)
      000304 83                     858 	add	a, e
      000305 47                     859 	ld	b, a
                                    860 ;main.c:60: SCREEN_MIN_X + (tile_x * SPRITE_TILE_WIDTH),
      000306 FAr75r02               861 	ld	a, (#_SPRITE_TILE_WIDTH)
      000309 C5                     862 	push	bc
      00030A F5                     863 	push	af
      00030B 33                     864 	inc	sp
      00030C F8 05                  865 	ldhl	sp,	#5
      00030E 7E                     866 	ld	a, (hl)
      00030F F5                     867 	push	af
      000310 33                     868 	inc	sp
      000311 CDr00r00               869 	call	__muluchar
      000314 E1                     870 	pop	hl
      000315 C1                     871 	pop	bc
      000316 FAr71r02               872 	ld	a, (#_SCREEN_MIN_X)
      000319 83                     873 	add	a, e
      00031A 21rF2r02               874 	ld	hl, #_k_cursor_sprite_index
                                    875 ;main.c:61: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
                                    876 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00031D 6E                     877 	ld	l, (hl)
      00031E 4F                     878 	ld	c, a
                                    879 ;	spillPairReg hl
                                    880 ;	spillPairReg hl
      00031F 26 00                  881 	ld	h, #0x00
                                    882 ;	spillPairReg hl
                                    883 ;	spillPairReg hl
      000321 29                     884 	add	hl, hl
      000322 29                     885 	add	hl, hl
      000323 11r00r00               886 	ld	de, #_shadow_OAM
      000326 19                     887 	add	hl, de
                                    888 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000327 78                     889 	ld	a, b
      000328 22                     890 	ld	(hl+), a
      000329 71                     891 	ld	(hl), c
                                    892 ;main.c:61: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
                                    893 ;main.c:62: }
      00032A C9                     894 	ret
                                    895 ;main.c:64: void update_tile_sprite(uint8_t sprite_index, uint8_t tile_index)
                                    896 ;	---------------------------------
                                    897 ; Function update_tile_sprite
                                    898 ; ---------------------------------
      00032B                        899 _update_tile_sprite::
                                    900 ;main.c:66: set_sprite_tile(sprite_index, tile_index);
      00032B F8 03                  901 	ldhl	sp,	#3
      00032D 3A                     902 	ld	a, (hl-)
      00032E 4F                     903 	ld	c, a
                                    904 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00032F 6E                     905 	ld	l, (hl)
      000330 11r00r00               906 	ld	de, #_shadow_OAM+0
                                    907 ;	spillPairReg hl
                                    908 ;	spillPairReg hl
      000333 26 00                  909 	ld	h, #0x00
                                    910 ;	spillPairReg hl
                                    911 ;	spillPairReg hl
      000335 29                     912 	add	hl, hl
      000336 29                     913 	add	hl, hl
      000337 19                     914 	add	hl, de
      000338 23                     915 	inc	hl
      000339 23                     916 	inc	hl
      00033A 71                     917 	ld	(hl), c
                                    918 ;main.c:66: set_sprite_tile(sprite_index, tile_index);
                                    919 ;main.c:67: }
      00033B C9                     920 	ret
                                    921 ;main.c:69: void update_tile_position(uint8_t tile_index, uint8_t tile_x, uint8_t tile_y)
                                    922 ;	---------------------------------
                                    923 ; Function update_tile_position
                                    924 ; ---------------------------------
      00033C                        925 _update_tile_position::
                                    926 ;main.c:73: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
      00033C FAr76r02               927 	ld	a, (#_SPRITE_TILE_HEIGHT)
      00033F F5                     928 	push	af
      000340 33                     929 	inc	sp
      000341 F8 05                  930 	ldhl	sp,	#5
      000343 7E                     931 	ld	a, (hl)
      000344 F5                     932 	push	af
      000345 33                     933 	inc	sp
      000346 CDr00r00               934 	call	__muluchar
      000349 E1                     935 	pop	hl
      00034A FAr72r02               936 	ld	a, (#_SCREEN_MIN_Y)
      00034D 83                     937 	add	a, e
      00034E 47                     938 	ld	b, a
                                    939 ;main.c:72: SCREEN_MIN_X + (tile_x * SPRITE_TILE_WIDTH),
      00034F FAr75r02               940 	ld	a, (#_SPRITE_TILE_WIDTH)
      000352 C5                     941 	push	bc
      000353 F5                     942 	push	af
      000354 33                     943 	inc	sp
      000355 F8 06                  944 	ldhl	sp,	#6
      000357 7E                     945 	ld	a, (hl)
      000358 F5                     946 	push	af
      000359 33                     947 	inc	sp
      00035A CDr00r00               948 	call	__muluchar
      00035D E1                     949 	pop	hl
      00035E C1                     950 	pop	bc
      00035F FAr71r02               951 	ld	a, (#_SCREEN_MIN_X)
      000362 83                     952 	add	a, e
      000363 F8 02                  953 	ldhl	sp,	#2
                                    954 ;main.c:73: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
                                    955 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000365 6E                     956 	ld	l, (hl)
      000366 4F                     957 	ld	c, a
                                    958 ;	spillPairReg hl
                                    959 ;	spillPairReg hl
      000367 26 00                  960 	ld	h, #0x00
                                    961 ;	spillPairReg hl
                                    962 ;	spillPairReg hl
      000369 29                     963 	add	hl, hl
      00036A 29                     964 	add	hl, hl
      00036B 11r00r00               965 	ld	de, #_shadow_OAM
      00036E 19                     966 	add	hl, de
                                    967 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00036F 78                     968 	ld	a, b
      000370 22                     969 	ld	(hl+), a
      000371 71                     970 	ld	(hl), c
                                    971 ;main.c:73: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
                                    972 ;main.c:74: }
      000372 C9                     973 	ret
                                    974 ;main.c:78: int main()
                                    975 ;	---------------------------------
                                    976 ; Function main
                                    977 ; ---------------------------------
      000373                        978 _main::
      000373 21 E3 FC               979 	ld	hl, #-797
      000376 39                     980 	add	hl, sp
      000377 F9                     981 	ld	sp, hl
                                    982 ;main.c:82: input_state.previous_state = 0x00;
      000378 F8 00                  983 	ldhl	sp,	#0
      00037A 4D                     984 	ld	c, l
      00037B 44                     985 	ld	b, h
      00037C AF                     986 	xor	a, a
      00037D 02                     987 	ld	(bc), a
                                    988 ;main.c:83: input_state.current_state = 0x00;
      00037E F8 00                  989 	ldhl	sp,	#0
      000380 7D                     990 	ld	a, l
      000381 54                     991 	ld	d, h
      000382 21 FC 02               992 	ld	hl, #764
      000385 39                     993 	add	hl, sp
      000386 22                     994 	ld	(hl+), a
      000387 7A                     995 	ld	a, d
      000388 32                     996 	ld	(hl-), a
      000389 2A                     997 	ld	a, (hl+)
      00038A 4F                     998 	ld	c, a
                                    999 ;main.c:84: input_state.held_buttons = 0x00;
      00038B 3A                    1000 	ld	a, (hl-)
      00038C 47                    1001 	ld	b, a
      00038D 03                    1002 	inc	bc
      00038E AF                    1003 	xor	a, a
      00038F 02                    1004 	ld	(bc), a
      000390 2A                    1005 	ld	a, (hl+)
      000391 4F                    1006 	ld	c, a
                                   1007 ;main.c:85: input_state.depressed_buttons = 0x00;
      000392 3A                    1008 	ld	a, (hl-)
      000393 47                    1009 	ld	b, a
      000394 03                    1010 	inc	bc
      000395 03                    1011 	inc	bc
      000396 AF                    1012 	xor	a, a
      000397 02                    1013 	ld	(bc), a
      000398 2A                    1014 	ld	a, (hl+)
      000399 4F                    1015 	ld	c, a
                                   1016 ;main.c:86: input_state.released_buttons = 0x00;
      00039A 3A                    1017 	ld	a, (hl-)
      00039B 47                    1018 	ld	b, a
      00039C 03                    1019 	inc	bc
      00039D 03                    1020 	inc	bc
      00039E 03                    1021 	inc	bc
      00039F AF                    1022 	xor	a, a
      0003A0 02                    1023 	ld	(bc), a
      0003A1 2A                    1024 	ld	a, (hl+)
      0003A2 5F                    1025 	ld	e, a
      0003A3 56                    1026 	ld	d, (hl)
      0003A4 21 04 00              1027 	ld	hl, #0x0004
      0003A7 19                    1028 	add	hl, de
      0003A8 4D                    1029 	ld	c, l
      0003A9 44                    1030 	ld	b, h
      0003AA AF                    1031 	xor	a, a
      0003AB 02                    1032 	ld	(bc), a
                                   1033 ;main.c:89: uint8_t execution_state = 0x00;
      0003AC 21 19 03              1034 	ld	hl, #793
      0003AF 39                    1035 	add	hl, sp
      0003B0 36 00                 1036 	ld	(hl), #0x00
                                   1037 ;main.c:92: uint8_t cursor_tile_x = 10;
      0003B2 21 FE 02              1038 	ld	hl, #766
      0003B5 39                    1039 	add	hl, sp
                                   1040 ;main.c:93: uint8_t cursor_tile_y = 9;
      0003B6 3E 0A                 1041 	ld	a, #0x0a
      0003B8 22                    1042 	ld	(hl+), a
      0003B9 36 09                 1043 	ld	(hl), #0x09
                                   1044 ;main.c:102: uint8_t next_available_sprite_index = 0;
      0003BB 21 1C 03              1045 	ld	hl, #796
      0003BE 39                    1046 	add	hl, sp
      0003BF 36 00                 1047 	ld	(hl), #0x00
                                   1048 ;main.c:104: for (uint8_t i = 0; i < 39; ++i)
      0003C1 21 D5 02              1049 	ld	hl, #725
      0003C4 39                    1050 	add	hl, sp
      0003C5 7D                    1051 	ld	a, l
      0003C6 54                    1052 	ld	d, h
      0003C7 21 00 03              1053 	ld	hl, #768
      0003CA 39                    1054 	add	hl, sp
      0003CB 22                    1055 	ld	(hl+), a
      0003CC 72                    1056 	ld	(hl), d
      0003CD 1E 00                 1057 	ld	e, #0x00
      0003CF                       1058 00142$:
      0003CF 7B                    1059 	ld	a, e
      0003D0 D6 27                 1060 	sub	a, #0x27
      0003D2 30 2F                 1061 	jr	NC, 00101$
                                   1062 ;main.c:106: available_sprites[i] = i + 1;
      0003D4 D5                    1063 	push	de
      0003D5 16 00                 1064 	ld	d, #0x00
      0003D7 21 02 03              1065 	ld	hl, #770
      0003DA 39                    1066 	add	hl, sp
      0003DB 2A                    1067 	ld	a,	(hl+)
      0003DC 66                    1068 	ld	h, (hl)
      0003DD 6F                    1069 	ld	l, a
      0003DE 19                    1070 	add	hl, de
      0003DF D1                    1071 	pop	de
      0003E0 4D                    1072 	ld	c, l
      0003E1 44                    1073 	ld	b, h
      0003E2 53                    1074 	ld	d, e
      0003E3 14                    1075 	inc	d
      0003E4 7A                    1076 	ld	a, d
      0003E5 02                    1077 	ld	(bc), a
                                   1078 ;main.c:107: update_tile_sprite(i + 1, k_empty_tile_index);
      0003E6 FArEEr02              1079 	ld	a, (#_k_empty_tile_index)
      0003E9 D5                    1080 	push	de
      0003EA F5                    1081 	push	af
      0003EB 33                    1082 	inc	sp
      0003EC D5                    1083 	push	de
      0003ED 33                    1084 	inc	sp
      0003EE CDr2Br03              1085 	call	_update_tile_sprite
      0003F1 E1                    1086 	pop	hl
      0003F2 D1                    1087 	pop	de
                                   1088 ;main.c:108: update_tile_position(i + 1, 21, 19);
      0003F3 D5                    1089 	push	de
      0003F4 21 15 13              1090 	ld	hl, #0x1315
      0003F7 E5                    1091 	push	hl
      0003F8 D5                    1092 	push	de
      0003F9 33                    1093 	inc	sp
      0003FA CDr3Cr03              1094 	call	_update_tile_position
      0003FD E8 03                 1095 	add	sp, #3
      0003FF D1                    1096 	pop	de
                                   1097 ;main.c:104: for (uint8_t i = 0; i < 39; ++i)
      000400 1C                    1098 	inc	e
      000401 18 CC                 1099 	jr	00142$
      000403                       1100 00101$:
                                   1101 ;main.c:111: for (uint16_t i = 0; i < 360; ++i)
      000403 F8 05                 1102 	ldhl	sp,	#5
      000405 7D                    1103 	ld	a, l
      000406 54                    1104 	ld	d, h
      000407 21 02 03              1105 	ld	hl, #770
      00040A 39                    1106 	add	hl, sp
      00040B 22                    1107 	ld	(hl+), a
      00040C 72                    1108 	ld	(hl), d
      00040D AF                    1109 	xor	a, a
      00040E 21 1A 03              1110 	ld	hl, #794
      000411 39                    1111 	add	hl, sp
      000412 22                    1112 	ld	(hl+), a
      000413 77                    1113 	ld	(hl), a
      000414                       1114 00145$:
      000414 21 1A 03              1115 	ld	hl, #794
      000417 39                    1116 	add	hl, sp
      000418 7E                    1117 	ld	a, (hl)
      000419 21 11 03              1118 	ld	hl, #785
      00041C 39                    1119 	add	hl, sp
      00041D 77                    1120 	ld	(hl), a
      00041E 21 1B 03              1121 	ld	hl, #795
      000421 39                    1122 	add	hl, sp
      000422 7E                    1123 	ld	a, (hl)
      000423 21 12 03              1124 	ld	hl, #786
      000426 39                    1125 	add	hl, sp
      000427 32                    1126 	ld	(hl-), a
      000428 2A                    1127 	ld	a, (hl+)
      000429 D6 68                 1128 	sub	a, #0x68
      00042B 7E                    1129 	ld	a, (hl)
      00042C DE 01                 1130 	sbc	a, #0x01
      00042E D2r7Fr05              1131 	jp	NC, 00102$
                                   1132 ;main.c:113: uint16_t tile_data = 0x0000;
      000431 AF                    1133 	xor	a, a
      000432 21 17 03              1134 	ld	hl, #791
      000435 39                    1135 	add	hl, sp
      000436 22                    1136 	ld	(hl+), a
      000437 77                    1137 	ld	(hl), a
                                   1138 ;main.c:114: tile_data |= (i < 20 ? s_tile_is_north_row_mask : 0x0000);
      000438 21 11 03              1139 	ld	hl, #785
      00043B 39                    1140 	add	hl, sp
      00043C 2A                    1141 	ld	a, (hl+)
      00043D D6 14                 1142 	sub	a, #0x14
      00043F 7E                    1143 	ld	a, (hl)
      000440 DE 00                 1144 	sbc	a, #0x00
      000442 30 1C                 1145 	jr	NC, 00155$
      000444 FArE4r02              1146 	ld	a, (#_s_tile_is_north_row_mask)
      000447 21 15 03              1147 	ld	hl, #789
      00044A 39                    1148 	add	hl, sp
      00044B 77                    1149 	ld	(hl), a
      00044C FArE5r02              1150 	ld	a, (#_s_tile_is_north_row_mask + 1)
      00044F 21 16 03              1151 	ld	hl, #790
      000452 39                    1152 	add	hl, sp
      000453 32                    1153 	ld	(hl-), a
      000454 3A                    1154 	ld	a, (hl-)
      000455 2B                    1155 	dec	hl
      000456 77                    1156 	ld	(hl), a
      000457 21 16 03              1157 	ld	hl, #790
      00045A 39                    1158 	add	hl, sp
      00045B 3A                    1159 	ld	a, (hl-)
      00045C 2B                    1160 	dec	hl
      00045D 77                    1161 	ld	(hl), a
      00045E 18 07                 1162 	jr	00156$
      000460                       1163 00155$:
      000460 AF                    1164 	xor	a, a
      000461 21 13 03              1165 	ld	hl, #787
      000464 39                    1166 	add	hl, sp
      000465 22                    1167 	ld	(hl+), a
      000466 77                    1168 	ld	(hl), a
      000467                       1169 00156$:
      000467 21 17 03              1170 	ld	hl, #791
      00046A 39                    1171 	add	hl, sp
      00046B 3A                    1172 	ld	a, (hl-)
      00046C 2B                    1173 	dec	hl
      00046D 77                    1174 	ld	(hl), a
      00046E 21 18 03              1175 	ld	hl, #792
      000471 39                    1176 	add	hl, sp
      000472 3A                    1177 	ld	a, (hl-)
      000473 2B                    1178 	dec	hl
      000474 32                    1179 	ld	(hl-), a
      000475 3A                    1180 	ld	a, (hl-)
      000476 2B                    1181 	dec	hl
      000477 B6                    1182 	or	a, (hl)
      000478 21 17 03              1183 	ld	hl, #791
      00047B 39                    1184 	add	hl, sp
      00047C 32                    1185 	ld	(hl-), a
      00047D 3A                    1186 	ld	a, (hl-)
      00047E 2B                    1187 	dec	hl
      00047F B6                    1188 	or	a, (hl)
      000480 21 18 03              1189 	ld	hl, #792
      000483 39                    1190 	add	hl, sp
      000484 77                    1191 	ld	(hl), a
                                   1192 ;main.c:115: tile_data |= (i >= 340 ? k_tile_is_south_row_mask : 0x0000);
      000485 21 11 03              1193 	ld	hl, #785
      000488 39                    1194 	add	hl, sp
      000489 2A                    1195 	ld	a, (hl+)
      00048A D6 54                 1196 	sub	a, #0x54
      00048C 7E                    1197 	ld	a, (hl)
      00048D DE 01                 1198 	sbc	a, #0x01
      00048F 38 1C                 1199 	jr	C, 00157$
      000491 FArE6r02              1200 	ld	a, (#_k_tile_is_south_row_mask)
      000494 21 15 03              1201 	ld	hl, #789
      000497 39                    1202 	add	hl, sp
      000498 77                    1203 	ld	(hl), a
      000499 FArE7r02              1204 	ld	a, (#_k_tile_is_south_row_mask + 1)
      00049C 21 16 03              1205 	ld	hl, #790
      00049F 39                    1206 	add	hl, sp
      0004A0 32                    1207 	ld	(hl-), a
      0004A1 3A                    1208 	ld	a, (hl-)
      0004A2 2B                    1209 	dec	hl
      0004A3 77                    1210 	ld	(hl), a
      0004A4 21 16 03              1211 	ld	hl, #790
      0004A7 39                    1212 	add	hl, sp
      0004A8 3A                    1213 	ld	a, (hl-)
      0004A9 2B                    1214 	dec	hl
      0004AA 77                    1215 	ld	(hl), a
      0004AB 18 07                 1216 	jr	00158$
      0004AD                       1217 00157$:
      0004AD AF                    1218 	xor	a, a
      0004AE 21 13 03              1219 	ld	hl, #787
      0004B1 39                    1220 	add	hl, sp
      0004B2 22                    1221 	ld	(hl+), a
      0004B3 77                    1222 	ld	(hl), a
      0004B4                       1223 00158$:
      0004B4 21 17 03              1224 	ld	hl, #791
      0004B7 39                    1225 	add	hl, sp
      0004B8 3A                    1226 	ld	a, (hl-)
      0004B9 2B                    1227 	dec	hl
      0004BA 77                    1228 	ld	(hl), a
      0004BB 21 18 03              1229 	ld	hl, #792
      0004BE 39                    1230 	add	hl, sp
      0004BF 3A                    1231 	ld	a, (hl-)
      0004C0 2B                    1232 	dec	hl
      0004C1 32                    1233 	ld	(hl-), a
      0004C2 3A                    1234 	ld	a, (hl-)
      0004C3 2B                    1235 	dec	hl
      0004C4 B6                    1236 	or	a, (hl)
      0004C5 21 17 03              1237 	ld	hl, #791
      0004C8 39                    1238 	add	hl, sp
      0004C9 32                    1239 	ld	(hl-), a
      0004CA 3A                    1240 	ld	a, (hl-)
      0004CB 2B                    1241 	dec	hl
      0004CC B6                    1242 	or	a, (hl)
      0004CD 21 18 03              1243 	ld	hl, #792
      0004D0 39                    1244 	add	hl, sp
      0004D1 77                    1245 	ld	(hl), a
                                   1246 ;main.c:116: tile_data |= (i % 20 == 0 ? k_tile_is_west_column_mask : 0x0000);
      0004D2 11 14 00              1247 	ld	de, #0x0014
      0004D5 D5                    1248 	push	de
      0004D6 21 13 03              1249 	ld	hl, #787
      0004D9 39                    1250 	add	hl, sp
      0004DA 2A                    1251 	ld	a, (hl+)
      0004DB 5F                    1252 	ld	e, a
      0004DC 56                    1253 	ld	d, (hl)
      0004DD D5                    1254 	push	de
      0004DE CDr00r00              1255 	call	__moduint
      0004E1 E8 04                 1256 	add	sp, #4
      0004E3 7A                    1257 	ld	a, d
      0004E4 B3                    1258 	or	a, e
      0004E5 20 08                 1259 	jr	NZ, 00159$
      0004E7 21rE8r02              1260 	ld	hl, #_k_tile_is_west_column_mask
      0004EA 2A                    1261 	ld	a, (hl+)
      0004EB 4F                    1262 	ld	c, a
      0004EC 46                    1263 	ld	b, (hl)
      0004ED 18 03                 1264 	jr	00160$
      0004EF                       1265 00159$:
      0004EF 01 00 00              1266 	ld	bc, #0x0000
      0004F2                       1267 00160$:
      0004F2 21 17 03              1268 	ld	hl, #791
      0004F5 39                    1269 	add	hl, sp
      0004F6 2A                    1270 	ld	a, (hl+)
      0004F7 B1                    1271 	or	a, c
      0004F8 4F                    1272 	ld	c, a
      0004F9 3A                    1273 	ld	a, (hl-)
      0004FA B0                    1274 	or	a, b
      0004FB 71                    1275 	ld	(hl), c
      0004FC 23                    1276 	inc	hl
      0004FD 77                    1277 	ld	(hl), a
                                   1278 ;main.c:117: tile_data |= (i % 20 == 19 ? k_tile_is_east_column_mask : 0x0000);
      0004FE 7B                    1279 	ld	a, e
      0004FF D6 13                 1280 	sub	a, #0x13
      000501 B2                    1281 	or	a, d
      000502 20 1C                 1282 	jr	NZ, 00161$
      000504 FArEAr02              1283 	ld	a, (#_k_tile_is_east_column_mask)
      000507 21 15 03              1284 	ld	hl, #789
      00050A 39                    1285 	add	hl, sp
      00050B 77                    1286 	ld	(hl), a
      00050C FArEBr02              1287 	ld	a, (#_k_tile_is_east_column_mask + 1)
      00050F 21 16 03              1288 	ld	hl, #790
      000512 39                    1289 	add	hl, sp
      000513 32                    1290 	ld	(hl-), a
      000514 3A                    1291 	ld	a, (hl-)
      000515 2B                    1292 	dec	hl
      000516 77                    1293 	ld	(hl), a
      000517 21 16 03              1294 	ld	hl, #790
      00051A 39                    1295 	add	hl, sp
      00051B 3A                    1296 	ld	a, (hl-)
      00051C 2B                    1297 	dec	hl
      00051D 77                    1298 	ld	(hl), a
      00051E 18 07                 1299 	jr	00162$
      000520                       1300 00161$:
      000520 AF                    1301 	xor	a, a
      000521 21 13 03              1302 	ld	hl, #787
      000524 39                    1303 	add	hl, sp
      000525 22                    1304 	ld	(hl+), a
      000526 77                    1305 	ld	(hl), a
      000527                       1306 00162$:
      000527 21 17 03              1307 	ld	hl, #791
      00052A 39                    1308 	add	hl, sp
      00052B 3A                    1309 	ld	a, (hl-)
      00052C 2B                    1310 	dec	hl
      00052D 77                    1311 	ld	(hl), a
      00052E 21 18 03              1312 	ld	hl, #792
      000531 39                    1313 	add	hl, sp
      000532 3A                    1314 	ld	a, (hl-)
      000533 2B                    1315 	dec	hl
      000534 32                    1316 	ld	(hl-), a
      000535 3A                    1317 	ld	a, (hl-)
      000536 2B                    1318 	dec	hl
      000537 B6                    1319 	or	a, (hl)
      000538 21 17 03              1320 	ld	hl, #791
      00053B 39                    1321 	add	hl, sp
      00053C 32                    1322 	ld	(hl-), a
      00053D 3A                    1323 	ld	a, (hl-)
      00053E 2B                    1324 	dec	hl
      00053F B6                    1325 	or	a, (hl)
      000540 21 18 03              1326 	ld	hl, #792
      000543 39                    1327 	add	hl, sp
                                   1328 ;main.c:118: board[i] = tile_data;
      000544 22                    1329 	ld	(hl+), a
      000545 23                    1330 	inc	hl
      000546 7E                    1331 	ld	a, (hl)
      000547 21 15 03              1332 	ld	hl, #789
      00054A 39                    1333 	add	hl, sp
      00054B 77                    1334 	ld	(hl), a
      00054C 21 1B 03              1335 	ld	hl, #795
      00054F 39                    1336 	add	hl, sp
      000550 7E                    1337 	ld	a, (hl)
      000551 21 16 03              1338 	ld	hl, #790
      000554 39                    1339 	add	hl, sp
      000555 32                    1340 	ld	(hl-), a
      000556 CB 26                 1341 	sla	(hl)
      000558 23                    1342 	inc	hl
      000559 CB 16                 1343 	rl	(hl)
      00055B 21 02 03              1344 	ld	hl,#0x302
      00055E 39                    1345 	add	hl,sp
      00055F 2A                    1346 	ld	a, (hl+)
      000560 5F                    1347 	ld	e, a
      000561 56                    1348 	ld	d, (hl)
      000562 21 15 03              1349 	ld	hl, #789
      000565 39                    1350 	add	hl, sp
      000566 2A                    1351 	ld	a,	(hl+)
      000567 66                    1352 	ld	h, (hl)
      000568 6F                    1353 	ld	l, a
      000569 19                    1354 	add	hl, de
      00056A 4D                    1355 	ld	c, l
      00056B 44                    1356 	ld	b, h
      00056C 21 17 03              1357 	ld	hl, #791
      00056F 39                    1358 	add	hl, sp
      000570 2A                    1359 	ld	a, (hl+)
      000571 02                    1360 	ld	(bc), a
      000572 03                    1361 	inc	bc
                                   1362 ;main.c:111: for (uint16_t i = 0; i < 360; ++i)
      000573 2A                    1363 	ld	a, (hl+)
      000574 23                    1364 	inc	hl
      000575 02                    1365 	ld	(bc), a
      000576 34                    1366 	inc	(hl)
      000577 C2r14r04              1367 	jp	NZ,00145$
      00057A 23                    1368 	inc	hl
      00057B 34                    1369 	inc	(hl)
      00057C C3r14r04              1370 	jp	00145$
      00057F                       1371 00102$:
                                   1372 ;main.c:122: set_sprite_data(0, 3, k_sprites);
      00057F 11r00r00              1373 	ld	de, #_k_sprites
      000582 D5                    1374 	push	de
      000583 21 00 03              1375 	ld	hl, #0x300
      000586 E5                    1376 	push	hl
      000587 CDr00r00              1377 	call	_set_sprite_data
      00058A E8 04                 1378 	add	sp, #4
                                   1379 ;main.c:123: set_bkg_data(0, 2, k_background_tiles);
      00058C 11r51r02              1380 	ld	de, #_k_background_tiles
      00058F D5                    1381 	push	de
      000590 21 00 02              1382 	ld	hl, #0x200
      000593 E5                    1383 	push	hl
      000594 CDr00r00              1384 	call	_set_bkg_data
      000597 E8 04                 1385 	add	sp, #4
                                   1386 ;main.c:126: set_bkg_tiles(0, 0, 20, 18, k_background_map);
      000599 11rE9r00              1387 	ld	de, #_k_background_map
      00059C D5                    1388 	push	de
      00059D 21 14 12              1389 	ld	hl, #0x1214
      0005A0 E5                    1390 	push	hl
      0005A1 AF                    1391 	xor	a, a
      0005A2 0F                    1392 	rrca
      0005A3 F5                    1393 	push	af
      0005A4 CDr00r00              1394 	call	_set_bkg_tiles
      0005A7 E8 06                 1395 	add	sp, #6
                                   1396 ;main.c:129: update_cursor_sprite(k_cursor_empty_tile_index);
      0005A9 FArF0r02              1397 	ld	a, (#_k_cursor_empty_tile_index)
      0005AC F5                    1398 	push	af
      0005AD 33                    1399 	inc	sp
      0005AE CDrCCr02              1400 	call	_update_cursor_sprite
      0005B1 33                    1401 	inc	sp
                                   1402 ;main.c:130: update_cursor_position(cursor_tile_x, cursor_tile_y);
      0005B2 21 0A 09              1403 	ld	hl, #0x90a
      0005B5 E5                    1404 	push	hl
      0005B6 CDrF3r02              1405 	call	_update_cursor_position
      0005B9 E1                    1406 	pop	hl
                                   1407 ;main.c:132: SHOW_BKG;
      0005BA F0r00                 1408 	ldh	a, (_LCDC_REG + 0)
      0005BC F6 01                 1409 	or	a, #0x01
      0005BE E0r00                 1410 	ldh	(_LCDC_REG + 0), a
                                   1411 ;main.c:133: SHOW_SPRITES;
      0005C0 F0r00                 1412 	ldh	a, (_LCDC_REG + 0)
      0005C2 F6 02                 1413 	or	a, #0x02
      0005C4 E0r00                 1414 	ldh	(_LCDC_REG + 0), a
                                   1415 ;main.c:134: DISPLAY_ON;
      0005C6 F0r00                 1416 	ldh	a, (_LCDC_REG + 0)
      0005C8 F6 80                 1417 	or	a, #0x80
      0005CA E0r00                 1418 	ldh	(_LCDC_REG + 0), a
                                   1419 ;main.c:136: while (1)
      0005CC                       1420 00139$:
                                   1421 ;main.c:139: update_input_state(&input_state, joypad());
      0005CC CDr00r00              1422 	call	_joypad
      0005CF 7B                    1423 	ld	a, e
      0005D0 21 FC 02              1424 	ld	hl, #764
      0005D3 39                    1425 	add	hl, sp
      0005D4 4E                    1426 	ld	c, (hl)
      0005D5 23                    1427 	inc	hl
      0005D6 46                    1428 	ld	b, (hl)
      0005D7 F5                    1429 	push	af
      0005D8 33                    1430 	inc	sp
      0005D9 C5                    1431 	push	bc
      0005DA CDr00r00              1432 	call	_update_input_state
      0005DD E8 03                 1433 	add	sp, #3
                                   1434 ;main.c:142: if (was_input_released(&input_state, btn_start))
      0005DF 21 FC 02              1435 	ld	hl, #764
      0005E2 39                    1436 	add	hl, sp
      0005E3 2A                    1437 	ld	a, (hl+)
      0005E4 4F                    1438 	ld	c, a
      0005E5 46                    1439 	ld	b, (hl)
      0005E6 3E 06                 1440 	ld	a, #0x06
      0005E8 F5                    1441 	push	af
      0005E9 33                    1442 	inc	sp
      0005EA C5                    1443 	push	bc
      0005EB CDr8Fr02              1444 	call	_was_input_released
      0005EE E8 03                 1445 	add	sp, #3
      0005F0 7B                    1446 	ld	a, e
      0005F1 B7                    1447 	or	a, a
      0005F2 28 1E                 1448 	jr	Z, 00104$
                                   1449 ;main.c:144: execution_state ^= k_execution_state_active_mask;
      0005F4 21rDFr02              1450 	ld	hl, #_k_execution_state_active_mask
      0005F7 4E                    1451 	ld	c, (hl)
      0005F8 21 19 03              1452 	ld	hl, #793
      0005FB 39                    1453 	add	hl, sp
      0005FC 7E                    1454 	ld	a, (hl)
      0005FD A9                    1455 	xor	a, c
      0005FE 77                    1456 	ld	(hl), a
                                   1457 ;main.c:147: (execution_state & k_execution_state_active_mask) == k_execution_state_active_mask
      0005FF 7E                    1458 	ld	a, (hl)
      000600 A1                    1459 	and	a, c
      000601 91                    1460 	sub	a, c
      000602 20 05                 1461 	jr	NZ, 00163$
                                   1462 ;main.c:148: ? k_empty_tile_index
      000604 FArEEr02              1463 	ld	a, (#_k_empty_tile_index)
      000607 18 03                 1464 	jr	00164$
      000609                       1465 00163$:
                                   1466 ;main.c:149: : k_cursor_empty_tile_index);
      000609 FArF0r02              1467 	ld	a, (#_k_cursor_empty_tile_index)
      00060C                       1468 00164$:
      00060C F5                    1469 	push	af
      00060D 33                    1470 	inc	sp
      00060E CDrCCr02              1471 	call	_update_cursor_sprite
      000611 33                    1472 	inc	sp
      000612                       1473 00104$:
                                   1474 ;main.c:153: if ((execution_state & k_execution_state_active_mask) == k_execution_state_active_mask)
      000612 21rDFr02              1475 	ld	hl, #_k_execution_state_active_mask
      000615 4E                    1476 	ld	c, (hl)
      000616 21 19 03              1477 	ld	hl, #793
      000619 39                    1478 	add	hl, sp
      00061A 7E                    1479 	ld	a, (hl)
      00061B A1                    1480 	and	a, c
      00061C 91                    1481 	sub	a, c
      00061D C2r19r0C              1482 	jp	NZ,00136$
                                   1483 ;main.c:156: for (uint16_t i = 0; i < 360; ++i)
      000620 21 02 03              1484 	ld	hl, #770
      000623 39                    1485 	add	hl, sp
      000624 7E                    1486 	ld	a, (hl)
      000625 21 17 03              1487 	ld	hl, #791
      000628 39                    1488 	add	hl, sp
      000629 77                    1489 	ld	(hl), a
      00062A 21 03 03              1490 	ld	hl, #771
      00062D 39                    1491 	add	hl, sp
      00062E 7E                    1492 	ld	a, (hl)
      00062F 21 18 03              1493 	ld	hl, #792
      000632 39                    1494 	add	hl, sp
      000633 22                    1495 	ld	(hl+), a
      000634 23                    1496 	inc	hl
      000635 AF                    1497 	xor	a, a
      000636 22                    1498 	ld	(hl+), a
      000637 77                    1499 	ld	(hl), a
      000638                       1500 00148$:
      000638 21 1A 03              1501 	ld	hl, #794
      00063B 39                    1502 	add	hl, sp
      00063C 2A                    1503 	ld	a, (hl+)
      00063D 4F                    1504 	ld	c, a
      00063E 46                    1505 	ld	b, (hl)
      00063F 79                    1506 	ld	a, c
      000640 D6 68                 1507 	sub	a, #0x68
      000642 78                    1508 	ld	a, b
      000643 DE 01                 1509 	sbc	a, #0x01
      000645 30 37                 1510 	jr	NC, 00105$
                                   1511 ;main.c:158: uint8_t tile_data = board[i];
      000647 2B                    1512 	dec	hl
      000648 2A                    1513 	ld	a, (hl+)
      000649 4F                    1514 	ld	c, a
      00064A 46                    1515 	ld	b, (hl)
      00064B CB 21                 1516 	sla	c
      00064D CB 10                 1517 	rl	b
      00064F 21 17 03              1518 	ld	hl, #791
      000652 39                    1519 	add	hl, sp
      000653 2A                    1520 	ld	a,	(hl+)
      000654 66                    1521 	ld	h, (hl)
      000655 6F                    1522 	ld	l, a
      000656 09                    1523 	add	hl, bc
      000657 4D                    1524 	ld	c, l
      000658 44                    1525 	ld	b, h
      000659 0A                    1526 	ld	a, (bc)
      00065A 5F                    1527 	ld	e, a
                                   1528 ;main.c:161: tile_data &= ~k_tile_was_alive_mask;
      00065B 21rE2r02              1529 	ld	hl, #_k_tile_was_alive_mask
      00065E 2A                    1530 	ld	a, (hl+)
      00065F 56                    1531 	ld	d, (hl)
      000660 2F                    1532 	cpl
      000661 A3                    1533 	and	a, e
      000662 5F                    1534 	ld	e, a
                                   1535 ;main.c:163: tile_data |= ((tile_data & k_tile_is_alive_mask) << tile_was_alive);
      000663 21rE0r02              1536 	ld	hl, #_k_tile_is_alive_mask
      000666 2A                    1537 	ld	a, (hl+)
      000667 56                    1538 	ld	d, (hl)
      000668 A3                    1539 	and	a, e
      000669 87                    1540 	add	a, a
      00066A B3                    1541 	or	a, e
                                   1542 ;main.c:165: board[i] = tile_data;
      00066B 5F                    1543 	ld	e, a
      00066C 16 00                 1544 	ld	d, #0x00
      00066E 7B                    1545 	ld	a, e
      00066F 02                    1546 	ld	(bc), a
      000670 03                    1547 	inc	bc
      000671 7A                    1548 	ld	a, d
      000672 02                    1549 	ld	(bc), a
                                   1550 ;main.c:156: for (uint16_t i = 0; i < 360; ++i)
      000673 21 1A 03              1551 	ld	hl, #794
      000676 39                    1552 	add	hl, sp
      000677 34                    1553 	inc	(hl)
      000678 20 BE                 1554 	jr	NZ, 00148$
      00067A 23                    1555 	inc	hl
      00067B 34                    1556 	inc	(hl)
      00067C 18 BA                 1557 	jr	00148$
      00067E                       1558 00105$:
                                   1559 ;main.c:169: for (uint16_t i = 0; i < 360; ++i)
      00067E 21 02 03              1560 	ld	hl, #770
      000681 39                    1561 	add	hl, sp
      000682 2A                    1562 	ld	a, (hl+)
      000683 23                    1563 	inc	hl
      000684 32                    1564 	ld	(hl-), a
      000685 2A                    1565 	ld	a, (hl+)
      000686 23                    1566 	inc	hl
      000687 77                    1567 	ld	(hl), a
      000688 21 00 03              1568 	ld	hl, #768
      00068B 39                    1569 	add	hl, sp
      00068C 7E                    1570 	ld	a, (hl)
      00068D 21 06 03              1571 	ld	hl, #774
      000690 39                    1572 	add	hl, sp
      000691 77                    1573 	ld	(hl), a
      000692 21 01 03              1574 	ld	hl, #769
      000695 39                    1575 	add	hl, sp
      000696 7E                    1576 	ld	a, (hl)
      000697 21 07 03              1577 	ld	hl, #775
      00069A 39                    1578 	add	hl, sp
      00069B 77                    1579 	ld	(hl), a
      00069C 21 1C 03              1580 	ld	hl, #796
      00069F 39                    1581 	add	hl, sp
      0006A0 3A                    1582 	ld	a, (hl-)
      0006A1 2B                    1583 	dec	hl
      0006A2 22                    1584 	ld	(hl+), a
      0006A3 AF                    1585 	xor	a, a
      0006A4 22                    1586 	ld	(hl+), a
      0006A5 77                    1587 	ld	(hl), a
      0006A6                       1588 00151$:
      0006A6 21 1B 03              1589 	ld	hl, #795
      0006A9 39                    1590 	add	hl, sp
      0006AA 7E                    1591 	ld	a, (hl)
      0006AB 21 08 03              1592 	ld	hl, #776
      0006AE 39                    1593 	add	hl, sp
      0006AF 77                    1594 	ld	(hl), a
      0006B0 21 1C 03              1595 	ld	hl, #796
      0006B3 39                    1596 	add	hl, sp
      0006B4 7E                    1597 	ld	a, (hl)
      0006B5 21 09 03              1598 	ld	hl, #777
      0006B8 39                    1599 	add	hl, sp
      0006B9 32                    1600 	ld	(hl-), a
      0006BA 2A                    1601 	ld	a, (hl+)
      0006BB D6 68                 1602 	sub	a, #0x68
      0006BD 7E                    1603 	ld	a, (hl)
      0006BE DE 01                 1604 	sbc	a, #0x01
      0006C0 D2rFCr0B              1605 	jp	NC, 00263$
                                   1606 ;main.c:171: uint16_t tile_data = board[i];
      0006C3 21 1B 03              1607 	ld	hl, #795
      0006C6 39                    1608 	add	hl, sp
      0006C7 2A                    1609 	ld	a, (hl+)
      0006C8 56                    1610 	ld	d, (hl)
      0006C9 87                    1611 	add	a, a
      0006CA CB 12                 1612 	rl	d
      0006CC 5F                    1613 	ld	e, a
      0006CD 21 04 03              1614 	ld	hl, #772
      0006D0 39                    1615 	add	hl, sp
      0006D1 2A                    1616 	ld	a,	(hl+)
      0006D2 66                    1617 	ld	h, (hl)
      0006D3 6F                    1618 	ld	l, a
      0006D4 19                    1619 	add	hl, de
      0006D5 E5                    1620 	push	hl
      0006D6 7D                    1621 	ld	a, l
      0006D7 21 0C 03              1622 	ld	hl, #780
      0006DA 39                    1623 	add	hl, sp
      0006DB 77                    1624 	ld	(hl), a
      0006DC E1                    1625 	pop	hl
      0006DD 7C                    1626 	ld	a, h
      0006DE 21 0B 03              1627 	ld	hl, #779
      0006E1 39                    1628 	add	hl, sp
      0006E2 32                    1629 	ld	(hl-), a
      0006E3 2A                    1630 	ld	a, (hl+)
      0006E4 5F                    1631 	ld	e, a
      0006E5 2A                    1632 	ld	a, (hl+)
      0006E6 57                    1633 	ld	d, a
      0006E7 1A                    1634 	ld	a, (de)
      0006E8 22                    1635 	ld	(hl+), a
      0006E9 13                    1636 	inc	de
      0006EA 1A                    1637 	ld	a, (de)
      0006EB 77                    1638 	ld	(hl), a
                                   1639 ;main.c:172: uint8_t neighbour_count = 0;
      0006EC 21 18 03              1640 	ld	hl, #792
      0006EF 39                    1641 	add	hl, sp
      0006F0 36 00                 1642 	ld	(hl), #0x00
                                   1643 ;main.c:174: uint16_t is_not_north_row = (tile_data & s_tile_is_north_row_mask) == 0x00;
      0006F2 21rE4r02              1644 	ld	hl, #_s_tile_is_north_row_mask
      0006F5 2A                    1645 	ld	a, (hl+)
      0006F6 46                    1646 	ld	b, (hl)
      0006F7 21 0C 03              1647 	ld	hl, #780
      0006FA 39                    1648 	add	hl, sp
      0006FB A6                    1649 	and	a, (hl)
      0006FC 23                    1650 	inc	hl
      0006FD 4F                    1651 	ld	c, a
      0006FE 78                    1652 	ld	a, b
      0006FF A6                    1653 	and	a, (hl)
      000700 47                    1654 	ld	b, a
      000701 79                    1655 	ld	a, c
      000702 B7                    1656 	or	a, a
      000703 B0                    1657 	or	a, b
      000704 3E 01                 1658 	ld	a, #0x01
      000706 28 01                 1659 	jr	Z, 00511$
      000708 AF                    1660 	xor	a, a
      000709                       1661 00511$:
      000709 21 0E 03              1662 	ld	hl, #782
      00070C 39                    1663 	add	hl, sp
      00070D 22                    1664 	ld	(hl+), a
      00070E 36 00                 1665 	ld	(hl), #0x00
                                   1666 ;main.c:175: uint16_t is_not_east_col = (tile_data & k_tile_is_east_column_mask) == 0x00;
      000710 21rEAr02              1667 	ld	hl, #_k_tile_is_east_column_mask
      000713 2A                    1668 	ld	a, (hl+)
      000714 46                    1669 	ld	b, (hl)
      000715 21 0C 03              1670 	ld	hl, #780
      000718 39                    1671 	add	hl, sp
      000719 A6                    1672 	and	a, (hl)
      00071A 23                    1673 	inc	hl
      00071B 4F                    1674 	ld	c, a
      00071C 78                    1675 	ld	a, b
      00071D A6                    1676 	and	a, (hl)
      00071E 47                    1677 	ld	b, a
      00071F 79                    1678 	ld	a, c
      000720 B7                    1679 	or	a, a
      000721 B0                    1680 	or	a, b
      000722 3E 01                 1681 	ld	a, #0x01
      000724 28 01                 1682 	jr	Z, 00513$
      000726 AF                    1683 	xor	a, a
      000727                       1684 00513$:
      000727 21 16 03              1685 	ld	hl, #790
      00072A 39                    1686 	add	hl, sp
      00072B 22                    1687 	ld	(hl+), a
      00072C 36 00                 1688 	ld	(hl), #0x00
                                   1689 ;main.c:176: uint16_t is_not_south_row = (tile_data & k_tile_is_south_row_mask) == 0x00;
      00072E 21rE6r02              1690 	ld	hl, #_k_tile_is_south_row_mask
      000731 2A                    1691 	ld	a, (hl+)
      000732 46                    1692 	ld	b, (hl)
      000733 21 0C 03              1693 	ld	hl, #780
      000736 39                    1694 	add	hl, sp
      000737 A6                    1695 	and	a, (hl)
      000738 23                    1696 	inc	hl
      000739 4F                    1697 	ld	c, a
      00073A 78                    1698 	ld	a, b
      00073B A6                    1699 	and	a, (hl)
      00073C 47                    1700 	ld	b, a
      00073D 79                    1701 	ld	a, c
      00073E B7                    1702 	or	a, a
      00073F B0                    1703 	or	a, b
      000740 3E 01                 1704 	ld	a, #0x01
      000742 28 01                 1705 	jr	Z, 00515$
      000744 AF                    1706 	xor	a, a
      000745                       1707 00515$:
      000745 21 10 03              1708 	ld	hl, #784
      000748 39                    1709 	add	hl, sp
      000749 22                    1710 	ld	(hl+), a
      00074A 36 00                 1711 	ld	(hl), #0x00
                                   1712 ;main.c:177: uint16_t is_not_west_col = (tile_data & k_tile_is_west_column_mask) == 0x00;
      00074C 21rE8r02              1713 	ld	hl, #_k_tile_is_west_column_mask
      00074F 2A                    1714 	ld	a, (hl+)
      000750 46                    1715 	ld	b, (hl)
      000751 21 0C 03              1716 	ld	hl, #780
      000754 39                    1717 	add	hl, sp
      000755 A6                    1718 	and	a, (hl)
      000756 23                    1719 	inc	hl
      000757 4F                    1720 	ld	c, a
      000758 78                    1721 	ld	a, b
      000759 A6                    1722 	and	a, (hl)
      00075A 47                    1723 	ld	b, a
      00075B 79                    1724 	ld	a, c
      00075C B7                    1725 	or	a, a
      00075D B0                    1726 	or	a, b
      00075E 3E 01                 1727 	ld	a, #0x01
      000760 28 01                 1728 	jr	Z, 00517$
      000762 AF                    1729 	xor	a, a
      000763                       1730 00517$:
      000763 21 12 03              1731 	ld	hl, #786
      000766 39                    1732 	add	hl, sp
      000767 22                    1733 	ld	(hl+), a
      000768 36 00                 1734 	ld	(hl), #0x00
                                   1735 ;main.c:161: tile_data &= ~k_tile_was_alive_mask;
      00076A FArE2r02              1736 	ld	a, (#_k_tile_was_alive_mask)
      00076D 21 14 03              1737 	ld	hl, #788
      000770 39                    1738 	add	hl, sp
      000771 77                    1739 	ld	(hl), a
      000772 FArE3r02              1740 	ld	a, (#_k_tile_was_alive_mask + 1)
      000775 21 15 03              1741 	ld	hl, #789
      000778 39                    1742 	add	hl, sp
      000779 77                    1743 	ld	(hl), a
                                   1744 ;main.c:180: neighbour_count += is_not_north_row
      00077A 21 0F 03              1745 	ld	hl, #783
      00077D 39                    1746 	add	hl, sp
      00077E 3A                    1747 	ld	a, (hl-)
      00077F B6                    1748 	or	a, (hl)
      000780 28 2D                 1749 	jr	Z, 00165$
                                   1750 ;main.c:181: && ((board[i - 20] & k_tile_was_alive_mask) != 0x00);
      000782 21 08 03              1751 	ld	hl,#0x308
      000785 39                    1752 	add	hl,sp
      000786 2A                    1753 	ld	a, (hl+)
      000787 5F                    1754 	ld	e, a
      000788 56                    1755 	ld	d, (hl)
      000789 21 14 00              1756 	ld	hl, #0x0014
      00078C 7B                    1757 	ld	a, e
      00078D 95                    1758 	sub	a, l
      00078E 5F                    1759 	ld	e, a
      00078F 7A                    1760 	ld	a, d
      000790 9C                    1761 	sbc	a, h
      000791 4B                    1762 	ld	c, e
      000792 47                    1763 	ld	b, a
      000793 CB 21                 1764 	sla	c
      000795 CB 10                 1765 	rl	b
      000797 21 04 03              1766 	ld	hl, #772
      00079A 39                    1767 	add	hl, sp
      00079B 2A                    1768 	ld	a,	(hl+)
      00079C 66                    1769 	ld	h, (hl)
      00079D 6F                    1770 	ld	l, a
      00079E 09                    1771 	add	hl, bc
      00079F 2A                    1772 	ld	a, (hl+)
      0007A0 4F                    1773 	ld	c, a
      0007A1 46                    1774 	ld	b, (hl)
      0007A2 79                    1775 	ld	a, c
      0007A3 21 14 03              1776 	ld	hl, #788
      0007A6 39                    1777 	add	hl, sp
      0007A7 A6                    1778 	and	a, (hl)
      0007A8 23                    1779 	inc	hl
      0007A9 4F                    1780 	ld	c, a
      0007AA 78                    1781 	ld	a, b
      0007AB A6                    1782 	and	a, (hl)
      0007AC B1                    1783 	or	a, c
      0007AD 20 03                 1784 	jr	NZ, 00166$
      0007AF                       1785 00165$:
      0007AF AF                    1786 	xor	a, a
      0007B0 18 02                 1787 	jr	00167$
      0007B2                       1788 00166$:
      0007B2 3E 01                 1789 	ld	a, #0x01
      0007B4                       1790 00167$:
      0007B4 21 18 03              1791 	ld	hl, #792
      0007B7 39                    1792 	add	hl, sp
      0007B8 4E                    1793 	ld	c, (hl)
      0007B9 81                    1794 	add	a, c
      0007BA 4F                    1795 	ld	c, a
                                   1796 ;main.c:184: neighbour_count += is_not_north_row	&& is_not_east_col
      0007BB 21 0F 03              1797 	ld	hl, #783
      0007BE 39                    1798 	add	hl, sp
      0007BF 3A                    1799 	ld	a, (hl-)
      0007C0 B6                    1800 	or	a, (hl)
      0007C1 28 37                 1801 	jr	Z, 00168$
      0007C3 21 17 03              1802 	ld	hl, #791
      0007C6 39                    1803 	add	hl, sp
      0007C7 3A                    1804 	ld	a, (hl-)
      0007C8 B6                    1805 	or	a, (hl)
      0007C9 28 2F                 1806 	jr	Z, 00168$
                                   1807 ;main.c:185: && ((board[i - 19] & k_tile_was_alive_mask) != 0x00);
      0007CB 21 08 03              1808 	ld	hl,#0x308
      0007CE 39                    1809 	add	hl,sp
      0007CF 2A                    1810 	ld	a, (hl+)
      0007D0 5F                    1811 	ld	e, a
      0007D1 56                    1812 	ld	d, (hl)
      0007D2 21 13 00              1813 	ld	hl, #0x0013
      0007D5 7B                    1814 	ld	a, e
      0007D6 95                    1815 	sub	a, l
      0007D7 5F                    1816 	ld	e, a
      0007D8 7A                    1817 	ld	a, d
      0007D9 9C                    1818 	sbc	a, h
      0007DA 43                    1819 	ld	b, e
      0007DB 57                    1820 	ld	d, a
      0007DC 78                    1821 	ld	a, b
      0007DD 87                    1822 	add	a, a
      0007DE CB 12                 1823 	rl	d
      0007E0 5F                    1824 	ld	e, a
      0007E1 21 04 03              1825 	ld	hl, #772
      0007E4 39                    1826 	add	hl, sp
      0007E5 2A                    1827 	ld	a,	(hl+)
      0007E6 66                    1828 	ld	h, (hl)
      0007E7 6F                    1829 	ld	l, a
      0007E8 19                    1830 	add	hl, de
      0007E9 2A                    1831 	ld	a, (hl+)
      0007EA 47                    1832 	ld	b, a
      0007EB 7E                    1833 	ld	a, (hl)
      0007EC F5                    1834 	push	af
      0007ED 78                    1835 	ld	a, b
      0007EE 21 16 03              1836 	ld	hl, #790
      0007F1 39                    1837 	add	hl, sp
      0007F2 A6                    1838 	and	a, (hl)
      0007F3 23                    1839 	inc	hl
      0007F4 47                    1840 	ld	b, a
      0007F5 F1                    1841 	pop	af
      0007F6 A6                    1842 	and	a, (hl)
      0007F7 B0                    1843 	or	a, b
      0007F8 20 03                 1844 	jr	NZ, 00169$
      0007FA                       1845 00168$:
      0007FA AF                    1846 	xor	a, a
      0007FB 18 02                 1847 	jr	00170$
      0007FD                       1848 00169$:
      0007FD 3E 01                 1849 	ld	a, #0x01
      0007FF                       1850 00170$:
      0007FF 81                    1851 	add	a, c
      000800 21 18 03              1852 	ld	hl, #792
      000803 39                    1853 	add	hl, sp
                                   1854 ;main.c:188: neighbour_count += is_not_east_col
      000804 32                    1855 	ld	(hl-), a
      000805 3A                    1856 	ld	a, (hl-)
      000806 B6                    1857 	or	a, (hl)
      000807 28 24                 1858 	jr	Z, 00174$
                                   1859 ;main.c:189: && ((board[i + 1] & k_tile_was_alive_mask) != 0x00);
      000809 21 08 03              1860 	ld	hl, #776
      00080C 39                    1861 	add	hl, sp
      00080D 2A                    1862 	ld	a, (hl+)
      00080E 4F                    1863 	ld	c, a
      00080F 46                    1864 	ld	b, (hl)
      000810 03                    1865 	inc	bc
      000811 CB 21                 1866 	sla	c
      000813 CB 10                 1867 	rl	b
      000815 21 04 03              1868 	ld	hl, #772
      000818 39                    1869 	add	hl, sp
      000819 2A                    1870 	ld	a,	(hl+)
      00081A 66                    1871 	ld	h, (hl)
      00081B 6F                    1872 	ld	l, a
      00081C 09                    1873 	add	hl, bc
      00081D 2A                    1874 	ld	a, (hl+)
      00081E 4F                    1875 	ld	c, a
      00081F 46                    1876 	ld	b, (hl)
      000820 79                    1877 	ld	a, c
      000821 21 14 03              1878 	ld	hl, #788
      000824 39                    1879 	add	hl, sp
      000825 A6                    1880 	and	a, (hl)
      000826 23                    1881 	inc	hl
      000827 4F                    1882 	ld	c, a
      000828 78                    1883 	ld	a, b
      000829 A6                    1884 	and	a, (hl)
      00082A B1                    1885 	or	a, c
      00082B 20 03                 1886 	jr	NZ, 00175$
      00082D                       1887 00174$:
      00082D AF                    1888 	xor	a, a
      00082E 18 02                 1889 	jr	00176$
      000830                       1890 00175$:
      000830 3E 01                 1891 	ld	a, #0x01
      000832                       1892 00176$:
      000832 21 18 03              1893 	ld	hl, #792
      000835 39                    1894 	add	hl, sp
      000836 4E                    1895 	ld	c, (hl)
      000837 81                    1896 	add	a, c
      000838 4F                    1897 	ld	c, a
                                   1898 ;main.c:192: neighbour_count += is_not_south_row && is_not_east_col
      000839 21 11 03              1899 	ld	hl, #785
      00083C 39                    1900 	add	hl, sp
      00083D 3A                    1901 	ld	a, (hl-)
      00083E B6                    1902 	or	a, (hl)
      00083F 28 32                 1903 	jr	Z, 00177$
      000841 21 17 03              1904 	ld	hl, #791
      000844 39                    1905 	add	hl, sp
      000845 3A                    1906 	ld	a, (hl-)
      000846 B6                    1907 	or	a, (hl)
      000847 28 2A                 1908 	jr	Z, 00177$
                                   1909 ;main.c:193: && ((board[i + 21] & k_tile_was_alive_mask) != 0x00);
      000849 21 08 03              1910 	ld	hl,#0x308
      00084C 39                    1911 	add	hl,sp
      00084D 2A                    1912 	ld	a, (hl+)
      00084E 5F                    1913 	ld	e, a
      00084F 56                    1914 	ld	d, (hl)
      000850 21 15 00              1915 	ld	hl, #0x0015
      000853 19                    1916 	add	hl, de
      000854 5D                    1917 	ld	e, l
      000855 54                    1918 	ld	d, h
      000856 CB 23                 1919 	sla	e
      000858 CB 12                 1920 	rl	d
      00085A 21 04 03              1921 	ld	hl, #772
      00085D 39                    1922 	add	hl, sp
      00085E 2A                    1923 	ld	a,	(hl+)
      00085F 66                    1924 	ld	h, (hl)
      000860 6F                    1925 	ld	l, a
      000861 19                    1926 	add	hl, de
      000862 2A                    1927 	ld	a, (hl+)
      000863 47                    1928 	ld	b, a
      000864 7E                    1929 	ld	a, (hl)
      000865 F5                    1930 	push	af
      000866 78                    1931 	ld	a, b
      000867 21 16 03              1932 	ld	hl, #790
      00086A 39                    1933 	add	hl, sp
      00086B A6                    1934 	and	a, (hl)
      00086C 23                    1935 	inc	hl
      00086D 47                    1936 	ld	b, a
      00086E F1                    1937 	pop	af
      00086F A6                    1938 	and	a, (hl)
      000870 B0                    1939 	or	a, b
      000871 20 03                 1940 	jr	NZ, 00178$
      000873                       1941 00177$:
      000873 AF                    1942 	xor	a, a
      000874 18 02                 1943 	jr	00179$
      000876                       1944 00178$:
      000876 3E 01                 1945 	ld	a, #0x01
      000878                       1946 00179$:
      000878 81                    1947 	add	a, c
      000879 21 16 03              1948 	ld	hl, #790
      00087C 39                    1949 	add	hl, sp
      00087D 77                    1950 	ld	(hl), a
                                   1951 ;main.c:196: neighbour_count += is_not_south_row
      00087E 21 11 03              1952 	ld	hl, #785
      000881 39                    1953 	add	hl, sp
      000882 3A                    1954 	ld	a, (hl-)
      000883 B6                    1955 	or	a, (hl)
      000884 28 3A                 1956 	jr	Z, 00183$
                                   1957 ;main.c:197: && ((board[i + 20] & k_tile_was_alive_mask) != 0x00);
      000886 21 08 03              1958 	ld	hl,#0x308
      000889 39                    1959 	add	hl,sp
      00088A 2A                    1960 	ld	a, (hl+)
      00088B 5F                    1961 	ld	e, a
      00088C 56                    1962 	ld	d, (hl)
      00088D 21 14 00              1963 	ld	hl, #0x0014
      000890 19                    1964 	add	hl, de
      000891 E5                    1965 	push	hl
      000892 7D                    1966 	ld	a, l
      000893 21 19 03              1967 	ld	hl, #793
      000896 39                    1968 	add	hl, sp
      000897 77                    1969 	ld	(hl), a
      000898 E1                    1970 	pop	hl
      000899 7C                    1971 	ld	a, h
      00089A 21 18 03              1972 	ld	hl, #792
      00089D 39                    1973 	add	hl, sp
      00089E 32                    1974 	ld	(hl-), a
      00089F CB 26                 1975 	sla	(hl)
      0008A1 23                    1976 	inc	hl
      0008A2 CB 16                 1977 	rl	(hl)
      0008A4 2B                    1978 	dec	hl
      0008A5 2A                    1979 	ld	a, (hl+)
      0008A6 5F                    1980 	ld	e, a
      0008A7 56                    1981 	ld	d, (hl)
      0008A8 21 04 03              1982 	ld	hl, #772
      0008AB 39                    1983 	add	hl, sp
      0008AC 2A                    1984 	ld	a,	(hl+)
      0008AD 66                    1985 	ld	h, (hl)
      0008AE 6F                    1986 	ld	l, a
      0008AF 19                    1987 	add	hl, de
      0008B0 2A                    1988 	ld	a, (hl+)
      0008B1 4F                    1989 	ld	c, a
      0008B2 46                    1990 	ld	b, (hl)
      0008B3 79                    1991 	ld	a, c
      0008B4 21 14 03              1992 	ld	hl, #788
      0008B7 39                    1993 	add	hl, sp
      0008B8 A6                    1994 	and	a, (hl)
      0008B9 23                    1995 	inc	hl
      0008BA 4F                    1996 	ld	c, a
      0008BB 78                    1997 	ld	a, b
      0008BC A6                    1998 	and	a, (hl)
      0008BD B1                    1999 	or	a, c
      0008BE 20 03                 2000 	jr	NZ, 00184$
      0008C0                       2001 00183$:
      0008C0 AF                    2002 	xor	a, a
      0008C1 18 02                 2003 	jr	00185$
      0008C3                       2004 00184$:
      0008C3 3E 01                 2005 	ld	a, #0x01
      0008C5                       2006 00185$:
      0008C5 21 16 03              2007 	ld	hl, #790
      0008C8 39                    2008 	add	hl, sp
      0008C9 4E                    2009 	ld	c, (hl)
      0008CA 23                    2010 	inc	hl
      0008CB 23                    2011 	inc	hl
      0008CC 81                    2012 	add	a, c
      0008CD 77                    2013 	ld	(hl), a
                                   2014 ;main.c:200: neighbour_count += is_not_south_row && is_not_west_col
      0008CE 21 11 03              2015 	ld	hl, #785
      0008D1 39                    2016 	add	hl, sp
      0008D2 3A                    2017 	ld	a, (hl-)
      0008D3 B6                    2018 	or	a, (hl)
      0008D4 28 65                 2019 	jr	Z, 00186$
      0008D6 21 13 03              2020 	ld	hl, #787
      0008D9 39                    2021 	add	hl, sp
      0008DA 3A                    2022 	ld	a, (hl-)
      0008DB B6                    2023 	or	a, (hl)
      0008DC 28 5D                 2024 	jr	Z, 00186$
                                   2025 ;main.c:201: && ((board[i + 19] & k_tile_was_alive_mask) != 0x00);
      0008DE 21 08 03              2026 	ld	hl,#0x308
      0008E1 39                    2027 	add	hl,sp
      0008E2 2A                    2028 	ld	a, (hl+)
      0008E3 5F                    2029 	ld	e, a
      0008E4 56                    2030 	ld	d, (hl)
      0008E5 21 13 00              2031 	ld	hl, #0x0013
      0008E8 19                    2032 	add	hl, de
      0008E9 E5                    2033 	push	hl
      0008EA 7D                    2034 	ld	a, l
      0008EB 21 18 03              2035 	ld	hl, #792
      0008EE 39                    2036 	add	hl, sp
      0008EF 77                    2037 	ld	(hl), a
      0008F0 E1                    2038 	pop	hl
      0008F1 7C                    2039 	ld	a, h
      0008F2 21 17 03              2040 	ld	hl, #791
      0008F5 39                    2041 	add	hl, sp
      0008F6 32                    2042 	ld	(hl-), a
      0008F7 7E                    2043 	ld	a, (hl)
      0008F8 21 10 03              2044 	ld	hl, #784
      0008FB 39                    2045 	add	hl, sp
      0008FC 77                    2046 	ld	(hl), a
      0008FD 21 17 03              2047 	ld	hl, #791
      000900 39                    2048 	add	hl, sp
      000901 7E                    2049 	ld	a, (hl)
      000902 21 11 03              2050 	ld	hl, #785
      000905 39                    2051 	add	hl, sp
      000906 32                    2052 	ld	(hl-), a
      000907 CB 26                 2053 	sla	(hl)
      000909 23                    2054 	inc	hl
      00090A CB 16                 2055 	rl	(hl)
      00090C 2B                    2056 	dec	hl
      00090D 2A                    2057 	ld	a, (hl+)
      00090E 5F                    2058 	ld	e, a
      00090F 56                    2059 	ld	d, (hl)
      000910 21 04 03              2060 	ld	hl, #772
      000913 39                    2061 	add	hl, sp
      000914 2A                    2062 	ld	a,	(hl+)
      000915 66                    2063 	ld	h, (hl)
      000916 6F                    2064 	ld	l, a
      000917 19                    2065 	add	hl, de
      000918 E5                    2066 	push	hl
      000919 7D                    2067 	ld	a, l
      00091A 21 18 03              2068 	ld	hl, #792
      00091D 39                    2069 	add	hl, sp
      00091E 77                    2070 	ld	(hl), a
      00091F E1                    2071 	pop	hl
      000920 7C                    2072 	ld	a, h
      000921 21 17 03              2073 	ld	hl, #791
      000924 39                    2074 	add	hl, sp
      000925 32                    2075 	ld	(hl-), a
      000926 2A                    2076 	ld	a, (hl+)
      000927 5F                    2077 	ld	e, a
      000928 56                    2078 	ld	d, (hl)
      000929 1A                    2079 	ld	a, (de)
      00092A 4F                    2080 	ld	c, a
      00092B 13                    2081 	inc	de
      00092C 1A                    2082 	ld	a, (de)
      00092D F5                    2083 	push	af
      00092E 79                    2084 	ld	a, c
      00092F 21 16 03              2085 	ld	hl, #790
      000932 39                    2086 	add	hl, sp
      000933 A6                    2087 	and	a, (hl)
      000934 23                    2088 	inc	hl
      000935 4F                    2089 	ld	c, a
      000936 F1                    2090 	pop	af
      000937 A6                    2091 	and	a, (hl)
      000938 B1                    2092 	or	a, c
      000939 20 03                 2093 	jr	NZ, 00187$
      00093B                       2094 00186$:
      00093B AF                    2095 	xor	a, a
      00093C 18 02                 2096 	jr	00188$
      00093E                       2097 00187$:
      00093E 3E 01                 2098 	ld	a, #0x01
      000940                       2099 00188$:
      000940 21 18 03              2100 	ld	hl, #792
      000943 39                    2101 	add	hl, sp
      000944 4E                    2102 	ld	c, (hl)
      000945 2B                    2103 	dec	hl
      000946 2B                    2104 	dec	hl
      000947 81                    2105 	add	a, c
      000948 77                    2106 	ld	(hl), a
                                   2107 ;main.c:204: neighbour_count += is_not_west_col
      000949 21 13 03              2108 	ld	hl, #787
      00094C 39                    2109 	add	hl, sp
      00094D 3A                    2110 	ld	a, (hl-)
      00094E B6                    2111 	or	a, (hl)
      00094F 28 39                 2112 	jr	Z, 00192$
                                   2113 ;main.c:205: && ((board[i - 1] & k_tile_was_alive_mask) != 0x00);
      000951 21 08 03              2114 	ld	hl,#0x308
      000954 39                    2115 	add	hl,sp
      000955 2A                    2116 	ld	a, (hl+)
      000956 5F                    2117 	ld	e, a
      000957 56                    2118 	ld	d, (hl)
      000958 21 01 00              2119 	ld	hl, #0x0001
      00095B 7B                    2120 	ld	a, e
      00095C 95                    2121 	sub	a, l
      00095D 5F                    2122 	ld	e, a
      00095E 7A                    2123 	ld	a, d
      00095F 9C                    2124 	sbc	a, h
      000960 21 18 03              2125 	ld	hl, #792
      000963 39                    2126 	add	hl, sp
      000964 32                    2127 	ld	(hl-), a
      000965 73                    2128 	ld	(hl), e
      000966 CB 26                 2129 	sla	(hl)
      000968 23                    2130 	inc	hl
      000969 CB 16                 2131 	rl	(hl)
      00096B 21 04 03              2132 	ld	hl,#0x304
      00096E 39                    2133 	add	hl,sp
      00096F 2A                    2134 	ld	a, (hl+)
      000970 5F                    2135 	ld	e, a
      000971 56                    2136 	ld	d, (hl)
      000972 21 17 03              2137 	ld	hl, #791
      000975 39                    2138 	add	hl, sp
      000976 2A                    2139 	ld	a,	(hl+)
      000977 66                    2140 	ld	h, (hl)
      000978 6F                    2141 	ld	l, a
      000979 19                    2142 	add	hl, de
      00097A 2A                    2143 	ld	a, (hl+)
      00097B 4F                    2144 	ld	c, a
      00097C 46                    2145 	ld	b, (hl)
      00097D 79                    2146 	ld	a, c
      00097E 21 14 03              2147 	ld	hl, #788
      000981 39                    2148 	add	hl, sp
      000982 A6                    2149 	and	a, (hl)
      000983 23                    2150 	inc	hl
      000984 4F                    2151 	ld	c, a
      000985 78                    2152 	ld	a, b
      000986 A6                    2153 	and	a, (hl)
      000987 B1                    2154 	or	a, c
      000988 20 03                 2155 	jr	NZ, 00193$
      00098A                       2156 00192$:
      00098A AF                    2157 	xor	a, a
      00098B 18 02                 2158 	jr	00194$
      00098D                       2159 00193$:
      00098D 3E 01                 2160 	ld	a, #0x01
      00098F                       2161 00194$:
      00098F 21 16 03              2162 	ld	hl, #790
      000992 39                    2163 	add	hl, sp
      000993 4E                    2164 	ld	c, (hl)
      000994 23                    2165 	inc	hl
      000995 23                    2166 	inc	hl
      000996 81                    2167 	add	a, c
      000997 77                    2168 	ld	(hl), a
                                   2169 ;main.c:208: neighbour_count += is_not_north_row && is_not_west_col
      000998 21 0F 03              2170 	ld	hl, #783
      00099B 39                    2171 	add	hl, sp
      00099C 3A                    2172 	ld	a, (hl-)
      00099D B6                    2173 	or	a, (hl)
      00099E 28 63                 2174 	jr	Z, 00195$
      0009A0 21 13 03              2175 	ld	hl, #787
      0009A3 39                    2176 	add	hl, sp
      0009A4 3A                    2177 	ld	a, (hl-)
      0009A5 B6                    2178 	or	a, (hl)
      0009A6 28 5B                 2179 	jr	Z, 00195$
                                   2180 ;main.c:209: && ((board[i - 21] & k_tile_was_alive_mask) != 0x00);
      0009A8 21 08 03              2181 	ld	hl,#0x308
      0009AB 39                    2182 	add	hl,sp
      0009AC 2A                    2183 	ld	a, (hl+)
      0009AD 5F                    2184 	ld	e, a
      0009AE 56                    2185 	ld	d, (hl)
      0009AF 21 15 00              2186 	ld	hl, #0x0015
      0009B2 7B                    2187 	ld	a, e
      0009B3 95                    2188 	sub	a, l
      0009B4 5F                    2189 	ld	e, a
      0009B5 7A                    2190 	ld	a, d
      0009B6 9C                    2191 	sbc	a, h
      0009B7 21 17 03              2192 	ld	hl, #791
      0009BA 39                    2193 	add	hl, sp
      0009BB 32                    2194 	ld	(hl-), a
      0009BC 73                    2195 	ld	(hl), e
      0009BD 7E                    2196 	ld	a, (hl)
      0009BE 21 12 03              2197 	ld	hl, #786
      0009C1 39                    2198 	add	hl, sp
      0009C2 77                    2199 	ld	(hl), a
      0009C3 21 17 03              2200 	ld	hl, #791
      0009C6 39                    2201 	add	hl, sp
      0009C7 7E                    2202 	ld	a, (hl)
      0009C8 21 13 03              2203 	ld	hl, #787
      0009CB 39                    2204 	add	hl, sp
      0009CC 32                    2205 	ld	(hl-), a
      0009CD CB 26                 2206 	sla	(hl)
      0009CF 23                    2207 	inc	hl
      0009D0 CB 16                 2208 	rl	(hl)
      0009D2 2B                    2209 	dec	hl
      0009D3 2A                    2210 	ld	a, (hl+)
      0009D4 5F                    2211 	ld	e, a
      0009D5 56                    2212 	ld	d, (hl)
      0009D6 21 04 03              2213 	ld	hl, #772
      0009D9 39                    2214 	add	hl, sp
      0009DA 2A                    2215 	ld	a,	(hl+)
      0009DB 66                    2216 	ld	h, (hl)
      0009DC 6F                    2217 	ld	l, a
      0009DD 19                    2218 	add	hl, de
      0009DE E5                    2219 	push	hl
      0009DF 7D                    2220 	ld	a, l
      0009E0 21 18 03              2221 	ld	hl, #792
      0009E3 39                    2222 	add	hl, sp
      0009E4 77                    2223 	ld	(hl), a
      0009E5 E1                    2224 	pop	hl
      0009E6 7C                    2225 	ld	a, h
      0009E7 21 17 03              2226 	ld	hl, #791
      0009EA 39                    2227 	add	hl, sp
      0009EB 32                    2228 	ld	(hl-), a
      0009EC 2A                    2229 	ld	a, (hl+)
      0009ED 5F                    2230 	ld	e, a
      0009EE 3A                    2231 	ld	a, (hl-)
      0009EF 57                    2232 	ld	d, a
      0009F0 1A                    2233 	ld	a, (de)
      0009F1 22                    2234 	ld	(hl+), a
      0009F2 13                    2235 	inc	de
      0009F3 1A                    2236 	ld	a, (de)
      0009F4 32                    2237 	ld	(hl-), a
      0009F5 3A                    2238 	ld	a, (hl-)
      0009F6 2B                    2239 	dec	hl
      0009F7 A6                    2240 	and	a, (hl)
      0009F8 4F                    2241 	ld	c, a
      0009F9 21 17 03              2242 	ld	hl, #791
      0009FC 39                    2243 	add	hl, sp
      0009FD 3A                    2244 	ld	a, (hl-)
      0009FE 2B                    2245 	dec	hl
      0009FF A6                    2246 	and	a, (hl)
      000A00 B1                    2247 	or	a, c
      000A01 20 08                 2248 	jr	NZ, 00196$
      000A03                       2249 00195$:
      000A03 21 17 03              2250 	ld	hl, #791
      000A06 39                    2251 	add	hl, sp
      000A07 36 00                 2252 	ld	(hl), #0x00
      000A09 18 06                 2253 	jr	00197$
      000A0B                       2254 00196$:
      000A0B 21 17 03              2255 	ld	hl, #791
      000A0E 39                    2256 	add	hl, sp
      000A0F 36 01                 2257 	ld	(hl), #0x01
      000A11                       2258 00197$:
      000A11 21 17 03              2259 	ld	hl, #791
      000A14 39                    2260 	add	hl, sp
      000A15 2A                    2261 	ld	a, (hl+)
      000A16 4E                    2262 	ld	c, (hl)
      000A17 81                    2263 	add	a, c
      000A18 77                    2264 	ld	(hl), a
                                   2265 ;main.c:163: tile_data |= ((tile_data & k_tile_is_alive_mask) << tile_was_alive);
      000A19 FArE0r02              2266 	ld	a, (#_k_tile_is_alive_mask)
      000A1C 21 10 03              2267 	ld	hl, #784
      000A1F 39                    2268 	add	hl, sp
      000A20 77                    2269 	ld	(hl), a
      000A21 FArE1r02              2270 	ld	a, (#_k_tile_is_alive_mask + 1)
      000A24 21 11 03              2271 	ld	hl, #785
      000A27 39                    2272 	add	hl, sp
      000A28 77                    2273 	ld	(hl), a
                                   2274 ;main.c:212: uint8_t is_alive = (tile_data & k_tile_is_alive_mask) != 0x00;
      000A29 21 0C 03              2275 	ld	hl, #780
      000A2C 39                    2276 	add	hl, sp
      000A2D 7E                    2277 	ld	a, (hl)
      000A2E 21 10 03              2278 	ld	hl, #784
      000A31 39                    2279 	add	hl, sp
      000A32 A6                    2280 	and	a, (hl)
      000A33 4F                    2281 	ld	c, a
      000A34 21 0D 03              2282 	ld	hl, #781
      000A37 39                    2283 	add	hl, sp
      000A38 7E                    2284 	ld	a, (hl)
      000A39 21 11 03              2285 	ld	hl, #785
      000A3C 39                    2286 	add	hl, sp
      000A3D A6                    2287 	and	a, (hl)
      000A3E B1                    2288 	or	a, c
      000A3F D6 01                 2289 	sub	a,#0x01
      000A41 3E 00                 2290 	ld	a, #0x00
      000A43 17                    2291 	rla
      000A44 EE 01                 2292 	xor	a, #0x01
                                   2293 ;main.c:213: uint8_t come_to_life = !is_alive && neighbour_count == 3;
      000A46 5F                    2294 	ld	e, a
      000A47 B7                    2295 	or	a, a
      000A48 20 09                 2296 	jr	NZ, 00201$
      000A4A 21 18 03              2297 	ld	hl, #792
      000A4D 39                    2298 	add	hl, sp
      000A4E 7E                    2299 	ld	a, (hl)
      000A4F D6 03                 2300 	sub	a, #0x03
      000A51 28 04                 2301 	jr	Z, 00202$
      000A53                       2302 00201$:
      000A53 0E 00                 2303 	ld	c, #0x00
      000A55 18 02                 2304 	jr	00203$
      000A57                       2305 00202$:
      000A57 0E 01                 2306 	ld	c, #0x01
      000A59                       2307 00203$:
                                   2308 ;main.c:218: uint8_t remain_alive = is_alive && neighbour_count >= 2 && neighbour_count <= 3;
      000A59 7B                    2309 	ld	a, e
      000A5A B7                    2310 	or	a, a
      000A5B 28 0E                 2311 	jr	Z, 00204$
      000A5D 21 18 03              2312 	ld	hl, #792
      000A60 39                    2313 	add	hl, sp
      000A61 7E                    2314 	ld	a, (hl)
      000A62 D6 02                 2315 	sub	a, #0x02
      000A64 38 05                 2316 	jr	C, 00204$
      000A66 3E 03                 2317 	ld	a, #0x03
      000A68 96                    2318 	sub	a, (hl)
      000A69 30 03                 2319 	jr	NC, 00205$
      000A6B                       2320 00204$:
      000A6B AF                    2321 	xor	a, a
      000A6C 18 02                 2322 	jr	00206$
      000A6E                       2323 00205$:
      000A6E 3E 01                 2324 	ld	a, #0x01
      000A70                       2325 00206$:
                                   2326 ;main.c:221: tile_data &= ~k_tile_is_alive_mask;
      000A70 F5                    2327 	push	af
      000A71 21 12 03              2328 	ld	hl, #786
      000A74 39                    2329 	add	hl, sp
      000A75 2A                    2330 	ld	a, (hl+)
      000A76 23                    2331 	inc	hl
      000A77 2F                    2332 	cpl
      000A78 32                    2333 	ld	(hl-), a
      000A79 2A                    2334 	ld	a, (hl+)
      000A7A 23                    2335 	inc	hl
      000A7B 2F                    2336 	cpl
      000A7C 77                    2337 	ld	(hl), a
      000A7D 21 0E 03              2338 	ld	hl, #782
      000A80 39                    2339 	add	hl, sp
      000A81 7E                    2340 	ld	a, (hl)
      000A82 21 14 03              2341 	ld	hl, #788
      000A85 39                    2342 	add	hl, sp
      000A86 A6                    2343 	and	a, (hl)
      000A87 5F                    2344 	ld	e, a
      000A88 21 0F 03              2345 	ld	hl, #783
      000A8B 39                    2346 	add	hl, sp
      000A8C 7E                    2347 	ld	a, (hl)
      000A8D 21 15 03              2348 	ld	hl, #789
      000A90 39                    2349 	add	hl, sp
      000A91 A6                    2350 	and	a, (hl)
      000A92 57                    2351 	ld	d, a
      000A93 F1                    2352 	pop	af
                                   2353 ;main.c:222: tile_data |= (come_to_life | remain_alive) << tile_is_alive;
      000A94 B1                    2354 	or	a, c
      000A95 4F                    2355 	ld	c, a
      000A96 06 00                 2356 	ld	b, #0x00
      000A98 7B                    2357 	ld	a, e
      000A99 B1                    2358 	or	a, c
      000A9A 4F                    2359 	ld	c, a
      000A9B 7A                    2360 	ld	a, d
      000A9C B0                    2361 	or	a, b
      000A9D 47                    2362 	ld	b, a
      000A9E 21 17 03              2363 	ld	hl, #791
      000AA1 39                    2364 	add	hl, sp
      000AA2 79                    2365 	ld	a, c
      000AA3 22                    2366 	ld	(hl+), a
                                   2367 ;main.c:225: is_alive = (tile_data & k_tile_is_alive_mask) != 0x00;
      000AA4 78                    2368 	ld	a, b
      000AA5 32                    2369 	ld	(hl-), a
      000AA6 7E                    2370 	ld	a, (hl)
      000AA7 21 10 03              2371 	ld	hl, #784
      000AAA 39                    2372 	add	hl, sp
      000AAB A6                    2373 	and	a, (hl)
      000AAC 4F                    2374 	ld	c, a
      000AAD 21 18 03              2375 	ld	hl, #792
      000AB0 39                    2376 	add	hl, sp
      000AB1 7E                    2377 	ld	a, (hl)
      000AB2 21 11 03              2378 	ld	hl, #785
      000AB5 39                    2379 	add	hl, sp
      000AB6 A6                    2380 	and	a, (hl)
      000AB7 B1                    2381 	or	a, c
      000AB8 D6 01                 2382 	sub	a,#0x01
      000ABA 3E 00                 2383 	ld	a, #0x00
      000ABC 17                    2384 	rla
      000ABD EE 01                 2385 	xor	a, #0x01
      000ABF 21 16 03              2386 	ld	hl, #790
      000AC2 39                    2387 	add	hl, sp
                                   2388 ;main.c:226: uint8_t was_alive = (tile_data & k_tile_was_alive_mask) != 0x00;
      000AC3 22                    2389 	ld	(hl+), a
      000AC4 7E                    2390 	ld	a, (hl)
      000AC5 21 14 03              2391 	ld	hl, #788
      000AC8 39                    2392 	add	hl, sp
      000AC9 A6                    2393 	and	a, (hl)
      000ACA 4F                    2394 	ld	c, a
      000ACB 21 18 03              2395 	ld	hl, #792
      000ACE 39                    2396 	add	hl, sp
      000ACF 7E                    2397 	ld	a, (hl)
      000AD0 21 15 03              2398 	ld	hl, #789
      000AD3 39                    2399 	add	hl, sp
      000AD4 A6                    2400 	and	a, (hl)
      000AD5 2B                    2401 	dec	hl
      000AD6 B1                    2402 	or	a, c
      000AD7 D6 01                 2403 	sub	a, #0x01
      000AD9 3E 00                 2404 	ld	a, #0x00
      000ADB 17                    2405 	rla
      000ADC EE 01                 2406 	xor	a, #0x01
      000ADE 77                    2407 	ld	(hl), a
      000ADF 2A                    2408 	ld	a, (hl+)
                                   2409 ;main.c:229: if (!was_alive && is_alive)
      000AE0 32                    2410 	ld	(hl-), a
      000AE1 7E                    2411 	ld	a, (hl)
      000AE2 B7                    2412 	or	a, a
      000AE3 C2rBBr0B              2413 	jp	NZ, 00113$
      000AE6 23                    2414 	inc	hl
      000AE7 23                    2415 	inc	hl
      000AE8 7E                    2416 	ld	a, (hl)
      000AE9 B7                    2417 	or	a, a
      000AEA CArBBr0B              2418 	jp	Z, 00113$
                                   2419 ;main.c:232: if (next_available_sprite_index < 39)
      000AED 21 1A 03              2420 	ld	hl, #794
      000AF0 39                    2421 	add	hl, sp
      000AF1 7E                    2422 	ld	a, (hl)
      000AF2 D6 27                 2423 	sub	a, #0x27
      000AF4 D2r9Fr0B              2424 	jp	NC, 00107$
                                   2425 ;main.c:235: uint8_t sprite_index = available_sprites[next_available_sprite_index];
      000AF7 21 06 03              2426 	ld	hl,#0x306
      000AFA 39                    2427 	add	hl,sp
      000AFB 2A                    2428 	ld	a, (hl+)
      000AFC 5F                    2429 	ld	e, a
      000AFD 56                    2430 	ld	d, (hl)
      000AFE 21 1A 03              2431 	ld	hl, #794
      000B01 39                    2432 	add	hl, sp
      000B02 6E                    2433 	ld	l, (hl)
      000B03 26 00                 2434 	ld	h, #0x00
      000B05 19                    2435 	add	hl, de
      000B06 E5                    2436 	push	hl
      000B07 7D                    2437 	ld	a, l
      000B08 21 14 03              2438 	ld	hl, #788
      000B0B 39                    2439 	add	hl, sp
      000B0C 77                    2440 	ld	(hl), a
      000B0D E1                    2441 	pop	hl
      000B0E 7C                    2442 	ld	a, h
      000B0F 21 13 03              2443 	ld	hl, #787
      000B12 39                    2444 	add	hl, sp
      000B13 32                    2445 	ld	(hl-), a
      000B14 2A                    2446 	ld	a, (hl+)
      000B15 5F                    2447 	ld	e, a
      000B16 2A                    2448 	ld	a, (hl+)
      000B17 23                    2449 	inc	hl
      000B18 57                    2450 	ld	d, a
      000B19 1A                    2451 	ld	a, (de)
      000B1A 77                    2452 	ld	(hl), a
                                   2453 ;main.c:236: next_available_sprite_index++;
      000B1B 21 1A 03              2454 	ld	hl, #794
      000B1E 39                    2455 	add	hl, sp
      000B1F 34                    2456 	inc	(hl)
                                   2457 ;main.c:239: update_tile_sprite(sprite_index, k_live_tile_index);
      000B20 FArEFr02              2458 	ld	a, (#_k_live_tile_index)
      000B23 F5                    2459 	push	af
      000B24 33                    2460 	inc	sp
      000B25 21 16 03              2461 	ld	hl, #790
      000B28 39                    2462 	add	hl, sp
      000B29 7E                    2463 	ld	a, (hl)
      000B2A F5                    2464 	push	af
      000B2B 33                    2465 	inc	sp
      000B2C CDr2Br03              2466 	call	_update_tile_sprite
      000B2F E1                    2467 	pop	hl
                                   2468 ;main.c:240: update_tile_position(sprite_index, i % 20, i / 20);
      000B30 11 14 00              2469 	ld	de, #0x0014
      000B33 D5                    2470 	push	de
      000B34 21 0A 03              2471 	ld	hl, #778
      000B37 39                    2472 	add	hl, sp
      000B38 2A                    2473 	ld	a, (hl+)
      000B39 5F                    2474 	ld	e, a
      000B3A 56                    2475 	ld	d, (hl)
      000B3B D5                    2476 	push	de
      000B3C CDr00r00              2477 	call	__divuint
      000B3F E8 04                 2478 	add	sp, #4
      000B41 21 16 03              2479 	ld	hl, #790
      000B44 39                    2480 	add	hl, sp
      000B45 73                    2481 	ld	(hl), e
      000B46 11 14 00              2482 	ld	de, #0x0014
      000B49 D5                    2483 	push	de
      000B4A 21 0A 03              2484 	ld	hl, #778
      000B4D 39                    2485 	add	hl, sp
      000B4E 2A                    2486 	ld	a, (hl+)
      000B4F 5F                    2487 	ld	e, a
      000B50 56                    2488 	ld	d, (hl)
      000B51 D5                    2489 	push	de
      000B52 CDr00r00              2490 	call	__moduint
      000B55 E8 04                 2491 	add	sp, #4
      000B57 21 13 03              2492 	ld	hl, #787
      000B5A 39                    2493 	add	hl, sp
      000B5B 7B                    2494 	ld	a, e
      000B5C 22                    2495 	ld	(hl+), a
      000B5D 72                    2496 	ld	(hl), d
      000B5E 21 13 03              2497 	ld	hl, #787
      000B61 39                    2498 	add	hl, sp
      000B62 7E                    2499 	ld	a, (hl)
      000B63 21 16 03              2500 	ld	hl, #790
      000B66 39                    2501 	add	hl, sp
      000B67 66                    2502 	ld	h, (hl)
                                   2503 ;	spillPairReg hl
                                   2504 ;	spillPairReg hl
      000B68 E5                    2505 	push	hl
      000B69 33                    2506 	inc	sp
      000B6A F5                    2507 	push	af
      000B6B 33                    2508 	inc	sp
      000B6C 21 17 03              2509 	ld	hl, #791
      000B6F 39                    2510 	add	hl, sp
      000B70 7E                    2511 	ld	a, (hl)
      000B71 F5                    2512 	push	af
      000B72 33                    2513 	inc	sp
      000B73 CDr3Cr03              2514 	call	_update_tile_position
      000B76 E8 03                 2515 	add	sp, #3
                                   2516 ;main.c:243: tile_data |= sprite_index << 8;
      000B78 21 15 03              2517 	ld	hl, #789
      000B7B 39                    2518 	add	hl, sp
      000B7C 7E                    2519 	ld	a, (hl)
      000B7D 21 12 03              2520 	ld	hl, #786
      000B80 39                    2521 	add	hl, sp
      000B81 22                    2522 	ld	(hl+), a
      000B82 AF                    2523 	xor	a, a
      000B83 32                    2524 	ld	(hl-), a
      000B84 7E                    2525 	ld	a, (hl)
      000B85 21 16 03              2526 	ld	hl, #790
      000B88 39                    2527 	add	hl, sp
      000B89 32                    2528 	ld	(hl-), a
      000B8A AF                    2529 	xor	a, a
      000B8B 22                    2530 	ld	(hl+), a
      000B8C 23                    2531 	inc	hl
      000B8D 2A                    2532 	ld	a, (hl+)
      000B8E 4E                    2533 	ld	c, (hl)
      000B8F 21 15 03              2534 	ld	hl, #789
      000B92 39                    2535 	add	hl, sp
      000B93 B6                    2536 	or	a, (hl)
      000B94 23                    2537 	inc	hl
      000B95 F5                    2538 	push	af
      000B96 79                    2539 	ld	a, c
      000B97 B6                    2540 	or	a, (hl)
      000B98 23                    2541 	inc	hl
      000B99 4F                    2542 	ld	c, a
      000B9A F1                    2543 	pop	af
      000B9B 22                    2544 	ld	(hl+), a
      000B9C 71                    2545 	ld	(hl), c
      000B9D 18 40                 2546 	jr	00114$
      000B9F                       2547 00107$:
                                   2548 ;main.c:248: tile_data &= ~k_tile_is_alive_mask;
      000B9F 21 17 03              2549 	ld	hl, #791
      000BA2 39                    2550 	add	hl, sp
      000BA3 7E                    2551 	ld	a, (hl)
      000BA4 21 12 03              2552 	ld	hl, #786
      000BA7 39                    2553 	add	hl, sp
      000BA8 A6                    2554 	and	a, (hl)
      000BA9 21 17 03              2555 	ld	hl, #791
      000BAC 39                    2556 	add	hl, sp
      000BAD 22                    2557 	ld	(hl+), a
      000BAE 7E                    2558 	ld	a, (hl)
      000BAF 21 13 03              2559 	ld	hl, #787
      000BB2 39                    2560 	add	hl, sp
      000BB3 A6                    2561 	and	a, (hl)
      000BB4 21 18 03              2562 	ld	hl, #792
      000BB7 39                    2563 	add	hl, sp
      000BB8 77                    2564 	ld	(hl), a
      000BB9 18 24                 2565 	jr	00114$
      000BBB                       2566 00113$:
                                   2567 ;main.c:251: else if (was_alive && !is_alive)
      000BBB 21 15 03              2568 	ld	hl, #789
      000BBE 39                    2569 	add	hl, sp
      000BBF 7E                    2570 	ld	a, (hl)
      000BC0 B7                    2571 	or	a, a
      000BC1 28 1C                 2572 	jr	Z, 00114$
      000BC3 23                    2573 	inc	hl
      000BC4 7E                    2574 	ld	a, (hl)
      000BC5 B7                    2575 	or	a, a
      000BC6 20 17                 2576 	jr	NZ, 00114$
                                   2577 ;main.c:254: tile_data |= k_tile_is_alive_mask;
      000BC8 23                    2578 	inc	hl
      000BC9 7E                    2579 	ld	a, (hl)
      000BCA 21 10 03              2580 	ld	hl, #784
      000BCD 39                    2581 	add	hl, sp
      000BCE B6                    2582 	or	a, (hl)
      000BCF 21 17 03              2583 	ld	hl, #791
      000BD2 39                    2584 	add	hl, sp
      000BD3 22                    2585 	ld	(hl+), a
      000BD4 7E                    2586 	ld	a, (hl)
      000BD5 21 11 03              2587 	ld	hl, #785
      000BD8 39                    2588 	add	hl, sp
      000BD9 B6                    2589 	or	a, (hl)
      000BDA 21 18 03              2590 	ld	hl, #792
      000BDD 39                    2591 	add	hl, sp
      000BDE 77                    2592 	ld	(hl), a
      000BDF                       2593 00114$:
                                   2594 ;main.c:271: board[i] = tile_data;
      000BDF 21 0A 03              2595 	ld	hl,#0x30a
      000BE2 39                    2596 	add	hl,sp
      000BE3 2A                    2597 	ld	a, (hl+)
      000BE4 5F                    2598 	ld	e, a
      000BE5 56                    2599 	ld	d, (hl)
      000BE6 21 17 03              2600 	ld	hl, #791
      000BE9 39                    2601 	add	hl, sp
      000BEA 2A                    2602 	ld	a, (hl+)
      000BEB 12                    2603 	ld	(de), a
      000BEC 13                    2604 	inc	de
      000BED 7E                    2605 	ld	a, (hl)
      000BEE 12                    2606 	ld	(de), a
                                   2607 ;main.c:169: for (uint16_t i = 0; i < 360; ++i)
      000BEF 21 1B 03              2608 	ld	hl, #795
      000BF2 39                    2609 	add	hl, sp
      000BF3 34                    2610 	inc	(hl)
      000BF4 C2rA6r06              2611 	jp	NZ,00151$
      000BF7 23                    2612 	inc	hl
      000BF8 34                    2613 	inc	(hl)
      000BF9 C3rA6r06              2614 	jp	00151$
      000BFC                       2615 00263$:
      000BFC 21 1A 03              2616 	ld	hl, #794
      000BFF 39                    2617 	add	hl, sp
      000C00 2A                    2618 	ld	a, (hl+)
      000C01 23                    2619 	inc	hl
      000C02 77                    2620 	ld	(hl), a
                                   2621 ;main.c:276: execution_state &= ~k_execution_state_active_mask;
      000C03 FArDFr02              2622 	ld	a, (#_k_execution_state_active_mask)
      000C06 2F                    2623 	cpl
      000C07 21 19 03              2624 	ld	hl, #793
      000C0A 39                    2625 	add	hl, sp
      000C0B A6                    2626 	and	a, (hl)
      000C0C 77                    2627 	ld	(hl), a
                                   2628 ;main.c:277: update_cursor_sprite(k_cursor_empty_tile_index);
      000C0D FArF0r02              2629 	ld	a, (#_k_cursor_empty_tile_index)
      000C10 F5                    2630 	push	af
      000C11 33                    2631 	inc	sp
      000C12 CDrCCr02              2632 	call	_update_cursor_sprite
      000C15 33                    2633 	inc	sp
      000C16 C3r98r0F              2634 	jp	00137$
      000C19                       2635 00136$:
                                   2636 ;main.c:283: if (was_input_depressed(&input_state, btn_up))
      000C19 21 FC 02              2637 	ld	hl, #764
      000C1C 39                    2638 	add	hl, sp
      000C1D 7E                    2639 	ld	a, (hl)
      000C1E 21 1A 03              2640 	ld	hl, #794
      000C21 39                    2641 	add	hl, sp
      000C22 77                    2642 	ld	(hl), a
      000C23 21 FD 02              2643 	ld	hl, #765
      000C26 39                    2644 	add	hl, sp
      000C27 7E                    2645 	ld	a, (hl)
      000C28 21 1B 03              2646 	ld	hl, #795
      000C2B 39                    2647 	add	hl, sp
      000C2C 32                    2648 	ld	(hl-), a
      000C2D 3E 02                 2649 	ld	a, #0x02
      000C2F F5                    2650 	push	af
      000C30 33                    2651 	inc	sp
      000C31 2A                    2652 	ld	a, (hl+)
      000C32 5F                    2653 	ld	e, a
      000C33 56                    2654 	ld	d, (hl)
      000C34 D5                    2655 	push	de
      000C35 CDr77r02              2656 	call	_was_input_depressed
      000C38 E8 03                 2657 	add	sp, #3
      000C3A 21 1B 03              2658 	ld	hl, #795
      000C3D 39                    2659 	add	hl, sp
      000C3E 73                    2660 	ld	(hl), e
                                   2661 ;main.c:285: cursor_tile_y -= 1;
      000C3F 21 FF 02              2662 	ld	hl, #767
      000C42 39                    2663 	add	hl, sp
      000C43 7E                    2664 	ld	a, (hl)
      000C44 21 18 03              2665 	ld	hl, #792
      000C47 39                    2666 	add	hl, sp
      000C48 77                    2667 	ld	(hl), a
                                   2668 ;main.c:283: if (was_input_depressed(&input_state, btn_up))
      000C49 21 1B 03              2669 	ld	hl, #795
      000C4C 39                    2670 	add	hl, sp
      000C4D 7E                    2671 	ld	a, (hl)
      000C4E B7                    2672 	or	a, a
      000C4F 28 0E                 2673 	jr	Z, 00126$
                                   2674 ;main.c:285: cursor_tile_y -= 1;
      000C51 21 18 03              2675 	ld	hl, #792
      000C54 39                    2676 	add	hl, sp
      000C55 7E                    2677 	ld	a, (hl)
      000C56 3D                    2678 	dec	a
      000C57 21 FF 02              2679 	ld	hl, #767
      000C5A 39                    2680 	add	hl, sp
      000C5B 77                    2681 	ld	(hl), a
      000C5C C3rF9r0C              2682 	jp	00127$
      000C5F                       2683 00126$:
                                   2684 ;main.c:287: else if (was_input_depressed(&input_state, btn_down))
      000C5F 21 FC 02              2685 	ld	hl, #764
      000C62 39                    2686 	add	hl, sp
      000C63 7E                    2687 	ld	a, (hl)
      000C64 21 1A 03              2688 	ld	hl, #794
      000C67 39                    2689 	add	hl, sp
      000C68 77                    2690 	ld	(hl), a
      000C69 21 FD 02              2691 	ld	hl, #765
      000C6C 39                    2692 	add	hl, sp
      000C6D 7E                    2693 	ld	a, (hl)
      000C6E 21 1B 03              2694 	ld	hl, #795
      000C71 39                    2695 	add	hl, sp
      000C72 32                    2696 	ld	(hl-), a
      000C73 3E 03                 2697 	ld	a, #0x03
      000C75 F5                    2698 	push	af
      000C76 33                    2699 	inc	sp
      000C77 2A                    2700 	ld	a, (hl+)
      000C78 5F                    2701 	ld	e, a
      000C79 56                    2702 	ld	d, (hl)
      000C7A D5                    2703 	push	de
      000C7B CDr77r02              2704 	call	_was_input_depressed
      000C7E E8 03                 2705 	add	sp, #3
      000C80 7B                    2706 	ld	a, e
      000C81 B7                    2707 	or	a, a
      000C82 28 0D                 2708 	jr	Z, 00123$
                                   2709 ;main.c:289: cursor_tile_y += 1;
      000C84 21 18 03              2710 	ld	hl, #792
      000C87 39                    2711 	add	hl, sp
      000C88 7E                    2712 	ld	a, (hl)
      000C89 3C                    2713 	inc	a
      000C8A 21 FF 02              2714 	ld	hl, #767
      000C8D 39                    2715 	add	hl, sp
      000C8E 77                    2716 	ld	(hl), a
      000C8F 18 68                 2717 	jr	00127$
      000C91                       2718 00123$:
                                   2719 ;main.c:291: else if (was_input_depressed(&input_state, btn_left))
      000C91 21 FC 02              2720 	ld	hl, #764
      000C94 39                    2721 	add	hl, sp
      000C95 7E                    2722 	ld	a, (hl)
      000C96 21 1A 03              2723 	ld	hl, #794
      000C99 39                    2724 	add	hl, sp
      000C9A 77                    2725 	ld	(hl), a
      000C9B 21 FD 02              2726 	ld	hl, #765
      000C9E 39                    2727 	add	hl, sp
      000C9F 7E                    2728 	ld	a, (hl)
      000CA0 21 1B 03              2729 	ld	hl, #795
      000CA3 39                    2730 	add	hl, sp
      000CA4 32                    2731 	ld	(hl-), a
      000CA5 3E 04                 2732 	ld	a, #0x04
      000CA7 F5                    2733 	push	af
      000CA8 33                    2734 	inc	sp
      000CA9 2A                    2735 	ld	a, (hl+)
      000CAA 5F                    2736 	ld	e, a
      000CAB 56                    2737 	ld	d, (hl)
      000CAC D5                    2738 	push	de
      000CAD CDr77r02              2739 	call	_was_input_depressed
      000CB0 E8 03                 2740 	add	sp, #3
                                   2741 ;main.c:293: cursor_tile_x -= 1;
      000CB2 21 FE 02              2742 	ld	hl, #766
      000CB5 39                    2743 	add	hl, sp
      000CB6 7E                    2744 	ld	a, (hl)
      000CB7 21 18 03              2745 	ld	hl, #792
      000CBA 39                    2746 	add	hl, sp
      000CBB 77                    2747 	ld	(hl), a
                                   2748 ;main.c:291: else if (was_input_depressed(&input_state, btn_left))
      000CBC 7B                    2749 	ld	a, e
      000CBD B7                    2750 	or	a, a
      000CBE 28 09                 2751 	jr	Z, 00120$
                                   2752 ;main.c:293: cursor_tile_x -= 1;
      000CC0 7E                    2753 	ld	a, (hl)
      000CC1 3D                    2754 	dec	a
      000CC2 21 FE 02              2755 	ld	hl, #766
      000CC5 39                    2756 	add	hl, sp
      000CC6 77                    2757 	ld	(hl), a
      000CC7 18 30                 2758 	jr	00127$
      000CC9                       2759 00120$:
                                   2760 ;main.c:295: else if (was_input_depressed(&input_state, btn_right))
      000CC9 21 FC 02              2761 	ld	hl, #764
      000CCC 39                    2762 	add	hl, sp
      000CCD 7E                    2763 	ld	a, (hl)
      000CCE 21 1A 03              2764 	ld	hl, #794
      000CD1 39                    2765 	add	hl, sp
      000CD2 77                    2766 	ld	(hl), a
      000CD3 21 FD 02              2767 	ld	hl, #765
      000CD6 39                    2768 	add	hl, sp
      000CD7 7E                    2769 	ld	a, (hl)
      000CD8 21 1B 03              2770 	ld	hl, #795
      000CDB 39                    2771 	add	hl, sp
      000CDC 32                    2772 	ld	(hl-), a
      000CDD 3E 05                 2773 	ld	a, #0x05
      000CDF F5                    2774 	push	af
      000CE0 33                    2775 	inc	sp
      000CE1 2A                    2776 	ld	a, (hl+)
      000CE2 5F                    2777 	ld	e, a
      000CE3 56                    2778 	ld	d, (hl)
      000CE4 D5                    2779 	push	de
      000CE5 CDr77r02              2780 	call	_was_input_depressed
      000CE8 E8 03                 2781 	add	sp, #3
      000CEA 7B                    2782 	ld	a, e
      000CEB B7                    2783 	or	a, a
      000CEC 28 0B                 2784 	jr	Z, 00127$
                                   2785 ;main.c:297: cursor_tile_x += 1;
      000CEE 21 18 03              2786 	ld	hl, #792
      000CF1 39                    2787 	add	hl, sp
      000CF2 7E                    2788 	ld	a, (hl)
      000CF3 3C                    2789 	inc	a
      000CF4 21 FE 02              2790 	ld	hl, #766
      000CF7 39                    2791 	add	hl, sp
      000CF8 77                    2792 	ld	(hl), a
      000CF9                       2793 00127$:
                                   2794 ;main.c:302: ? 19
      000CF9 21 FE 02              2795 	ld	hl, #766
      000CFC 39                    2796 	add	hl, sp
      000CFD 7E                    2797 	ld	a, (hl)
      000CFE 3C                    2798 	inc	a
      000CFF 20 0B                 2799 	jr	NZ, 00210$
      000D01 21 1A 03              2800 	ld	hl, #794
      000D04 39                    2801 	add	hl, sp
      000D05 3E 13                 2802 	ld	a, #0x13
      000D07 22                    2803 	ld	(hl+), a
      000D08 AF                    2804 	xor	a, a
      000D09 77                    2805 	ld	(hl), a
      000D0A 18 1E                 2806 	jr	00211$
      000D0C                       2807 00210$:
                                   2808 ;main.c:304: ? 0
      000D0C 3E 13                 2809 	ld	a, #0x13
      000D0E 21 FE 02              2810 	ld	hl, #766
      000D11 39                    2811 	add	hl, sp
      000D12 96                    2812 	sub	a, (hl)
      000D13 30 09                 2813 	jr	NC, 00212$
      000D15 AF                    2814 	xor	a, a
      000D16 21 1A 03              2815 	ld	hl, #794
      000D19 39                    2816 	add	hl, sp
      000D1A 22                    2817 	ld	(hl+), a
      000D1B 77                    2818 	ld	(hl), a
      000D1C 18 0C                 2819 	jr	00213$
      000D1E                       2820 00212$:
                                   2821 ;main.c:305: : cursor_tile_x;
      000D1E 21 FE 02              2822 	ld	hl, #766
      000D21 39                    2823 	add	hl, sp
      000D22 7E                    2824 	ld	a, (hl)
      000D23 21 1A 03              2825 	ld	hl, #794
      000D26 39                    2826 	add	hl, sp
      000D27 22                    2827 	ld	(hl+), a
      000D28 36 00                 2828 	ld	(hl), #0x00
      000D2A                       2829 00213$:
      000D2A                       2830 00211$:
      000D2A 21 1A 03              2831 	ld	hl, #794
      000D2D 39                    2832 	add	hl, sp
      000D2E 7E                    2833 	ld	a, (hl)
      000D2F 21 FE 02              2834 	ld	hl, #766
      000D32 39                    2835 	add	hl, sp
                                   2836 ;main.c:309: ? 17
      000D33 22                    2837 	ld	(hl+), a
      000D34 7E                    2838 	ld	a, (hl)
      000D35 3C                    2839 	inc	a
      000D36 20 0B                 2840 	jr	NZ, 00214$
      000D38 21 1A 03              2841 	ld	hl, #794
      000D3B 39                    2842 	add	hl, sp
      000D3C 3E 11                 2843 	ld	a, #0x11
      000D3E 22                    2844 	ld	(hl+), a
      000D3F AF                    2845 	xor	a, a
      000D40 77                    2846 	ld	(hl), a
      000D41 18 1E                 2847 	jr	00215$
      000D43                       2848 00214$:
                                   2849 ;main.c:311: ? 0
      000D43 3E 11                 2850 	ld	a, #0x11
      000D45 21 FF 02              2851 	ld	hl, #767
      000D48 39                    2852 	add	hl, sp
      000D49 96                    2853 	sub	a, (hl)
      000D4A 30 09                 2854 	jr	NC, 00216$
      000D4C AF                    2855 	xor	a, a
      000D4D 21 1A 03              2856 	ld	hl, #794
      000D50 39                    2857 	add	hl, sp
      000D51 22                    2858 	ld	(hl+), a
      000D52 77                    2859 	ld	(hl), a
      000D53 18 0C                 2860 	jr	00217$
      000D55                       2861 00216$:
                                   2862 ;main.c:312: : cursor_tile_y;
      000D55 21 FF 02              2863 	ld	hl, #767
      000D58 39                    2864 	add	hl, sp
      000D59 7E                    2865 	ld	a, (hl)
      000D5A 21 1A 03              2866 	ld	hl, #794
      000D5D 39                    2867 	add	hl, sp
      000D5E 22                    2868 	ld	(hl+), a
      000D5F 36 00                 2869 	ld	(hl), #0x00
      000D61                       2870 00217$:
      000D61                       2871 00215$:
      000D61 21 1A 03              2872 	ld	hl, #794
      000D64 39                    2873 	add	hl, sp
      000D65 7E                    2874 	ld	a, (hl)
      000D66 21 FF 02              2875 	ld	hl, #767
      000D69 39                    2876 	add	hl, sp
      000D6A 77                    2877 	ld	(hl), a
                                   2878 ;main.c:314: update_cursor_position(cursor_tile_x, cursor_tile_y);
      000D6B 3A                    2879 	ld	a, (hl-)
      000D6C 57                    2880 	ld	d, a
      000D6D 5E                    2881 	ld	e, (hl)
      000D6E D5                    2882 	push	de
      000D6F CDrF3r02              2883 	call	_update_cursor_position
      000D72 E1                    2884 	pop	hl
                                   2885 ;main.c:317: if (was_input_depressed(&input_state, btn_b))
      000D73 21 FC 02              2886 	ld	hl, #764
      000D76 39                    2887 	add	hl, sp
      000D77 2A                    2888 	ld	a, (hl+)
      000D78 4F                    2889 	ld	c, a
      000D79 46                    2890 	ld	b, (hl)
      000D7A 3E 01                 2891 	ld	a, #0x01
      000D7C F5                    2892 	push	af
      000D7D 33                    2893 	inc	sp
      000D7E C5                    2894 	push	bc
      000D7F CDr77r02              2895 	call	_was_input_depressed
      000D82 E8 03                 2896 	add	sp, #3
      000D84 7B                    2897 	ld	a, e
      000D85 B7                    2898 	or	a, a
      000D86 CAr98r0F              2899 	jp	Z, 00137$
                                   2900 ;main.c:319: uint16_t board_index = cursor_tile_x + (cursor_tile_y * 20);
      000D89 21 FE 02              2901 	ld	hl, #766
      000D8C 39                    2902 	add	hl, sp
      000D8D 2A                    2903 	ld	a, (hl+)
      000D8E 4F                    2904 	ld	c, a
      000D8F 06 00                 2905 	ld	b, #0x00
      000D91 7E                    2906 	ld	a, (hl)
      000D92 21 1A 03              2907 	ld	hl, #794
      000D95 39                    2908 	add	hl, sp
      000D96 22                    2909 	ld	(hl+), a
      000D97 AF                    2910 	xor	a, a
      000D98 32                    2911 	ld	(hl-), a
      000D99 2A                    2912 	ld	a, (hl+)
      000D9A 5F                    2913 	ld	e, a
      000D9B 56                    2914 	ld	d, (hl)
      000D9C 6B                    2915 	ld	l, e
      000D9D 62                    2916 	ld	h, d
      000D9E 29                    2917 	add	hl, hl
      000D9F 29                    2918 	add	hl, hl
      000DA0 19                    2919 	add	hl, de
      000DA1 29                    2920 	add	hl, hl
      000DA2 29                    2921 	add	hl, hl
      000DA3 09                    2922 	add	hl, bc
                                   2923 ;main.c:320: uint16_t tile_data = board[board_index];
      000DA4 29                    2924 	add	hl, hl
      000DA5 4D                    2925 	ld	c, l
      000DA6 44                    2926 	ld	b, h
      000DA7 21 02 03              2927 	ld	hl, #770
      000DAA 39                    2928 	add	hl, sp
      000DAB 2A                    2929 	ld	a,	(hl+)
      000DAC 66                    2930 	ld	h, (hl)
      000DAD 6F                    2931 	ld	l, a
      000DAE 09                    2932 	add	hl, bc
      000DAF E5                    2933 	push	hl
      000DB0 7D                    2934 	ld	a, l
      000DB1 21 17 03              2935 	ld	hl, #791
      000DB4 39                    2936 	add	hl, sp
      000DB5 77                    2937 	ld	(hl), a
      000DB6 E1                    2938 	pop	hl
      000DB7 7C                    2939 	ld	a, h
      000DB8 21 16 03              2940 	ld	hl, #790
      000DBB 39                    2941 	add	hl, sp
      000DBC 32                    2942 	ld	(hl-), a
      000DBD 2A                    2943 	ld	a, (hl+)
      000DBE 5F                    2944 	ld	e, a
      000DBF 56                    2945 	ld	d, (hl)
      000DC0 1A                    2946 	ld	a, (de)
      000DC1 21 13 03              2947 	ld	hl, #787
      000DC4 39                    2948 	add	hl, sp
      000DC5 22                    2949 	ld	(hl+), a
      000DC6 13                    2950 	inc	de
      000DC7 1A                    2951 	ld	a, (de)
      000DC8 77                    2952 	ld	(hl), a
                                   2953 ;main.c:321: uint8_t is_alive = tile_data & k_tile_is_alive_mask;
      000DC9 21rE0r02              2954 	ld	hl, #_k_tile_is_alive_mask
      000DCC 2A                    2955 	ld	a, (hl+)
      000DCD 4E                    2956 	ld	c, (hl)
      000DCE 21 13 03              2957 	ld	hl, #787
      000DD1 39                    2958 	add	hl, sp
      000DD2 46                    2959 	ld	b, (hl)
      000DD3 A0                    2960 	and	a, b
      000DD4 21 1B 03              2961 	ld	hl, #795
      000DD7 39                    2962 	add	hl, sp
      000DD8 77                    2963 	ld	(hl), a
                                   2964 ;main.c:323: if (!is_alive)
      000DD9 7E                    2965 	ld	a, (hl)
      000DDA B7                    2966 	or	a, a
      000DDB C2r9Ar0E              2967 	jp	NZ, 00131$
                                   2968 ;main.c:325: if (next_available_sprite_index < 39)
      000DDE 23                    2969 	inc	hl
      000DDF 7E                    2970 	ld	a, (hl)
      000DE0 D6 27                 2971 	sub	a, #0x27
      000DE2 D2r88r0F              2972 	jp	NC, 00132$
                                   2973 ;main.c:328: uint8_t sprite_index = available_sprites[next_available_sprite_index];
      000DE5 21 00 03              2974 	ld	hl,#0x300
      000DE8 39                    2975 	add	hl,sp
      000DE9 2A                    2976 	ld	a, (hl+)
      000DEA 5F                    2977 	ld	e, a
      000DEB 56                    2978 	ld	d, (hl)
      000DEC 21 1C 03              2979 	ld	hl, #796
      000DEF 39                    2980 	add	hl, sp
      000DF0 6E                    2981 	ld	l, (hl)
      000DF1 26 00                 2982 	ld	h, #0x00
      000DF3 19                    2983 	add	hl, de
      000DF4 4D                    2984 	ld	c, l
      000DF5 44                    2985 	ld	b, h
      000DF6 0A                    2986 	ld	a, (bc)
      000DF7 21 1B 03              2987 	ld	hl, #795
      000DFA 39                    2988 	add	hl, sp
                                   2989 ;main.c:329: next_available_sprite_index++;
      000DFB 22                    2990 	ld	(hl+), a
      000DFC 34                    2991 	inc	(hl)
                                   2992 ;main.c:332: update_tile_sprite(sprite_index, k_live_tile_index);
      000DFD FArEFr02              2993 	ld	a, (#_k_live_tile_index)
      000E00 F5                    2994 	push	af
      000E01 33                    2995 	inc	sp
      000E02 21 1C 03              2996 	ld	hl, #796
      000E05 39                    2997 	add	hl, sp
      000E06 7E                    2998 	ld	a, (hl)
      000E07 F5                    2999 	push	af
      000E08 33                    3000 	inc	sp
      000E09 CDr2Br03              3001 	call	_update_tile_sprite
      000E0C E1                    3002 	pop	hl
                                   3003 ;main.c:333: update_tile_position(sprite_index, cursor_tile_x, cursor_tile_y);
      000E0D 21 FF 02              3004 	ld	hl, #767
      000E10 39                    3005 	add	hl, sp
      000E11 3A                    3006 	ld	a, (hl-)
      000E12 57                    3007 	ld	d, a
      000E13 5E                    3008 	ld	e, (hl)
      000E14 D5                    3009 	push	de
      000E15 21 1D 03              3010 	ld	hl, #797
      000E18 39                    3011 	add	hl, sp
      000E19 7E                    3012 	ld	a, (hl)
      000E1A F5                    3013 	push	af
      000E1B 33                    3014 	inc	sp
      000E1C CDr3Cr03              3015 	call	_update_tile_position
      000E1F E8 03                 3016 	add	sp, #3
                                   3017 ;main.c:336: tile_data |= sprite_index << 8;
      000E21 21 1B 03              3018 	ld	hl, #795
      000E24 39                    3019 	add	hl, sp
      000E25 3A                    3020 	ld	a, (hl-)
      000E26 22                    3021 	ld	(hl+), a
      000E27 AF                    3022 	xor	a, a
      000E28 32                    3023 	ld	(hl-), a
      000E29 3A                    3024 	ld	a, (hl-)
      000E2A 2B                    3025 	dec	hl
      000E2B 32                    3026 	ld	(hl-), a
      000E2C 36 00                 3027 	ld	(hl), #0x00
      000E2E 21 13 03              3028 	ld	hl, #787
      000E31 39                    3029 	add	hl, sp
      000E32 7E                    3030 	ld	a, (hl)
      000E33 21 1A 03              3031 	ld	hl, #794
      000E36 39                    3032 	add	hl, sp
      000E37 77                    3033 	ld	(hl), a
      000E38 21 14 03              3034 	ld	hl, #788
      000E3B 39                    3035 	add	hl, sp
      000E3C 7E                    3036 	ld	a, (hl)
      000E3D 21 1B 03              3037 	ld	hl, #795
      000E40 39                    3038 	add	hl, sp
      000E41 32                    3039 	ld	(hl-), a
      000E42 7E                    3040 	ld	a, (hl)
      000E43 21 17 03              3041 	ld	hl, #791
      000E46 39                    3042 	add	hl, sp
      000E47 B6                    3043 	or	a, (hl)
      000E48 21 13 03              3044 	ld	hl, #787
      000E4B 39                    3045 	add	hl, sp
      000E4C 77                    3046 	ld	(hl), a
      000E4D 21 1B 03              3047 	ld	hl, #795
      000E50 39                    3048 	add	hl, sp
      000E51 7E                    3049 	ld	a, (hl)
      000E52 21 18 03              3050 	ld	hl, #792
      000E55 39                    3051 	add	hl, sp
      000E56 B6                    3052 	or	a, (hl)
      000E57 21 14 03              3053 	ld	hl, #788
      000E5A 39                    3054 	add	hl, sp
      000E5B 32                    3055 	ld	(hl-), a
      000E5C 7E                    3056 	ld	a, (hl)
      000E5D 21 1A 03              3057 	ld	hl, #794
      000E60 39                    3058 	add	hl, sp
      000E61 77                    3059 	ld	(hl), a
      000E62 21 14 03              3060 	ld	hl, #788
      000E65 39                    3061 	add	hl, sp
      000E66 7E                    3062 	ld	a, (hl)
      000E67 21 1B 03              3063 	ld	hl, #795
      000E6A 39                    3064 	add	hl, sp
      000E6B 77                    3065 	ld	(hl), a
                                   3066 ;main.c:339: tile_data |= k_tile_is_alive_mask;
      000E6C FArE0r02              3067 	ld	a, (#_k_tile_is_alive_mask)
      000E6F 21 17 03              3068 	ld	hl, #791
      000E72 39                    3069 	add	hl, sp
      000E73 77                    3070 	ld	(hl), a
      000E74 FArE1r02              3071 	ld	a, (#_k_tile_is_alive_mask + 1)
      000E77 21 18 03              3072 	ld	hl, #792
      000E7A 39                    3073 	add	hl, sp
      000E7B 22                    3074 	ld	(hl+), a
      000E7C 23                    3075 	inc	hl
      000E7D 7E                    3076 	ld	a, (hl)
      000E7E 21 17 03              3077 	ld	hl, #791
      000E81 39                    3078 	add	hl, sp
      000E82 B6                    3079 	or	a, (hl)
      000E83 21 13 03              3080 	ld	hl, #787
      000E86 39                    3081 	add	hl, sp
      000E87 77                    3082 	ld	(hl), a
      000E88 21 1B 03              3083 	ld	hl, #795
      000E8B 39                    3084 	add	hl, sp
      000E8C 7E                    3085 	ld	a, (hl)
      000E8D 21 18 03              3086 	ld	hl, #792
      000E90 39                    3087 	add	hl, sp
      000E91 B6                    3088 	or	a, (hl)
      000E92 21 14 03              3089 	ld	hl, #788
      000E95 39                    3090 	add	hl, sp
      000E96 77                    3091 	ld	(hl), a
      000E97 C3r88r0F              3092 	jp	00132$
      000E9A                       3093 00131$:
                                   3094 ;main.c:345: uint8_t sprite_index = (tile_data & k_tile_sprite_index_mask) >> 8;
      000E9A FArECr02              3095 	ld	a, (#_k_tile_sprite_index_mask)
      000E9D 21 17 03              3096 	ld	hl, #791
      000EA0 39                    3097 	add	hl, sp
      000EA1 77                    3098 	ld	(hl), a
      000EA2 FArEDr02              3099 	ld	a, (#_k_tile_sprite_index_mask + 1)
      000EA5 21 18 03              3100 	ld	hl, #792
      000EA8 39                    3101 	add	hl, sp
      000EA9 77                    3102 	ld	(hl), a
      000EAA 21 13 03              3103 	ld	hl, #787
      000EAD 39                    3104 	add	hl, sp
      000EAE 7E                    3105 	ld	a, (hl)
      000EAF 21 17 03              3106 	ld	hl, #791
      000EB2 39                    3107 	add	hl, sp
      000EB3 A6                    3108 	and	a, (hl)
      000EB4 21 1A 03              3109 	ld	hl, #794
      000EB7 39                    3110 	add	hl, sp
      000EB8 77                    3111 	ld	(hl), a
      000EB9 21 14 03              3112 	ld	hl, #788
      000EBC 39                    3113 	add	hl, sp
      000EBD 7E                    3114 	ld	a, (hl)
      000EBE 21 18 03              3115 	ld	hl, #792
      000EC1 39                    3116 	add	hl, sp
      000EC2 A6                    3117 	and	a, (hl)
      000EC3 21 1B 03              3118 	ld	hl, #795
      000EC6 39                    3119 	add	hl, sp
      000EC7 77                    3120 	ld	(hl), a
                                   3121 ;main.c:348: update_tile_sprite(sprite_index, k_empty_tile_index);
      000EC8 FArEEr02              3122 	ld	a, (#_k_empty_tile_index)
      000ECB F5                    3123 	push	af
      000ECC 33                    3124 	inc	sp
      000ECD 21 1C 03              3125 	ld	hl, #796
      000ED0 39                    3126 	add	hl, sp
      000ED1 7E                    3127 	ld	a, (hl)
      000ED2 F5                    3128 	push	af
      000ED3 33                    3129 	inc	sp
      000ED4 CDr2Br03              3130 	call	_update_tile_sprite
      000ED7 E1                    3131 	pop	hl
                                   3132 ;main.c:349: update_tile_position(sprite_index, 21, 19);
      000ED8 21 15 13              3133 	ld	hl, #0x1315
      000EDB E5                    3134 	push	hl
      000EDC 21 1D 03              3135 	ld	hl, #797
      000EDF 39                    3136 	add	hl, sp
      000EE0 7E                    3137 	ld	a, (hl)
      000EE1 F5                    3138 	push	af
      000EE2 33                    3139 	inc	sp
      000EE3 CDr3Cr03              3140 	call	_update_tile_position
      000EE6 E8 03                 3141 	add	sp, #3
                                   3142 ;main.c:352: next_available_sprite_index--;
      000EE8 21 1C 03              3143 	ld	hl, #796
      000EEB 39                    3144 	add	hl, sp
      000EEC 35                    3145 	dec	(hl)
                                   3146 ;main.c:353: available_sprites[next_available_sprite_index] = sprite_index;
      000EED 21 00 03              3147 	ld	hl,#0x300
      000EF0 39                    3148 	add	hl,sp
      000EF1 2A                    3149 	ld	a, (hl+)
      000EF2 5F                    3150 	ld	e, a
      000EF3 56                    3151 	ld	d, (hl)
      000EF4 21 1C 03              3152 	ld	hl, #796
      000EF7 39                    3153 	add	hl, sp
      000EF8 6E                    3154 	ld	l, (hl)
      000EF9 26 00                 3155 	ld	h, #0x00
      000EFB 19                    3156 	add	hl, de
      000EFC 4D                    3157 	ld	c, l
      000EFD 44                    3158 	ld	b, h
      000EFE 21 1B 03              3159 	ld	hl, #795
      000F01 39                    3160 	add	hl, sp
      000F02 7E                    3161 	ld	a, (hl)
      000F03 02                    3162 	ld	(bc), a
                                   3163 ;main.c:356: tile_data &= ~k_tile_sprite_index_mask;
      000F04 FArECr02              3164 	ld	a, (#_k_tile_sprite_index_mask)
      000F07 21 1A 03              3165 	ld	hl, #794
      000F0A 39                    3166 	add	hl, sp
      000F0B 77                    3167 	ld	(hl), a
      000F0C FArEDr02              3168 	ld	a, (#_k_tile_sprite_index_mask + 1)
      000F0F 21 1B 03              3169 	ld	hl, #795
      000F12 39                    3170 	add	hl, sp
      000F13 32                    3171 	ld	(hl-), a
      000F14 7E                    3172 	ld	a, (hl)
      000F15 2F                    3173 	cpl
      000F16 21 17 03              3174 	ld	hl, #791
      000F19 39                    3175 	add	hl, sp
      000F1A 77                    3176 	ld	(hl), a
      000F1B 21 1B 03              3177 	ld	hl, #795
      000F1E 39                    3178 	add	hl, sp
      000F1F 7E                    3179 	ld	a, (hl)
      000F20 2F                    3180 	cpl
      000F21 21 18 03              3181 	ld	hl, #792
      000F24 39                    3182 	add	hl, sp
      000F25 77                    3183 	ld	(hl), a
      000F26 21 13 03              3184 	ld	hl, #787
      000F29 39                    3185 	add	hl, sp
      000F2A 7E                    3186 	ld	a, (hl)
      000F2B 21 17 03              3187 	ld	hl, #791
      000F2E 39                    3188 	add	hl, sp
      000F2F A6                    3189 	and	a, (hl)
      000F30 21 1A 03              3190 	ld	hl, #794
      000F33 39                    3191 	add	hl, sp
      000F34 77                    3192 	ld	(hl), a
      000F35 21 14 03              3193 	ld	hl, #788
      000F38 39                    3194 	add	hl, sp
      000F39 7E                    3195 	ld	a, (hl)
      000F3A 21 18 03              3196 	ld	hl, #792
      000F3D 39                    3197 	add	hl, sp
      000F3E A6                    3198 	and	a, (hl)
      000F3F 21 1B 03              3199 	ld	hl, #795
      000F42 39                    3200 	add	hl, sp
      000F43 32                    3201 	ld	(hl-), a
      000F44 7E                    3202 	ld	a, (hl)
      000F45 21 17 03              3203 	ld	hl, #791
      000F48 39                    3204 	add	hl, sp
      000F49 77                    3205 	ld	(hl), a
      000F4A 21 1B 03              3206 	ld	hl, #795
      000F4D 39                    3207 	add	hl, sp
      000F4E 7E                    3208 	ld	a, (hl)
      000F4F 21 18 03              3209 	ld	hl, #792
      000F52 39                    3210 	add	hl, sp
      000F53 77                    3211 	ld	(hl), a
                                   3212 ;main.c:359: tile_data &= ~k_tile_is_alive_mask;
      000F54 FArE0r02              3213 	ld	a, (#_k_tile_is_alive_mask)
      000F57 21 1A 03              3214 	ld	hl, #794
      000F5A 39                    3215 	add	hl, sp
      000F5B 77                    3216 	ld	(hl), a
      000F5C FArE1r02              3217 	ld	a, (#_k_tile_is_alive_mask + 1)
      000F5F 21 1B 03              3218 	ld	hl, #795
      000F62 39                    3219 	add	hl, sp
      000F63 32                    3220 	ld	(hl-), a
      000F64 7E                    3221 	ld	a, (hl)
      000F65 2F                    3222 	cpl
      000F66 22                    3223 	ld	(hl+), a
      000F67 7E                    3224 	ld	a, (hl)
      000F68 2F                    3225 	cpl
      000F69 77                    3226 	ld	(hl), a
      000F6A 21 17 03              3227 	ld	hl, #791
      000F6D 39                    3228 	add	hl, sp
      000F6E 7E                    3229 	ld	a, (hl)
      000F6F 21 1A 03              3230 	ld	hl, #794
      000F72 39                    3231 	add	hl, sp
      000F73 A6                    3232 	and	a, (hl)
      000F74 21 13 03              3233 	ld	hl, #787
      000F77 39                    3234 	add	hl, sp
      000F78 77                    3235 	ld	(hl), a
      000F79 21 18 03              3236 	ld	hl, #792
      000F7C 39                    3237 	add	hl, sp
      000F7D 7E                    3238 	ld	a, (hl)
      000F7E 21 1B 03              3239 	ld	hl, #795
      000F81 39                    3240 	add	hl, sp
      000F82 A6                    3241 	and	a, (hl)
      000F83 21 14 03              3242 	ld	hl, #788
      000F86 39                    3243 	add	hl, sp
      000F87 77                    3244 	ld	(hl), a
      000F88                       3245 00132$:
                                   3246 ;main.c:363: board[board_index] = tile_data;
      000F88 21 15 03              3247 	ld	hl,#0x315
      000F8B 39                    3248 	add	hl,sp
      000F8C 2A                    3249 	ld	a, (hl+)
      000F8D 5F                    3250 	ld	e, a
      000F8E 56                    3251 	ld	d, (hl)
      000F8F 21 13 03              3252 	ld	hl, #787
      000F92 39                    3253 	add	hl, sp
      000F93 2A                    3254 	ld	a, (hl+)
      000F94 12                    3255 	ld	(de), a
      000F95 13                    3256 	inc	de
      000F96 7E                    3257 	ld	a, (hl)
      000F97 12                    3258 	ld	(de), a
      000F98                       3259 00137$:
                                   3260 ;main.c:368: wait_vbls_done(1);
      000F98 3E 01                 3261 	ld	a, #0x01
      000F9A F5                    3262 	push	af
      000F9B 33                    3263 	inc	sp
      000F9C CDrBFr02              3264 	call	_wait_vbls_done
      000F9F 33                    3265 	inc	sp
      000FA0 C3rCCr05              3266 	jp	00139$
                                   3267 ;main.c:370: }
      000FA3 21 1D 03              3268 	ld	hl, #797
      000FA6 39                    3269 	add	hl, sp
      000FA7 F9                    3270 	ld	sp, hl
      000FA8 C9                    3271 	ret
                                   3272 	.area _CODE
                                   3273 	.area _INITIALIZER
      000000                       3274 __xinit__k_sprites:
      000000 00                    3275 	.db #0x00	; 0
      000001 00                    3276 	.db #0x00	; 0
      000002 00                    3277 	.db #0x00	; 0
      000003 00                    3278 	.db #0x00	; 0
      000004 00                    3279 	.db #0x00	; 0
      000005 00                    3280 	.db #0x00	; 0
      000006 00                    3281 	.db #0x00	; 0
      000007 00                    3282 	.db #0x00	; 0
      000008 00                    3283 	.db #0x00	; 0
      000009 00                    3284 	.db #0x00	; 0
      00000A 00                    3285 	.db #0x00	; 0
      00000B 00                    3286 	.db #0x00	; 0
      00000C 00                    3287 	.db #0x00	; 0
      00000D 00                    3288 	.db #0x00	; 0
      00000E 00                    3289 	.db #0x00	; 0
      00000F 00                    3290 	.db #0x00	; 0
      000010 00                    3291 	.db #0x00	; 0
      000011 00                    3292 	.db #0x00	; 0
      000012 7F                    3293 	.db #0x7f	; 127
      000013 7F                    3294 	.db #0x7f	; 127
      000014 7F                    3295 	.db #0x7f	; 127
      000015 7F                    3296 	.db #0x7f	; 127
      000016 7F                    3297 	.db #0x7f	; 127
      000017 7F                    3298 	.db #0x7f	; 127
      000018 7F                    3299 	.db #0x7f	; 127
      000019 7F                    3300 	.db #0x7f	; 127
      00001A 7F                    3301 	.db #0x7f	; 127
      00001B 7F                    3302 	.db #0x7f	; 127
      00001C 7F                    3303 	.db #0x7f	; 127
      00001D 7F                    3304 	.db #0x7f	; 127
      00001E 7F                    3305 	.db #0x7f	; 127
      00001F 7F                    3306 	.db #0x7f	; 127
      000020 00                    3307 	.db #0x00	; 0
      000021 00                    3308 	.db #0x00	; 0
      000022 00                    3309 	.db #0x00	; 0
      000023 3E                    3310 	.db #0x3e	; 62
      000024 00                    3311 	.db #0x00	; 0
      000025 41                    3312 	.db #0x41	; 65	'A'
      000026 00                    3313 	.db #0x00	; 0
      000027 41                    3314 	.db #0x41	; 65	'A'
      000028 00                    3315 	.db #0x00	; 0
      000029 41                    3316 	.db #0x41	; 65	'A'
      00002A 00                    3317 	.db #0x00	; 0
      00002B 41                    3318 	.db #0x41	; 65	'A'
      00002C 00                    3319 	.db #0x00	; 0
      00002D 41                    3320 	.db #0x41	; 65	'A'
      00002E 00                    3321 	.db #0x00	; 0
      00002F 3E                    3322 	.db #0x3e	; 62
      000030 00                    3323 	.db #0x00	; 0
      000031 00                    3324 	.db #0x00	; 0
      000032 41                    3325 	.db #0x41	; 65	'A'
      000033 7F                    3326 	.db #0x7f	; 127
      000034 3E                    3327 	.db #0x3e	; 62
      000035 7F                    3328 	.db #0x7f	; 127
      000036 3E                    3329 	.db #0x3e	; 62
      000037 7F                    3330 	.db #0x7f	; 127
      000038 3E                    3331 	.db #0x3e	; 62
      000039 7F                    3332 	.db #0x7f	; 127
      00003A 3E                    3333 	.db #0x3e	; 62
      00003B 7F                    3334 	.db #0x7f	; 127
      00003C 3E                    3335 	.db #0x3e	; 62
      00003D 7F                    3336 	.db #0x7f	; 127
      00003E 41                    3337 	.db #0x41	; 65	'A'
      00003F 7F                    3338 	.db #0x7f	; 127
                                   3339 	.area _CABS (ABS)
