                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _update_tile_position
                                     13 	.globl _update_tile_sprite
                                     14 	.globl _update_cursor_position
                                     15 	.globl _update_cursor_sprite
                                     16 	.globl _wait_vbls_done
                                     17 	.globl _is_input_held
                                     18 	.globl _was_input_released
                                     19 	.globl _was_input_depressed
                                     20 	.globl _update_input_state
                                     21 	.globl _set_sprite_data
                                     22 	.globl _set_bkg_tiles
                                     23 	.globl _set_bkg_data
                                     24 	.globl _wait_vbl_done
                                     25 	.globl _joypad
                                     26 	.globl _k_sprites
                                     27 	.globl _k_cursor_sprite_index
                                     28 	.globl _k_cursor_live_tile_index
                                     29 	.globl _k_cursor_empty_tile_index
                                     30 	.globl _k_live_tile_index
                                     31 	.globl _k_empty_tile_index
                                     32 	.globl _k_tile_was_alive_mask
                                     33 	.globl _k_tile_is_alive_mask
                                     34 	.globl _k_tile_sprite_index_mask
                                     35 	.globl _k_execution_state_active_mask
                                     36 	.globl _k_background_tiles
                                     37 	.globl _k_background_map
                                     38 ;--------------------------------------------------------
                                     39 ; special function registers
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area _DATA
                                     45 ;--------------------------------------------------------
                                     46 ; ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area _INITIALIZED
      000000                         49 _k_sprites::
      000000                         50 	.ds 64
                                     51 ;--------------------------------------------------------
                                     52 ; absolute external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area _DABS (ABS)
                                     55 ;--------------------------------------------------------
                                     56 ; global & static initialisations
                                     57 ;--------------------------------------------------------
                                     58 	.area _HOME
                                     59 	.area _GSINIT
                                     60 	.area _GSFINAL
                                     61 	.area _GSINIT
                                     62 ;--------------------------------------------------------
                                     63 ; Home
                                     64 ;--------------------------------------------------------
                                     65 	.area _HOME
                                     66 	.area _HOME
                                     67 ;--------------------------------------------------------
                                     68 ; code
                                     69 ;--------------------------------------------------------
                                     70 	.area _CODE
                                     71 ;input.h:31: void update_input_state(struct input_state* is, uint8_t button_state)
                                     72 ;	---------------------------------
                                     73 ; Function update_input_state
                                     74 ; ---------------------------------
      000000                         75 _update_input_state::
      000000 E8 FB                   76 	add	sp, #-5
                                     77 ;input.h:34: is->previous_state = is->current_state;
      000002 F8 07                   78 	ldhl	sp,	#7
      000004 7E                      79 	ld	a, (hl)
      000005 F8 00                   80 	ldhl	sp,	#0
      000007 77                      81 	ld	(hl), a
      000008 F8 08                   82 	ldhl	sp,	#8
      00000A 7E                      83 	ld	a, (hl)
      00000B F8 01                   84 	ldhl	sp,	#1
      00000D 22                      85 	ld	(hl+), a
      00000E C1                      86 	pop	bc
      00000F C5                      87 	push	bc
      000010 03                      88 	inc	bc
      000011 0A                      89 	ld	a, (bc)
      000012 77                      90 	ld	(hl), a
      000013 D1                      91 	pop	de
      000014 D5                      92 	push	de
      000015 7E                      93 	ld	a, (hl)
      000016 12                      94 	ld	(de), a
                                     95 ;input.h:37: is->current_state = ((button_state & J_A) == J_A) << btn_a;
      000017 F8 09                   96 	ldhl	sp,	#9
      000019 7E                      97 	ld	a, (hl)
      00001A F8 03                   98 	ldhl	sp,	#3
      00001C 22                      99 	ld	(hl+), a
      00001D AF                     100 	xor	a, a
      00001E 32                     101 	ld	(hl-), a
      00001F 7E                     102 	ld	a, (hl)
      000020 E6 10                  103 	and	a, #0x10
      000022 5F                     104 	ld	e, a
      000023 16 00                  105 	ld	d, #0x00
      000025 7B                     106 	ld	a, e
      000026 D6 10                  107 	sub	a, #0x10
      000028 B2                     108 	or	a, d
      000029 3E 01                  109 	ld	a, #0x01
      00002B 28 01                  110 	jr	Z, 00104$
      00002D AF                     111 	xor	a, a
      00002E                        112 00104$:
                                    113 ;input.h:38: is->current_state |= ((button_state & J_B) == J_B) << btn_b;
      00002E 02                     114 	ld	(bc), a
      00002F 5F                     115 	ld	e, a
      000030 F8 03                  116 	ldhl	sp,	#3
      000032 7E                     117 	ld	a, (hl)
      000033 E6 20                  118 	and	a, #0x20
                                    119 ;	spillPairReg hl
                                    120 ;	spillPairReg hl
      000035 2E 00                  121 	ld	l, #0x00
      000037 D6 20                  122 	sub	a, #0x20
      000039 B5                     123 	or	a, l
      00003A 3E 01                  124 	ld	a, #0x01
      00003C 28 01                  125 	jr	Z, 00106$
      00003E AF                     126 	xor	a, a
      00003F                        127 00106$:
      00003F 87                     128 	add	a, a
      000040 B3                     129 	or	a, e
      000041 5F                     130 	ld	e, a
      000042 02                     131 	ld	(bc), a
                                    132 ;input.h:39: is->current_state |= ((button_state & J_UP) == J_UP) << btn_up;
      000043 F8 03                  133 	ldhl	sp,	#3
      000045 7E                     134 	ld	a, (hl)
      000046 E6 04                  135 	and	a, #0x04
                                    136 ;	spillPairReg hl
                                    137 ;	spillPairReg hl
      000048 2E 00                  138 	ld	l, #0x00
      00004A D6 04                  139 	sub	a, #0x04
      00004C B5                     140 	or	a, l
      00004D 3E 01                  141 	ld	a, #0x01
      00004F 28 01                  142 	jr	Z, 00108$
      000051 AF                     143 	xor	a, a
      000052                        144 00108$:
      000052 87                     145 	add	a, a
      000053 87                     146 	add	a, a
      000054 B3                     147 	or	a, e
      000055 5F                     148 	ld	e, a
      000056 02                     149 	ld	(bc), a
                                    150 ;input.h:40: is->current_state |= ((button_state & J_DOWN) == J_DOWN) << btn_down;
      000057 F8 03                  151 	ldhl	sp,	#3
      000059 7E                     152 	ld	a, (hl)
      00005A E6 08                  153 	and	a, #0x08
                                    154 ;	spillPairReg hl
                                    155 ;	spillPairReg hl
      00005C 2E 00                  156 	ld	l, #0x00
      00005E D6 08                  157 	sub	a, #0x08
      000060 B5                     158 	or	a, l
      000061 3E 01                  159 	ld	a, #0x01
      000063 28 01                  160 	jr	Z, 00110$
      000065 AF                     161 	xor	a, a
      000066                        162 00110$:
      000066 87                     163 	add	a, a
      000067 87                     164 	add	a, a
      000068 87                     165 	add	a, a
      000069 B3                     166 	or	a, e
      00006A 5F                     167 	ld	e, a
      00006B 02                     168 	ld	(bc), a
                                    169 ;input.h:41: is->current_state |= ((button_state & J_LEFT) == J_LEFT) << btn_left;
      00006C F8 03                  170 	ldhl	sp,	#3
      00006E 7E                     171 	ld	a, (hl)
      00006F E6 02                  172 	and	a, #0x02
                                    173 ;	spillPairReg hl
                                    174 ;	spillPairReg hl
      000071 2E 00                  175 	ld	l, #0x00
      000073 D6 02                  176 	sub	a, #0x02
      000075 B5                     177 	or	a, l
      000076 3E 01                  178 	ld	a, #0x01
      000078 28 01                  179 	jr	Z, 00112$
      00007A AF                     180 	xor	a, a
      00007B                        181 00112$:
      00007B CB 37                  182 	swap	a
      00007D E6 F0                  183 	and	a, #0xf0
      00007F B3                     184 	or	a, e
      000080 5F                     185 	ld	e, a
      000081 02                     186 	ld	(bc), a
                                    187 ;input.h:42: is->current_state |= ((button_state & J_RIGHT) == J_RIGHT) << btn_right;
      000082 F8 03                  188 	ldhl	sp,	#3
      000084 7E                     189 	ld	a, (hl)
      000085 E6 01                  190 	and	a, #0x01
                                    191 ;	spillPairReg hl
                                    192 ;	spillPairReg hl
      000087 2E 00                  193 	ld	l, #0x00
      000089 3D                     194 	dec	a
      00008A B5                     195 	or	a, l
      00008B 3E 01                  196 	ld	a, #0x01
      00008D 28 01                  197 	jr	Z, 00114$
      00008F AF                     198 	xor	a, a
      000090                        199 00114$:
      000090 CB 37                  200 	swap	a
      000092 07                     201 	rlca
      000093 E6 E0                  202 	and	a, #0xe0
      000095 B3                     203 	or	a, e
      000096 5F                     204 	ld	e, a
      000097 02                     205 	ld	(bc), a
                                    206 ;input.h:43: is->current_state |= ((button_state & J_START) == J_START) << btn_start;
      000098 F8 03                  207 	ldhl	sp,	#3
      00009A 7E                     208 	ld	a, (hl)
      00009B E6 80                  209 	and	a, #0x80
                                    210 ;	spillPairReg hl
                                    211 ;	spillPairReg hl
      00009D 2E 00                  212 	ld	l, #0x00
      00009F D6 80                  213 	sub	a, #0x80
      0000A1 B5                     214 	or	a, l
      0000A2 3E 01                  215 	ld	a, #0x01
      0000A4 28 01                  216 	jr	Z, 00116$
      0000A6 AF                     217 	xor	a, a
      0000A7                        218 00116$:
      0000A7 0F                     219 	rrca
      0000A8 0F                     220 	rrca
      0000A9 E6 C0                  221 	and	a, #0xc0
      0000AB B3                     222 	or	a, e
      0000AC 5F                     223 	ld	e, a
      0000AD 02                     224 	ld	(bc), a
                                    225 ;input.h:44: is->current_state |= ((button_state & J_SELECT) == J_SELECT) << btn_select;
      0000AE F8 03                  226 	ldhl	sp,	#3
      0000B0 7E                     227 	ld	a, (hl)
      0000B1 E6 40                  228 	and	a, #0x40
                                    229 ;	spillPairReg hl
                                    230 ;	spillPairReg hl
      0000B3 2E 00                  231 	ld	l, #0x00
      0000B5 D6 40                  232 	sub	a, #0x40
      0000B7 B5                     233 	or	a, l
      0000B8 3E 01                  234 	ld	a, #0x01
      0000BA 28 01                  235 	jr	Z, 00118$
      0000BC AF                     236 	xor	a, a
      0000BD                        237 00118$:
      0000BD 0F                     238 	rrca
      0000BE E6 80                  239 	and	a, #0x80
      0000C0 B3                     240 	or	a, e
      0000C1 57                     241 	ld	d, a
      0000C2 02                     242 	ld	(bc), a
                                    243 ;input.h:47: is->held_buttons = is->previous_state & is->current_state;
      0000C3 C1                     244 	pop	bc
      0000C4 C5                     245 	push	bc
      0000C5 03                     246 	inc	bc
      0000C6 03                     247 	inc	bc
      0000C7 F8 02                  248 	ldhl	sp,	#2
                                    249 ;input.h:50: is->depressed_buttons = (is->current_state ^ is->held_buttons);
                                    250 ;input.h:53: is->released_buttons = (is->previous_state ^ is->held_buttons);
      0000C9 3A                     251 	ld	a, (hl-)
      0000CA 2B                     252 	dec	hl
      0000CB A2                     253 	and	a, d
      0000CC 5F                     254 	ld	e, a
      0000CD 02                     255 	ld	(bc), a
      0000CE C1                     256 	pop	bc
      0000CF C5                     257 	push	bc
      0000D0 03                     258 	inc	bc
      0000D1 03                     259 	inc	bc
      0000D2 03                     260 	inc	bc
      0000D3 7A                     261 	ld	a, d
      0000D4 AB                     262 	xor	a, e
      0000D5 02                     263 	ld	(bc), a
      0000D6 D5                     264 	push	de
      0000D7 2A                     265 	ld	a, (hl+)
      0000D8 5F                     266 	ld	e, a
      0000D9 56                     267 	ld	d, (hl)
      0000DA 21 04 00               268 	ld	hl, #0x0004
      0000DD 19                     269 	add	hl, de
      0000DE D1                     270 	pop	de
      0000DF 4D                     271 	ld	c, l
      0000E0 44                     272 	ld	b, h
      0000E1 F8 02                  273 	ldhl	sp,	#2
      0000E3 7E                     274 	ld	a, (hl)
      0000E4 AB                     275 	xor	a, e
      0000E5 02                     276 	ld	(bc), a
                                    277 ;input.h:54: }
      0000E6 E8 05                  278 	add	sp, #5
      0000E8 C9                     279 	ret
      0000E9                        280 _k_background_map:
      0000E9 00                     281 	.db #0x00	; 0
      0000EA 00                     282 	.db #0x00	; 0
      0000EB 00                     283 	.db #0x00	; 0
      0000EC 00                     284 	.db #0x00	; 0
      0000ED 00                     285 	.db #0x00	; 0
      0000EE 00                     286 	.db #0x00	; 0
      0000EF 00                     287 	.db #0x00	; 0
      0000F0 00                     288 	.db #0x00	; 0
      0000F1 00                     289 	.db #0x00	; 0
      0000F2 00                     290 	.db #0x00	; 0
      0000F3 00                     291 	.db #0x00	; 0
      0000F4 00                     292 	.db #0x00	; 0
      0000F5 00                     293 	.db #0x00	; 0
      0000F6 00                     294 	.db #0x00	; 0
      0000F7 00                     295 	.db #0x00	; 0
      0000F8 00                     296 	.db #0x00	; 0
      0000F9 00                     297 	.db #0x00	; 0
      0000FA 00                     298 	.db #0x00	; 0
      0000FB 00                     299 	.db #0x00	; 0
      0000FC 00                     300 	.db #0x00	; 0
      0000FD 00                     301 	.db #0x00	; 0
      0000FE 00                     302 	.db #0x00	; 0
      0000FF 00                     303 	.db #0x00	; 0
      000100 00                     304 	.db #0x00	; 0
      000101 00                     305 	.db #0x00	; 0
      000102 00                     306 	.db #0x00	; 0
      000103 00                     307 	.db #0x00	; 0
      000104 00                     308 	.db #0x00	; 0
      000105 00                     309 	.db #0x00	; 0
      000106 00                     310 	.db #0x00	; 0
      000107 00                     311 	.db #0x00	; 0
      000108 00                     312 	.db #0x00	; 0
      000109 00                     313 	.db #0x00	; 0
      00010A 00                     314 	.db #0x00	; 0
      00010B 00                     315 	.db #0x00	; 0
      00010C 00                     316 	.db #0x00	; 0
      00010D 00                     317 	.db #0x00	; 0
      00010E 00                     318 	.db #0x00	; 0
      00010F 00                     319 	.db #0x00	; 0
      000110 00                     320 	.db #0x00	; 0
      000111 00                     321 	.db #0x00	; 0
      000112 00                     322 	.db #0x00	; 0
      000113 00                     323 	.db #0x00	; 0
      000114 00                     324 	.db #0x00	; 0
      000115 00                     325 	.db #0x00	; 0
      000116 00                     326 	.db #0x00	; 0
      000117 00                     327 	.db #0x00	; 0
      000118 00                     328 	.db #0x00	; 0
      000119 00                     329 	.db #0x00	; 0
      00011A 00                     330 	.db #0x00	; 0
      00011B 00                     331 	.db #0x00	; 0
      00011C 00                     332 	.db #0x00	; 0
      00011D 00                     333 	.db #0x00	; 0
      00011E 00                     334 	.db #0x00	; 0
      00011F 00                     335 	.db #0x00	; 0
      000120 00                     336 	.db #0x00	; 0
      000121 00                     337 	.db #0x00	; 0
      000122 00                     338 	.db #0x00	; 0
      000123 00                     339 	.db #0x00	; 0
      000124 00                     340 	.db #0x00	; 0
      000125 00                     341 	.db #0x00	; 0
      000126 00                     342 	.db #0x00	; 0
      000127 00                     343 	.db #0x00	; 0
      000128 00                     344 	.db #0x00	; 0
      000129 00                     345 	.db #0x00	; 0
      00012A 00                     346 	.db #0x00	; 0
      00012B 00                     347 	.db #0x00	; 0
      00012C 00                     348 	.db #0x00	; 0
      00012D 00                     349 	.db #0x00	; 0
      00012E 00                     350 	.db #0x00	; 0
      00012F 00                     351 	.db #0x00	; 0
      000130 00                     352 	.db #0x00	; 0
      000131 00                     353 	.db #0x00	; 0
      000132 00                     354 	.db #0x00	; 0
      000133 00                     355 	.db #0x00	; 0
      000134 00                     356 	.db #0x00	; 0
      000135 00                     357 	.db #0x00	; 0
      000136 00                     358 	.db #0x00	; 0
      000137 00                     359 	.db #0x00	; 0
      000138 00                     360 	.db #0x00	; 0
      000139 00                     361 	.db #0x00	; 0
      00013A 00                     362 	.db #0x00	; 0
      00013B 00                     363 	.db #0x00	; 0
      00013C 00                     364 	.db #0x00	; 0
      00013D 00                     365 	.db #0x00	; 0
      00013E 00                     366 	.db #0x00	; 0
      00013F 00                     367 	.db #0x00	; 0
      000140 00                     368 	.db #0x00	; 0
      000141 00                     369 	.db #0x00	; 0
      000142 00                     370 	.db #0x00	; 0
      000143 00                     371 	.db #0x00	; 0
      000144 00                     372 	.db #0x00	; 0
      000145 00                     373 	.db #0x00	; 0
      000146 00                     374 	.db #0x00	; 0
      000147 00                     375 	.db #0x00	; 0
      000148 00                     376 	.db #0x00	; 0
      000149 00                     377 	.db #0x00	; 0
      00014A 00                     378 	.db #0x00	; 0
      00014B 00                     379 	.db #0x00	; 0
      00014C 00                     380 	.db #0x00	; 0
      00014D 00                     381 	.db #0x00	; 0
      00014E 00                     382 	.db #0x00	; 0
      00014F 00                     383 	.db #0x00	; 0
      000150 00                     384 	.db #0x00	; 0
      000151 00                     385 	.db #0x00	; 0
      000152 00                     386 	.db #0x00	; 0
      000153 00                     387 	.db #0x00	; 0
      000154 00                     388 	.db #0x00	; 0
      000155 00                     389 	.db #0x00	; 0
      000156 00                     390 	.db #0x00	; 0
      000157 00                     391 	.db #0x00	; 0
      000158 00                     392 	.db #0x00	; 0
      000159 00                     393 	.db #0x00	; 0
      00015A 00                     394 	.db #0x00	; 0
      00015B 00                     395 	.db #0x00	; 0
      00015C 00                     396 	.db #0x00	; 0
      00015D 00                     397 	.db #0x00	; 0
      00015E 00                     398 	.db #0x00	; 0
      00015F 00                     399 	.db #0x00	; 0
      000160 00                     400 	.db #0x00	; 0
      000161 00                     401 	.db #0x00	; 0
      000162 00                     402 	.db #0x00	; 0
      000163 00                     403 	.db #0x00	; 0
      000164 00                     404 	.db #0x00	; 0
      000165 00                     405 	.db #0x00	; 0
      000166 00                     406 	.db #0x00	; 0
      000167 00                     407 	.db #0x00	; 0
      000168 00                     408 	.db #0x00	; 0
      000169 00                     409 	.db #0x00	; 0
      00016A 00                     410 	.db #0x00	; 0
      00016B 00                     411 	.db #0x00	; 0
      00016C 00                     412 	.db #0x00	; 0
      00016D 00                     413 	.db #0x00	; 0
      00016E 00                     414 	.db #0x00	; 0
      00016F 00                     415 	.db #0x00	; 0
      000170 00                     416 	.db #0x00	; 0
      000171 00                     417 	.db #0x00	; 0
      000172 00                     418 	.db #0x00	; 0
      000173 00                     419 	.db #0x00	; 0
      000174 00                     420 	.db #0x00	; 0
      000175 00                     421 	.db #0x00	; 0
      000176 00                     422 	.db #0x00	; 0
      000177 00                     423 	.db #0x00	; 0
      000178 00                     424 	.db #0x00	; 0
      000179 00                     425 	.db #0x00	; 0
      00017A 00                     426 	.db #0x00	; 0
      00017B 00                     427 	.db #0x00	; 0
      00017C 00                     428 	.db #0x00	; 0
      00017D 00                     429 	.db #0x00	; 0
      00017E 00                     430 	.db #0x00	; 0
      00017F 00                     431 	.db #0x00	; 0
      000180 00                     432 	.db #0x00	; 0
      000181 00                     433 	.db #0x00	; 0
      000182 00                     434 	.db #0x00	; 0
      000183 00                     435 	.db #0x00	; 0
      000184 00                     436 	.db #0x00	; 0
      000185 00                     437 	.db #0x00	; 0
      000186 00                     438 	.db #0x00	; 0
      000187 00                     439 	.db #0x00	; 0
      000188 00                     440 	.db #0x00	; 0
      000189 00                     441 	.db #0x00	; 0
      00018A 00                     442 	.db #0x00	; 0
      00018B 00                     443 	.db #0x00	; 0
      00018C 00                     444 	.db #0x00	; 0
      00018D 00                     445 	.db #0x00	; 0
      00018E 00                     446 	.db #0x00	; 0
      00018F 00                     447 	.db #0x00	; 0
      000190 00                     448 	.db #0x00	; 0
      000191 00                     449 	.db #0x00	; 0
      000192 00                     450 	.db #0x00	; 0
      000193 00                     451 	.db #0x00	; 0
      000194 00                     452 	.db #0x00	; 0
      000195 00                     453 	.db #0x00	; 0
      000196 00                     454 	.db #0x00	; 0
      000197 00                     455 	.db #0x00	; 0
      000198 00                     456 	.db #0x00	; 0
      000199 00                     457 	.db #0x00	; 0
      00019A 00                     458 	.db #0x00	; 0
      00019B 00                     459 	.db #0x00	; 0
      00019C 00                     460 	.db #0x00	; 0
      00019D 00                     461 	.db #0x00	; 0
      00019E 00                     462 	.db #0x00	; 0
      00019F 00                     463 	.db #0x00	; 0
      0001A0 00                     464 	.db #0x00	; 0
      0001A1 00                     465 	.db #0x00	; 0
      0001A2 00                     466 	.db #0x00	; 0
      0001A3 00                     467 	.db #0x00	; 0
      0001A4 00                     468 	.db #0x00	; 0
      0001A5 00                     469 	.db #0x00	; 0
      0001A6 00                     470 	.db #0x00	; 0
      0001A7 00                     471 	.db #0x00	; 0
      0001A8 00                     472 	.db #0x00	; 0
      0001A9 00                     473 	.db #0x00	; 0
      0001AA 00                     474 	.db #0x00	; 0
      0001AB 00                     475 	.db #0x00	; 0
      0001AC 00                     476 	.db #0x00	; 0
      0001AD 00                     477 	.db #0x00	; 0
      0001AE 00                     478 	.db #0x00	; 0
      0001AF 00                     479 	.db #0x00	; 0
      0001B0 00                     480 	.db #0x00	; 0
      0001B1 00                     481 	.db #0x00	; 0
      0001B2 00                     482 	.db #0x00	; 0
      0001B3 00                     483 	.db #0x00	; 0
      0001B4 00                     484 	.db #0x00	; 0
      0001B5 00                     485 	.db #0x00	; 0
      0001B6 00                     486 	.db #0x00	; 0
      0001B7 00                     487 	.db #0x00	; 0
      0001B8 00                     488 	.db #0x00	; 0
      0001B9 00                     489 	.db #0x00	; 0
      0001BA 00                     490 	.db #0x00	; 0
      0001BB 00                     491 	.db #0x00	; 0
      0001BC 00                     492 	.db #0x00	; 0
      0001BD 00                     493 	.db #0x00	; 0
      0001BE 00                     494 	.db #0x00	; 0
      0001BF 00                     495 	.db #0x00	; 0
      0001C0 00                     496 	.db #0x00	; 0
      0001C1 00                     497 	.db #0x00	; 0
      0001C2 00                     498 	.db #0x00	; 0
      0001C3 00                     499 	.db #0x00	; 0
      0001C4 00                     500 	.db #0x00	; 0
      0001C5 00                     501 	.db #0x00	; 0
      0001C6 00                     502 	.db #0x00	; 0
      0001C7 00                     503 	.db #0x00	; 0
      0001C8 00                     504 	.db #0x00	; 0
      0001C9 00                     505 	.db #0x00	; 0
      0001CA 00                     506 	.db #0x00	; 0
      0001CB 00                     507 	.db #0x00	; 0
      0001CC 00                     508 	.db #0x00	; 0
      0001CD 00                     509 	.db #0x00	; 0
      0001CE 00                     510 	.db #0x00	; 0
      0001CF 00                     511 	.db #0x00	; 0
      0001D0 00                     512 	.db #0x00	; 0
      0001D1 00                     513 	.db #0x00	; 0
      0001D2 00                     514 	.db #0x00	; 0
      0001D3 00                     515 	.db #0x00	; 0
      0001D4 00                     516 	.db #0x00	; 0
      0001D5 00                     517 	.db #0x00	; 0
      0001D6 00                     518 	.db #0x00	; 0
      0001D7 00                     519 	.db #0x00	; 0
      0001D8 00                     520 	.db #0x00	; 0
      0001D9 00                     521 	.db #0x00	; 0
      0001DA 00                     522 	.db #0x00	; 0
      0001DB 00                     523 	.db #0x00	; 0
      0001DC 00                     524 	.db #0x00	; 0
      0001DD 00                     525 	.db #0x00	; 0
      0001DE 00                     526 	.db #0x00	; 0
      0001DF 00                     527 	.db #0x00	; 0
      0001E0 00                     528 	.db #0x00	; 0
      0001E1 00                     529 	.db #0x00	; 0
      0001E2 00                     530 	.db #0x00	; 0
      0001E3 00                     531 	.db #0x00	; 0
      0001E4 00                     532 	.db #0x00	; 0
      0001E5 00                     533 	.db #0x00	; 0
      0001E6 00                     534 	.db #0x00	; 0
      0001E7 00                     535 	.db #0x00	; 0
      0001E8 00                     536 	.db #0x00	; 0
      0001E9 00                     537 	.db #0x00	; 0
      0001EA 00                     538 	.db #0x00	; 0
      0001EB 00                     539 	.db #0x00	; 0
      0001EC 00                     540 	.db #0x00	; 0
      0001ED 00                     541 	.db #0x00	; 0
      0001EE 00                     542 	.db #0x00	; 0
      0001EF 00                     543 	.db #0x00	; 0
      0001F0 00                     544 	.db #0x00	; 0
      0001F1 00                     545 	.db #0x00	; 0
      0001F2 00                     546 	.db #0x00	; 0
      0001F3 00                     547 	.db #0x00	; 0
      0001F4 00                     548 	.db #0x00	; 0
      0001F5 00                     549 	.db #0x00	; 0
      0001F6 00                     550 	.db #0x00	; 0
      0001F7 00                     551 	.db #0x00	; 0
      0001F8 00                     552 	.db #0x00	; 0
      0001F9 00                     553 	.db #0x00	; 0
      0001FA 00                     554 	.db #0x00	; 0
      0001FB 00                     555 	.db #0x00	; 0
      0001FC 00                     556 	.db #0x00	; 0
      0001FD 00                     557 	.db #0x00	; 0
      0001FE 00                     558 	.db #0x00	; 0
      0001FF 00                     559 	.db #0x00	; 0
      000200 00                     560 	.db #0x00	; 0
      000201 00                     561 	.db #0x00	; 0
      000202 00                     562 	.db #0x00	; 0
      000203 00                     563 	.db #0x00	; 0
      000204 00                     564 	.db #0x00	; 0
      000205 00                     565 	.db #0x00	; 0
      000206 00                     566 	.db #0x00	; 0
      000207 00                     567 	.db #0x00	; 0
      000208 00                     568 	.db #0x00	; 0
      000209 00                     569 	.db #0x00	; 0
      00020A 00                     570 	.db #0x00	; 0
      00020B 00                     571 	.db #0x00	; 0
      00020C 00                     572 	.db #0x00	; 0
      00020D 00                     573 	.db #0x00	; 0
      00020E 00                     574 	.db #0x00	; 0
      00020F 00                     575 	.db #0x00	; 0
      000210 00                     576 	.db #0x00	; 0
      000211 00                     577 	.db #0x00	; 0
      000212 00                     578 	.db #0x00	; 0
      000213 00                     579 	.db #0x00	; 0
      000214 00                     580 	.db #0x00	; 0
      000215 00                     581 	.db #0x00	; 0
      000216 00                     582 	.db #0x00	; 0
      000217 00                     583 	.db #0x00	; 0
      000218 00                     584 	.db #0x00	; 0
      000219 00                     585 	.db #0x00	; 0
      00021A 00                     586 	.db #0x00	; 0
      00021B 00                     587 	.db #0x00	; 0
      00021C 00                     588 	.db #0x00	; 0
      00021D 00                     589 	.db #0x00	; 0
      00021E 00                     590 	.db #0x00	; 0
      00021F 00                     591 	.db #0x00	; 0
      000220 00                     592 	.db #0x00	; 0
      000221 00                     593 	.db #0x00	; 0
      000222 00                     594 	.db #0x00	; 0
      000223 00                     595 	.db #0x00	; 0
      000224 00                     596 	.db #0x00	; 0
      000225 00                     597 	.db #0x00	; 0
      000226 00                     598 	.db #0x00	; 0
      000227 00                     599 	.db #0x00	; 0
      000228 00                     600 	.db #0x00	; 0
      000229 00                     601 	.db #0x00	; 0
      00022A 00                     602 	.db #0x00	; 0
      00022B 00                     603 	.db #0x00	; 0
      00022C 00                     604 	.db #0x00	; 0
      00022D 00                     605 	.db #0x00	; 0
      00022E 00                     606 	.db #0x00	; 0
      00022F 00                     607 	.db #0x00	; 0
      000230 00                     608 	.db #0x00	; 0
      000231 00                     609 	.db #0x00	; 0
      000232 00                     610 	.db #0x00	; 0
      000233 00                     611 	.db #0x00	; 0
      000234 00                     612 	.db #0x00	; 0
      000235 00                     613 	.db #0x00	; 0
      000236 00                     614 	.db #0x00	; 0
      000237 00                     615 	.db #0x00	; 0
      000238 00                     616 	.db #0x00	; 0
      000239 00                     617 	.db #0x00	; 0
      00023A 00                     618 	.db #0x00	; 0
      00023B 00                     619 	.db #0x00	; 0
      00023C 00                     620 	.db #0x00	; 0
      00023D 00                     621 	.db #0x00	; 0
      00023E 00                     622 	.db #0x00	; 0
      00023F 00                     623 	.db #0x00	; 0
      000240 00                     624 	.db #0x00	; 0
      000241 00                     625 	.db #0x00	; 0
      000242 00                     626 	.db #0x00	; 0
      000243 00                     627 	.db #0x00	; 0
      000244 00                     628 	.db #0x00	; 0
      000245 00                     629 	.db #0x00	; 0
      000246 00                     630 	.db #0x00	; 0
      000247 00                     631 	.db #0x00	; 0
      000248 00                     632 	.db #0x00	; 0
      000249 00                     633 	.db #0x00	; 0
      00024A 00                     634 	.db #0x00	; 0
      00024B 00                     635 	.db #0x00	; 0
      00024C 00                     636 	.db #0x00	; 0
      00024D 00                     637 	.db #0x00	; 0
      00024E 00                     638 	.db #0x00	; 0
      00024F 00                     639 	.db #0x00	; 0
      000250 00                     640 	.db #0x00	; 0
      000251                        641 _k_background_tiles:
      000251 FF                     642 	.db #0xff	; 255
      000252 00                     643 	.db #0x00	; 0
      000253 80                     644 	.db #0x80	; 128
      000254 00                     645 	.db #0x00	; 0
      000255 80                     646 	.db #0x80	; 128
      000256 00                     647 	.db #0x00	; 0
      000257 80                     648 	.db #0x80	; 128
      000258 00                     649 	.db #0x00	; 0
      000259 80                     650 	.db #0x80	; 128
      00025A 00                     651 	.db #0x00	; 0
      00025B 80                     652 	.db #0x80	; 128
      00025C 00                     653 	.db #0x00	; 0
      00025D 80                     654 	.db #0x80	; 128
      00025E 00                     655 	.db #0x00	; 0
      00025F 80                     656 	.db #0x80	; 128
      000260 00                     657 	.db #0x00	; 0
      000261 FF                     658 	.db #0xff	; 255
      000262 00                     659 	.db #0x00	; 0
      000263 80                     660 	.db #0x80	; 128
      000264 00                     661 	.db #0x00	; 0
      000265 80                     662 	.db #0x80	; 128
      000266 00                     663 	.db #0x00	; 0
      000267 80                     664 	.db #0x80	; 128
      000268 00                     665 	.db #0x00	; 0
      000269 80                     666 	.db #0x80	; 128
      00026A 00                     667 	.db #0x00	; 0
      00026B 80                     668 	.db #0x80	; 128
      00026C 00                     669 	.db #0x00	; 0
      00026D 80                     670 	.db #0x80	; 128
      00026E 00                     671 	.db #0x00	; 0
      00026F 80                     672 	.db #0x80	; 128
      000270 00                     673 	.db #0x00	; 0
      000271                        674 _SCREEN_MIN_X:
      000271 08                     675 	.db #0x08	; 8
      000272                        676 _SCREEN_MIN_Y:
      000272 10                     677 	.db #0x10	; 16
      000273                        678 _SCREEN_WIDTH:
      000273 A0                     679 	.db #0xa0	; 160
      000274                        680 _SCREEN_HEIGHT:
      000274 90                     681 	.db #0x90	; 144
      000275                        682 _SPRITE_TILE_WIDTH:
      000275 08                     683 	.db #0x08	; 8
      000276                        684 _SPRITE_TILE_HEIGHT:
      000276 08                     685 	.db #0x08	; 8
                                    686 ;input.h:58: uint8_t was_input_depressed(struct input_state* is, uint8_t button)
                                    687 ;	---------------------------------
                                    688 ; Function was_input_depressed
                                    689 ; ---------------------------------
      000277                        690 _was_input_depressed::
                                    691 ;input.h:60: return is->depressed_buttons & (1 << button);
      000277 F8 02                  692 	ldhl	sp,	#2
      000279 2A                     693 	ld	a, (hl+)
      00027A 4F                     694 	ld	c, a
      00027B 2A                     695 	ld	a, (hl+)
      00027C 47                     696 	ld	b, a
      00027D 03                     697 	inc	bc
      00027E 03                     698 	inc	bc
      00027F 03                     699 	inc	bc
      000280 0A                     700 	ld	a, (bc)
      000281 4E                     701 	ld	c, (hl)
      000282 06 01                  702 	ld	b, #0x01
      000284 0C                     703 	inc	c
      000285 18 02                  704 	jr	00104$
      000287                        705 00103$:
      000287 CB 20                  706 	sla	b
      000289                        707 00104$:
      000289 0D                     708 	dec	c
      00028A 20 FB                  709 	jr	NZ,00103$
      00028C A0                     710 	and	a, b
      00028D 5F                     711 	ld	e, a
                                    712 ;input.h:61: }
      00028E C9                     713 	ret
                                    714 ;input.h:63: uint8_t was_input_released(struct input_state* is, uint8_t button)
                                    715 ;	---------------------------------
                                    716 ; Function was_input_released
                                    717 ; ---------------------------------
      00028F                        718 _was_input_released::
                                    719 ;input.h:65: return is->released_buttons & (1 << button);
      00028F F8 02                  720 	ldhl	sp,	#2
      000291 2A                     721 	ld	a, (hl+)
      000292 4F                     722 	ld	c, a
      000293 46                     723 	ld	b, (hl)
      000294 21 04 00               724 	ld	hl, #0x0004
      000297 09                     725 	add	hl, bc
      000298 4E                     726 	ld	c, (hl)
      000299 F8 04                  727 	ldhl	sp,	#4
      00029B 46                     728 	ld	b, (hl)
      00029C 3E 01                  729 	ld	a, #0x01
      00029E 04                     730 	inc	b
      00029F 18 01                  731 	jr	00104$
      0002A1                        732 00103$:
      0002A1 87                     733 	add	a, a
      0002A2                        734 00104$:
      0002A2 05                     735 	dec	b
      0002A3 20 FC                  736 	jr	NZ,00103$
      0002A5 A1                     737 	and	a, c
      0002A6 5F                     738 	ld	e, a
                                    739 ;input.h:66: }
      0002A7 C9                     740 	ret
                                    741 ;input.h:68: uint8_t is_input_held(struct input_state* is, uint8_t button)
                                    742 ;	---------------------------------
                                    743 ; Function is_input_held
                                    744 ; ---------------------------------
      0002A8                        745 _is_input_held::
                                    746 ;input.h:70: return is->held_buttons & (1 << button);
      0002A8 F8 02                  747 	ldhl	sp,	#2
      0002AA 2A                     748 	ld	a, (hl+)
      0002AB 4F                     749 	ld	c, a
      0002AC 2A                     750 	ld	a, (hl+)
      0002AD 47                     751 	ld	b, a
      0002AE 03                     752 	inc	bc
      0002AF 03                     753 	inc	bc
      0002B0 0A                     754 	ld	a, (bc)
      0002B1 4E                     755 	ld	c, (hl)
      0002B2 06 01                  756 	ld	b, #0x01
      0002B4 0C                     757 	inc	c
      0002B5 18 02                  758 	jr	00104$
      0002B7                        759 00103$:
      0002B7 CB 20                  760 	sla	b
      0002B9                        761 00104$:
      0002B9 0D                     762 	dec	c
      0002BA 20 FB                  763 	jr	NZ,00103$
      0002BC A0                     764 	and	a, b
      0002BD 5F                     765 	ld	e, a
                                    766 ;input.h:71: }
      0002BE C9                     767 	ret
                                    768 ;utility.h:6: void wait_vbls_done(uint8_t num_loops)
                                    769 ;	---------------------------------
                                    770 ; Function wait_vbls_done
                                    771 ; ---------------------------------
      0002BF                        772 _wait_vbls_done::
                                    773 ;utility.h:8: for (uint8_t loop_counter = 0; loop_counter < num_loops; ++loop_counter)
      0002BF 0E 00                  774 	ld	c, #0x00
      0002C1                        775 00103$:
      0002C1 79                     776 	ld	a, c
      0002C2 F8 02                  777 	ldhl	sp,	#2
      0002C4 96                     778 	sub	a, (hl)
      0002C5 D0                     779 	ret	NC
                                    780 ;utility.h:10: wait_vbl_done();
      0002C6 CDr00r00               781 	call	_wait_vbl_done
                                    782 ;utility.h:8: for (uint8_t loop_counter = 0; loop_counter < num_loops; ++loop_counter)
      0002C9 0C                     783 	inc	c
                                    784 ;utility.h:12: }
      0002CA 18 F5                  785 	jr	00103$
                                    786 ;main.c:38: void update_cursor_sprite(uint8_t tile_index)
                                    787 ;	---------------------------------
                                    788 ; Function update_cursor_sprite
                                    789 ; ---------------------------------
      0002CC                        790 _update_cursor_sprite::
                                    791 ;main.c:40: set_sprite_tile(k_cursor_sprite_index, tile_index);
      0002CC F8 02                  792 	ldhl	sp,	#2
      0002CE 4E                     793 	ld	c, (hl)
      0002CF 21rE7r02               794 	ld	hl, #_k_cursor_sprite_index
                                    795 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0002D2 6E                     796 	ld	l, (hl)
                                    797 ;	spillPairReg hl
                                    798 ;	spillPairReg hl
      0002D3 26 00                  799 	ld	h, #0x00
                                    800 ;	spillPairReg hl
                                    801 ;	spillPairReg hl
      0002D5 29                     802 	add	hl, hl
      0002D6 29                     803 	add	hl, hl
      0002D7 11r00r00               804 	ld	de, #_shadow_OAM
      0002DA 19                     805 	add	hl, de
      0002DB 23                     806 	inc	hl
      0002DC 23                     807 	inc	hl
      0002DD 71                     808 	ld	(hl), c
                                    809 ;main.c:40: set_sprite_tile(k_cursor_sprite_index, tile_index);
                                    810 ;main.c:41: }
      0002DE C9                     811 	ret
      0002DF                        812 _k_execution_state_active_mask:
      0002DF 01                     813 	.db #0x01	; 1
      0002E0                        814 _k_tile_sprite_index_mask:
      0002E0 3F                     815 	.db #0x3f	; 63
      0002E1                        816 _k_tile_is_alive_mask:
      0002E1 40                     817 	.db #0x40	; 64
      0002E2                        818 _k_tile_was_alive_mask:
      0002E2 80                     819 	.db #0x80	; 128
      0002E3                        820 _k_empty_tile_index:
      0002E3 00                     821 	.db #0x00	; 0
      0002E4                        822 _k_live_tile_index:
      0002E4 01                     823 	.db #0x01	; 1
      0002E5                        824 _k_cursor_empty_tile_index:
      0002E5 02                     825 	.db #0x02	; 2
      0002E6                        826 _k_cursor_live_tile_index:
      0002E6 03                     827 	.db #0x03	; 3
      0002E7                        828 _k_cursor_sprite_index:
      0002E7 00                     829 	.db #0x00	; 0
                                    830 ;main.c:43: void update_cursor_position(uint8_t tile_x, uint8_t tile_y)
                                    831 ;	---------------------------------
                                    832 ; Function update_cursor_position
                                    833 ; ---------------------------------
      0002E8                        834 _update_cursor_position::
                                    835 ;main.c:47: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
      0002E8 FAr76r02               836 	ld	a, (#_SPRITE_TILE_HEIGHT)
      0002EB F5                     837 	push	af
      0002EC 33                     838 	inc	sp
      0002ED F8 04                  839 	ldhl	sp,	#4
      0002EF 7E                     840 	ld	a, (hl)
      0002F0 F5                     841 	push	af
      0002F1 33                     842 	inc	sp
      0002F2 CDr00r00               843 	call	__muluchar
      0002F5 E1                     844 	pop	hl
      0002F6 FAr72r02               845 	ld	a, (#_SCREEN_MIN_Y)
      0002F9 83                     846 	add	a, e
      0002FA 47                     847 	ld	b, a
                                    848 ;main.c:46: SCREEN_MIN_X + (tile_x * SPRITE_TILE_WIDTH),
      0002FB FAr75r02               849 	ld	a, (#_SPRITE_TILE_WIDTH)
      0002FE C5                     850 	push	bc
      0002FF F5                     851 	push	af
      000300 33                     852 	inc	sp
      000301 F8 05                  853 	ldhl	sp,	#5
      000303 7E                     854 	ld	a, (hl)
      000304 F5                     855 	push	af
      000305 33                     856 	inc	sp
      000306 CDr00r00               857 	call	__muluchar
      000309 E1                     858 	pop	hl
      00030A C1                     859 	pop	bc
      00030B FAr71r02               860 	ld	a, (#_SCREEN_MIN_X)
      00030E 83                     861 	add	a, e
      00030F 21rE7r02               862 	ld	hl, #_k_cursor_sprite_index
                                    863 ;main.c:47: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
                                    864 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000312 6E                     865 	ld	l, (hl)
      000313 4F                     866 	ld	c, a
                                    867 ;	spillPairReg hl
                                    868 ;	spillPairReg hl
      000314 26 00                  869 	ld	h, #0x00
                                    870 ;	spillPairReg hl
                                    871 ;	spillPairReg hl
      000316 29                     872 	add	hl, hl
      000317 29                     873 	add	hl, hl
      000318 11r00r00               874 	ld	de, #_shadow_OAM
      00031B 19                     875 	add	hl, de
                                    876 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00031C 78                     877 	ld	a, b
      00031D 22                     878 	ld	(hl+), a
      00031E 71                     879 	ld	(hl), c
                                    880 ;main.c:47: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
                                    881 ;main.c:48: }
      00031F C9                     882 	ret
                                    883 ;main.c:50: void update_tile_sprite(uint8_t sprite_index, uint8_t tile_index)
                                    884 ;	---------------------------------
                                    885 ; Function update_tile_sprite
                                    886 ; ---------------------------------
      000320                        887 _update_tile_sprite::
                                    888 ;main.c:52: set_sprite_tile(sprite_index, tile_index);
      000320 F8 03                  889 	ldhl	sp,	#3
      000322 3A                     890 	ld	a, (hl-)
      000323 4F                     891 	ld	c, a
                                    892 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000324 6E                     893 	ld	l, (hl)
      000325 11r00r00               894 	ld	de, #_shadow_OAM+0
                                    895 ;	spillPairReg hl
                                    896 ;	spillPairReg hl
      000328 26 00                  897 	ld	h, #0x00
                                    898 ;	spillPairReg hl
                                    899 ;	spillPairReg hl
      00032A 29                     900 	add	hl, hl
      00032B 29                     901 	add	hl, hl
      00032C 19                     902 	add	hl, de
      00032D 23                     903 	inc	hl
      00032E 23                     904 	inc	hl
      00032F 71                     905 	ld	(hl), c
                                    906 ;main.c:52: set_sprite_tile(sprite_index, tile_index);
                                    907 ;main.c:53: }
      000330 C9                     908 	ret
                                    909 ;main.c:55: void update_tile_position(uint8_t tile_index, uint8_t tile_x, uint8_t tile_y)
                                    910 ;	---------------------------------
                                    911 ; Function update_tile_position
                                    912 ; ---------------------------------
      000331                        913 _update_tile_position::
                                    914 ;main.c:59: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
      000331 FAr76r02               915 	ld	a, (#_SPRITE_TILE_HEIGHT)
      000334 F5                     916 	push	af
      000335 33                     917 	inc	sp
      000336 F8 05                  918 	ldhl	sp,	#5
      000338 7E                     919 	ld	a, (hl)
      000339 F5                     920 	push	af
      00033A 33                     921 	inc	sp
      00033B CDr00r00               922 	call	__muluchar
      00033E E1                     923 	pop	hl
      00033F FAr72r02               924 	ld	a, (#_SCREEN_MIN_Y)
      000342 83                     925 	add	a, e
      000343 47                     926 	ld	b, a
                                    927 ;main.c:58: SCREEN_MIN_X + (tile_x * SPRITE_TILE_WIDTH),
      000344 FAr75r02               928 	ld	a, (#_SPRITE_TILE_WIDTH)
      000347 C5                     929 	push	bc
      000348 F5                     930 	push	af
      000349 33                     931 	inc	sp
      00034A F8 06                  932 	ldhl	sp,	#6
      00034C 7E                     933 	ld	a, (hl)
      00034D F5                     934 	push	af
      00034E 33                     935 	inc	sp
      00034F CDr00r00               936 	call	__muluchar
      000352 E1                     937 	pop	hl
      000353 C1                     938 	pop	bc
      000354 FAr71r02               939 	ld	a, (#_SCREEN_MIN_X)
      000357 83                     940 	add	a, e
      000358 F8 02                  941 	ldhl	sp,	#2
                                    942 ;main.c:59: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
                                    943 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00035A 6E                     944 	ld	l, (hl)
      00035B 4F                     945 	ld	c, a
                                    946 ;	spillPairReg hl
                                    947 ;	spillPairReg hl
      00035C 26 00                  948 	ld	h, #0x00
                                    949 ;	spillPairReg hl
                                    950 ;	spillPairReg hl
      00035E 29                     951 	add	hl, hl
      00035F 29                     952 	add	hl, hl
      000360 11r00r00               953 	ld	de, #_shadow_OAM
      000363 19                     954 	add	hl, de
                                    955 ;c:/gameboy-dev/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000364 78                     956 	ld	a, b
      000365 22                     957 	ld	(hl+), a
      000366 71                     958 	ld	(hl), c
                                    959 ;main.c:59: SCREEN_MIN_Y + (tile_y * SPRITE_TILE_HEIGHT));
                                    960 ;main.c:60: }
      000367 C9                     961 	ret
                                    962 ;main.c:64: int main()
                                    963 ;	---------------------------------
                                    964 ; Function main
                                    965 ; ---------------------------------
      000368                        966 _main::
      000368 21 49 FE               967 	ld	hl, #-439
      00036B 39                     968 	add	hl, sp
      00036C F9                     969 	ld	sp, hl
                                    970 ;main.c:68: input_state.previous_state = 0x00;
      00036D F8 02                  971 	ldhl	sp,	#2
      00036F 4D                     972 	ld	c, l
      000370 44                     973 	ld	b, h
      000371 AF                     974 	xor	a, a
      000372 02                     975 	ld	(bc), a
                                    976 ;main.c:69: input_state.current_state = 0x00;
      000373 F8 02                  977 	ldhl	sp,	#2
      000375 7D                     978 	ld	a, l
      000376 54                     979 	ld	d, h
      000377 21 96 01               980 	ld	hl, #406
      00037A 39                     981 	add	hl, sp
      00037B 22                     982 	ld	(hl+), a
      00037C 7A                     983 	ld	a, d
      00037D 32                     984 	ld	(hl-), a
      00037E 2A                     985 	ld	a, (hl+)
      00037F 4F                     986 	ld	c, a
                                    987 ;main.c:70: input_state.held_buttons = 0x00;
      000380 3A                     988 	ld	a, (hl-)
      000381 47                     989 	ld	b, a
      000382 03                     990 	inc	bc
      000383 AF                     991 	xor	a, a
      000384 02                     992 	ld	(bc), a
      000385 2A                     993 	ld	a, (hl+)
      000386 4F                     994 	ld	c, a
                                    995 ;main.c:71: input_state.depressed_buttons = 0x00;
      000387 3A                     996 	ld	a, (hl-)
      000388 47                     997 	ld	b, a
      000389 03                     998 	inc	bc
      00038A 03                     999 	inc	bc
      00038B AF                    1000 	xor	a, a
      00038C 02                    1001 	ld	(bc), a
      00038D 2A                    1002 	ld	a, (hl+)
      00038E 4F                    1003 	ld	c, a
                                   1004 ;main.c:72: input_state.released_buttons = 0x00;
      00038F 3A                    1005 	ld	a, (hl-)
      000390 47                    1006 	ld	b, a
      000391 03                    1007 	inc	bc
      000392 03                    1008 	inc	bc
      000393 03                    1009 	inc	bc
      000394 AF                    1010 	xor	a, a
      000395 02                    1011 	ld	(bc), a
      000396 2A                    1012 	ld	a, (hl+)
      000397 5F                    1013 	ld	e, a
      000398 56                    1014 	ld	d, (hl)
      000399 21 04 00              1015 	ld	hl, #0x0004
      00039C 19                    1016 	add	hl, de
      00039D 4D                    1017 	ld	c, l
      00039E 44                    1018 	ld	b, h
      00039F AF                    1019 	xor	a, a
      0003A0 02                    1020 	ld	(bc), a
                                   1021 ;main.c:75: uint8_t execution_state = 0x00;
      0003A1 21 B3 01              1022 	ld	hl, #435
      0003A4 39                    1023 	add	hl, sp
      0003A5 36 00                 1024 	ld	(hl), #0x00
                                   1025 ;main.c:78: uint8_t cursor_tile_x = 10;
      0003A7 21 98 01              1026 	ld	hl, #408
      0003AA 39                    1027 	add	hl, sp
                                   1028 ;main.c:79: uint8_t cursor_tile_y = 9;
      0003AB 3E 0A                 1029 	ld	a, #0x0a
      0003AD 22                    1030 	ld	(hl+), a
      0003AE 36 09                 1031 	ld	(hl), #0x09
                                   1032 ;main.c:87: uint8_t next_available_sprite_index = 0;
      0003B0 21 B4 01              1033 	ld	hl, #436
      0003B3 39                    1034 	add	hl, sp
      0003B4 36 00                 1035 	ld	(hl), #0x00
                                   1036 ;main.c:90: for (uint8_t i = 0; i < 39; ++i)
      0003B6 21 6F 01              1037 	ld	hl, #367
      0003B9 39                    1038 	add	hl, sp
      0003BA 7D                    1039 	ld	a, l
      0003BB 54                    1040 	ld	d, h
      0003BC 21 9A 01              1041 	ld	hl, #410
      0003BF 39                    1042 	add	hl, sp
      0003C0 22                    1043 	ld	(hl+), a
      0003C1 72                    1044 	ld	(hl), d
      0003C2 1E 00                 1045 	ld	e, #0x00
      0003C4                       1046 00175$:
      0003C4 7B                    1047 	ld	a, e
      0003C5 D6 27                 1048 	sub	a, #0x27
      0003C7 30 2F                 1049 	jr	NC, 00101$
                                   1050 ;main.c:92: available_sprites[i] = i + 1;
      0003C9 D5                    1051 	push	de
      0003CA 16 00                 1052 	ld	d, #0x00
      0003CC 21 9C 01              1053 	ld	hl, #412
      0003CF 39                    1054 	add	hl, sp
      0003D0 2A                    1055 	ld	a,	(hl+)
      0003D1 66                    1056 	ld	h, (hl)
      0003D2 6F                    1057 	ld	l, a
      0003D3 19                    1058 	add	hl, de
      0003D4 D1                    1059 	pop	de
      0003D5 4D                    1060 	ld	c, l
      0003D6 44                    1061 	ld	b, h
      0003D7 53                    1062 	ld	d, e
      0003D8 14                    1063 	inc	d
      0003D9 7A                    1064 	ld	a, d
      0003DA 02                    1065 	ld	(bc), a
                                   1066 ;main.c:93: update_tile_sprite(i + 1, k_live_tile_index);
      0003DB FArE4r02              1067 	ld	a, (#_k_live_tile_index)
      0003DE D5                    1068 	push	de
      0003DF F5                    1069 	push	af
      0003E0 33                    1070 	inc	sp
      0003E1 D5                    1071 	push	de
      0003E2 33                    1072 	inc	sp
      0003E3 CDr20r03              1073 	call	_update_tile_sprite
      0003E6 E1                    1074 	pop	hl
      0003E7 D1                    1075 	pop	de
                                   1076 ;main.c:94: update_tile_position(i + 1, 0, 19);
      0003E8 D5                    1077 	push	de
      0003E9 21 00 13              1078 	ld	hl, #0x1300
      0003EC E5                    1079 	push	hl
      0003ED D5                    1080 	push	de
      0003EE 33                    1081 	inc	sp
      0003EF CDr31r03              1082 	call	_update_tile_position
      0003F2 E8 03                 1083 	add	sp, #3
      0003F4 D1                    1084 	pop	de
                                   1085 ;main.c:90: for (uint8_t i = 0; i < 39; ++i)
      0003F5 1C                    1086 	inc	e
      0003F6 18 CC                 1087 	jr	00175$
      0003F8                       1088 00101$:
                                   1089 ;main.c:98: for (uint8_t x = 0; x < 20; ++x)
      0003F8 F8 07                 1090 	ldhl	sp,	#7
      0003FA 7D                    1091 	ld	a, l
      0003FB 54                    1092 	ld	d, h
      0003FC 21 9C 01              1093 	ld	hl, #412
      0003FF 39                    1094 	add	hl, sp
      000400 22                    1095 	ld	(hl+), a
      000401 72                    1096 	ld	(hl), d
      000402 21 B6 01              1097 	ld	hl, #438
      000405 39                    1098 	add	hl, sp
      000406 36 00                 1099 	ld	(hl), #0x00
      000408                       1100 00181$:
      000408 21 B6 01              1101 	ld	hl, #438
      00040B 39                    1102 	add	hl, sp
      00040C 7E                    1103 	ld	a, (hl)
      00040D D6 14                 1104 	sub	a, #0x14
      00040F 30 2D                 1105 	jr	NC, 00103$
                                   1106 ;main.c:100: for (uint8_t y = 0; y < 18; ++y)
      000411 4E                    1107 	ld	c, (hl)
      000412 06 00                 1108 	ld	b, #0x00
      000414 69                    1109 	ld	l, c
      000415 60                    1110 	ld	h, b
      000416 29                    1111 	add	hl, hl
      000417 29                    1112 	add	hl, hl
      000418 29                    1113 	add	hl, hl
      000419 09                    1114 	add	hl, bc
      00041A 29                    1115 	add	hl, hl
      00041B 4D                    1116 	ld	c, l
      00041C 44                    1117 	ld	b, h
      00041D 21 9C 01              1118 	ld	hl, #412
      000420 39                    1119 	add	hl, sp
      000421 2A                    1120 	ld	a,	(hl+)
      000422 66                    1121 	ld	h, (hl)
      000423 6F                    1122 	ld	l, a
      000424 09                    1123 	add	hl, bc
      000425 5D                    1124 	ld	e, l
      000426 54                    1125 	ld	d, h
      000427 0E 00                 1126 	ld	c, #0x00
      000429                       1127 00178$:
      000429 79                    1128 	ld	a, c
      00042A D6 12                 1129 	sub	a, #0x12
      00042C 30 09                 1130 	jr	NC, 00182$
                                   1131 ;main.c:102: board[x][y] = 0x00;
      00042E 69                    1132 	ld	l, c
      00042F 26 00                 1133 	ld	h, #0x00
      000431 19                    1134 	add	hl, de
      000432 36 00                 1135 	ld	(hl), #0x00
                                   1136 ;main.c:100: for (uint8_t y = 0; y < 18; ++y)
      000434 0C                    1137 	inc	c
      000435 18 F2                 1138 	jr	00178$
      000437                       1139 00182$:
                                   1140 ;main.c:98: for (uint8_t x = 0; x < 20; ++x)
      000437 21 B6 01              1141 	ld	hl, #438
      00043A 39                    1142 	add	hl, sp
      00043B 34                    1143 	inc	(hl)
      00043C 18 CA                 1144 	jr	00181$
      00043E                       1145 00103$:
                                   1146 ;main.c:107: set_sprite_data(0, 3, k_sprites);
      00043E 11r00r00              1147 	ld	de, #_k_sprites
      000441 D5                    1148 	push	de
      000442 21 00 03              1149 	ld	hl, #0x300
      000445 E5                    1150 	push	hl
      000446 CDr00r00              1151 	call	_set_sprite_data
      000449 E8 04                 1152 	add	sp, #4
                                   1153 ;main.c:108: set_bkg_data(0, 2, k_background_tiles);
      00044B 11r51r02              1154 	ld	de, #_k_background_tiles
      00044E D5                    1155 	push	de
      00044F 21 00 02              1156 	ld	hl, #0x200
      000452 E5                    1157 	push	hl
      000453 CDr00r00              1158 	call	_set_bkg_data
      000456 E8 04                 1159 	add	sp, #4
                                   1160 ;main.c:111: set_bkg_tiles(0, 0, 20, 18, k_background_map);
      000458 11rE9r00              1161 	ld	de, #_k_background_map
      00045B D5                    1162 	push	de
      00045C 21 14 12              1163 	ld	hl, #0x1214
      00045F E5                    1164 	push	hl
      000460 AF                    1165 	xor	a, a
      000461 0F                    1166 	rrca
      000462 F5                    1167 	push	af
      000463 CDr00r00              1168 	call	_set_bkg_tiles
      000466 E8 06                 1169 	add	sp, #6
                                   1170 ;main.c:114: update_cursor_sprite(k_cursor_empty_tile_index);
      000468 FArE5r02              1171 	ld	a, (#_k_cursor_empty_tile_index)
      00046B F5                    1172 	push	af
      00046C 33                    1173 	inc	sp
      00046D CDrCCr02              1174 	call	_update_cursor_sprite
      000470 33                    1175 	inc	sp
                                   1176 ;main.c:115: update_cursor_position(cursor_tile_x, cursor_tile_y);
      000471 21 0A 09              1177 	ld	hl, #0x90a
      000474 E5                    1178 	push	hl
      000475 CDrE8r02              1179 	call	_update_cursor_position
      000478 E1                    1180 	pop	hl
                                   1181 ;main.c:117: SHOW_BKG;
      000479 F0r00                 1182 	ldh	a, (_LCDC_REG + 0)
      00047B F6 01                 1183 	or	a, #0x01
      00047D E0r00                 1184 	ldh	(_LCDC_REG + 0), a
                                   1185 ;main.c:118: SHOW_SPRITES;
      00047F F0r00                 1186 	ldh	a, (_LCDC_REG + 0)
      000481 F6 02                 1187 	or	a, #0x02
      000483 E0r00                 1188 	ldh	(_LCDC_REG + 0), a
                                   1189 ;main.c:119: DISPLAY_ON;
      000485 F0r00                 1190 	ldh	a, (_LCDC_REG + 0)
      000487 F6 80                 1191 	or	a, #0x80
      000489 E0r00                 1192 	ldh	(_LCDC_REG + 0), a
                                   1193 ;main.c:121: while (1)
      00048B                       1194 00172$:
                                   1195 ;main.c:124: update_input_state(&input_state, joypad());
      00048B CDr00r00              1196 	call	_joypad
      00048E 7B                    1197 	ld	a, e
      00048F 21 96 01              1198 	ld	hl, #406
      000492 39                    1199 	add	hl, sp
      000493 4E                    1200 	ld	c, (hl)
      000494 23                    1201 	inc	hl
      000495 46                    1202 	ld	b, (hl)
      000496 F5                    1203 	push	af
      000497 33                    1204 	inc	sp
      000498 C5                    1205 	push	bc
      000499 CDr00r00              1206 	call	_update_input_state
      00049C E8 03                 1207 	add	sp, #3
                                   1208 ;main.c:127: if (was_input_released(&input_state, btn_start))
      00049E 21 96 01              1209 	ld	hl, #406
      0004A1 39                    1210 	add	hl, sp
      0004A2 2A                    1211 	ld	a, (hl+)
      0004A3 4F                    1212 	ld	c, a
      0004A4 46                    1213 	ld	b, (hl)
      0004A5 3E 06                 1214 	ld	a, #0x06
      0004A7 F5                    1215 	push	af
      0004A8 33                    1216 	inc	sp
      0004A9 C5                    1217 	push	bc
      0004AA CDr8Fr02              1218 	call	_was_input_released
      0004AD E8 03                 1219 	add	sp, #3
      0004AF 7B                    1220 	ld	a, e
      0004B0 B7                    1221 	or	a, a
      0004B1 28 1E                 1222 	jr	Z, 00105$
                                   1223 ;main.c:129: execution_state ^= k_execution_state_active_mask;
      0004B3 21rDFr02              1224 	ld	hl, #_k_execution_state_active_mask
      0004B6 4E                    1225 	ld	c, (hl)
      0004B7 21 B3 01              1226 	ld	hl, #435
      0004BA 39                    1227 	add	hl, sp
      0004BB 7E                    1228 	ld	a, (hl)
      0004BC A9                    1229 	xor	a, c
      0004BD 77                    1230 	ld	(hl), a
                                   1231 ;main.c:132: (execution_state & k_execution_state_active_mask) == k_execution_state_active_mask
      0004BE 7E                    1232 	ld	a, (hl)
      0004BF A1                    1233 	and	a, c
      0004C0 91                    1234 	sub	a, c
      0004C1 20 05                 1235 	jr	NZ, 00197$
                                   1236 ;main.c:133: ? k_empty_tile_index
      0004C3 FArE3r02              1237 	ld	a, (#_k_empty_tile_index)
      0004C6 18 03                 1238 	jr	00198$
      0004C8                       1239 00197$:
                                   1240 ;main.c:134: : k_cursor_empty_tile_index);
      0004C8 FArE5r02              1241 	ld	a, (#_k_cursor_empty_tile_index)
      0004CB                       1242 00198$:
      0004CB F5                    1243 	push	af
      0004CC 33                    1244 	inc	sp
      0004CD CDrCCr02              1245 	call	_update_cursor_sprite
      0004D0 33                    1246 	inc	sp
      0004D1                       1247 00105$:
                                   1248 ;main.c:138: if ((execution_state & k_execution_state_active_mask) == k_execution_state_active_mask)
      0004D1 21rDFr02              1249 	ld	hl, #_k_execution_state_active_mask
      0004D4 4E                    1250 	ld	c, (hl)
      0004D5 21 B3 01              1251 	ld	hl, #435
      0004D8 39                    1252 	add	hl, sp
      0004D9 7E                    1253 	ld	a, (hl)
      0004DA A1                    1254 	and	a, c
      0004DB 91                    1255 	sub	a, c
      0004DC C2r48r09              1256 	jp	NZ,00169$
                                   1257 ;main.c:140: for (uint8_t x = 0; x < 20; ++x)
      0004DF 21 9C 01              1258 	ld	hl, #412
      0004E2 39                    1259 	add	hl, sp
      0004E3 7E                    1260 	ld	a, (hl)
      0004E4 21 AD 01              1261 	ld	hl, #429
      0004E7 39                    1262 	add	hl, sp
      0004E8 77                    1263 	ld	(hl), a
      0004E9 21 9D 01              1264 	ld	hl, #413
      0004EC 39                    1265 	add	hl, sp
      0004ED 7E                    1266 	ld	a, (hl)
      0004EE 21 AE 01              1267 	ld	hl, #430
      0004F1 39                    1268 	add	hl, sp
      0004F2 77                    1269 	ld	(hl), a
      0004F3 21 B5 01              1270 	ld	hl, #437
      0004F6 39                    1271 	add	hl, sp
      0004F7 36 00                 1272 	ld	(hl), #0x00
      0004F9                       1273 00187$:
      0004F9 21 B5 01              1274 	ld	hl, #437
      0004FC 39                    1275 	add	hl, sp
      0004FD 7E                    1276 	ld	a, (hl)
      0004FE D6 14                 1277 	sub	a, #0x14
      000500 30 77                 1278 	jr	NC, 00107$
                                   1279 ;main.c:142: for (uint8_t y = 0; y < 18; ++y)
      000502 4E                    1280 	ld	c, (hl)
      000503 06 00                 1281 	ld	b, #0x00
      000505 69                    1282 	ld	l, c
      000506 60                    1283 	ld	h, b
      000507 29                    1284 	add	hl, hl
      000508 29                    1285 	add	hl, hl
      000509 29                    1286 	add	hl, hl
      00050A 09                    1287 	add	hl, bc
      00050B 29                    1288 	add	hl, hl
      00050C 4D                    1289 	ld	c, l
      00050D 44                    1290 	ld	b, h
      00050E 21 AD 01              1291 	ld	hl, #429
      000511 39                    1292 	add	hl, sp
      000512 2A                    1293 	ld	a,	(hl+)
      000513 66                    1294 	ld	h, (hl)
      000514 6F                    1295 	ld	l, a
      000515 09                    1296 	add	hl, bc
      000516 E5                    1297 	push	hl
      000517 7D                    1298 	ld	a, l
      000518 21 B1 01              1299 	ld	hl, #433
      00051B 39                    1300 	add	hl, sp
      00051C 77                    1301 	ld	(hl), a
      00051D E1                    1302 	pop	hl
      00051E 7C                    1303 	ld	a, h
      00051F 21 B0 01              1304 	ld	hl, #432
      000522 39                    1305 	add	hl, sp
      000523 77                    1306 	ld	(hl), a
      000524 21 B6 01              1307 	ld	hl, #438
      000527 39                    1308 	add	hl, sp
      000528 36 00                 1309 	ld	(hl), #0x00
      00052A                       1310 00184$:
      00052A 21 B6 01              1311 	ld	hl, #438
      00052D 39                    1312 	add	hl, sp
      00052E 7E                    1313 	ld	a, (hl)
      00052F D6 12                 1314 	sub	a, #0x12
      000531 30 3E                 1315 	jr	NC, 00188$
                                   1316 ;main.c:144: uint8_t tile_data = board[x][y];
      000533 21 AF 01              1317 	ld	hl,#0x1af
      000536 39                    1318 	add	hl,sp
      000537 2A                    1319 	ld	a, (hl+)
      000538 5F                    1320 	ld	e, a
      000539 56                    1321 	ld	d, (hl)
      00053A 21 B6 01              1322 	ld	hl, #438
      00053D 39                    1323 	add	hl, sp
      00053E 6E                    1324 	ld	l, (hl)
      00053F 26 00                 1325 	ld	h, #0x00
      000541 19                    1326 	add	hl, de
      000542 E5                    1327 	push	hl
      000543 7D                    1328 	ld	a, l
      000544 21 B3 01              1329 	ld	hl, #435
      000547 39                    1330 	add	hl, sp
      000548 77                    1331 	ld	(hl), a
      000549 E1                    1332 	pop	hl
      00054A 7C                    1333 	ld	a, h
      00054B 21 B2 01              1334 	ld	hl, #434
      00054E 39                    1335 	add	hl, sp
      00054F 32                    1336 	ld	(hl-), a
      000550 2A                    1337 	ld	a, (hl+)
      000551 5F                    1338 	ld	e, a
      000552 56                    1339 	ld	d, (hl)
      000553 1A                    1340 	ld	a, (de)
      000554 47                    1341 	ld	b, a
                                   1342 ;main.c:147: board[x][y] = (tile_data & ~k_tile_was_alive_mask) | ((tile_data & k_tile_is_alive_mask) << 1);
      000555 FArE2r02              1343 	ld	a, (#_k_tile_was_alive_mask)
      000558 2F                    1344 	cpl
      000559 A0                    1345 	and	a, b
      00055A 4F                    1346 	ld	c, a
      00055B FArE1r02              1347 	ld	a, (#_k_tile_is_alive_mask)
      00055E A0                    1348 	and	a, b
      00055F 87                    1349 	add	a, a
      000560 B1                    1350 	or	a, c
      000561 4F                    1351 	ld	c, a
      000562 21 B1 01              1352 	ld	hl, #433
      000565 39                    1353 	add	hl, sp
      000566 2A                    1354 	ld	a,	(hl+)
      000567 66                    1355 	ld	h, (hl)
      000568 6F                    1356 	ld	l, a
      000569 71                    1357 	ld	(hl), c
                                   1358 ;main.c:142: for (uint8_t y = 0; y < 18; ++y)
      00056A 21 B6 01              1359 	ld	hl, #438
      00056D 39                    1360 	add	hl, sp
      00056E 34                    1361 	inc	(hl)
      00056F 18 B9                 1362 	jr	00184$
      000571                       1363 00188$:
                                   1364 ;main.c:140: for (uint8_t x = 0; x < 20; ++x)
      000571 21 B5 01              1365 	ld	hl, #437
      000574 39                    1366 	add	hl, sp
      000575 34                    1367 	inc	(hl)
      000576 C3rF9r04              1368 	jp	00187$
      000579                       1369 00107$:
                                   1370 ;main.c:152: for (uint8_t x = 0; x < 20; ++x)
      000579 21 9C 01              1371 	ld	hl, #412
      00057C 39                    1372 	add	hl, sp
      00057D 2A                    1373 	ld	a, (hl+)
      00057E 23                    1374 	inc	hl
      00057F 32                    1375 	ld	(hl-), a
      000580 2A                    1376 	ld	a, (hl+)
      000581 23                    1377 	inc	hl
      000582 77                    1378 	ld	(hl), a
      000583 21 9A 01              1379 	ld	hl, #410
      000586 39                    1380 	add	hl, sp
      000587 7E                    1381 	ld	a, (hl)
      000588 21 A0 01              1382 	ld	hl, #416
      00058B 39                    1383 	add	hl, sp
      00058C 77                    1384 	ld	(hl), a
      00058D 21 9B 01              1385 	ld	hl, #411
      000590 39                    1386 	add	hl, sp
      000591 7E                    1387 	ld	a, (hl)
      000592 21 A1 01              1388 	ld	hl, #417
      000595 39                    1389 	add	hl, sp
      000596 77                    1390 	ld	(hl), a
      000597 21 9A 01              1391 	ld	hl, #410
      00059A 39                    1392 	add	hl, sp
      00059B 7E                    1393 	ld	a, (hl)
      00059C 21 A2 01              1394 	ld	hl, #418
      00059F 39                    1395 	add	hl, sp
      0005A0 77                    1396 	ld	(hl), a
      0005A1 21 9B 01              1397 	ld	hl, #411
      0005A4 39                    1398 	add	hl, sp
      0005A5 7E                    1399 	ld	a, (hl)
      0005A6 21 A3 01              1400 	ld	hl, #419
      0005A9 39                    1401 	add	hl, sp
      0005AA 77                    1402 	ld	(hl), a
      0005AB 21 B5 01              1403 	ld	hl, #437
      0005AE 39                    1404 	add	hl, sp
      0005AF 36 00                 1405 	ld	(hl), #0x00
      0005B1                       1406 00193$:
      0005B1 21 B5 01              1407 	ld	hl, #437
      0005B4 39                    1408 	add	hl, sp
      0005B5 7E                    1409 	ld	a, (hl)
      0005B6 D6 14                 1410 	sub	a, #0x14
      0005B8 D2rCFr0B              1411 	jp	NC, 00170$
                                   1412 ;main.c:154: for (uint8_t y = 0; y < 18; ++y)
      0005BB 4E                    1413 	ld	c, (hl)
      0005BC 06 00                 1414 	ld	b, #0x00
      0005BE 69                    1415 	ld	l, c
      0005BF 60                    1416 	ld	h, b
      0005C0 29                    1417 	add	hl, hl
      0005C1 29                    1418 	add	hl, hl
      0005C2 29                    1419 	add	hl, hl
      0005C3 09                    1420 	add	hl, bc
      0005C4 29                    1421 	add	hl, hl
      0005C5 4D                    1422 	ld	c, l
      0005C6 44                    1423 	ld	b, h
      0005C7 21 9E 01              1424 	ld	hl, #414
      0005CA 39                    1425 	add	hl, sp
      0005CB 2A                    1426 	ld	a,	(hl+)
      0005CC 66                    1427 	ld	h, (hl)
      0005CD 6F                    1428 	ld	l, a
      0005CE 09                    1429 	add	hl, bc
      0005CF E5                    1430 	push	hl
      0005D0 7D                    1431 	ld	a, l
      0005D1 21 A6 01              1432 	ld	hl, #422
      0005D4 39                    1433 	add	hl, sp
      0005D5 77                    1434 	ld	(hl), a
      0005D6 E1                    1435 	pop	hl
      0005D7 7C                    1436 	ld	a, h
      0005D8 21 A5 01              1437 	ld	hl, #421
      0005DB 39                    1438 	add	hl, sp
      0005DC 77                    1439 	ld	(hl), a
      0005DD 21 B5 01              1440 	ld	hl, #437
      0005E0 39                    1441 	add	hl, sp
      0005E1 7E                    1442 	ld	a, (hl)
      0005E2 D6 13                 1443 	sub	a, #0x13
      0005E4 3E 00                 1444 	ld	a, #0x00
      0005E6 17                    1445 	rla
      0005E7 21 A6 01              1446 	ld	hl, #422
      0005EA 39                    1447 	add	hl, sp
      0005EB 77                    1448 	ld	(hl), a
      0005EC 21 B6 01              1449 	ld	hl, #438
      0005EF 39                    1450 	add	hl, sp
      0005F0 36 00                 1451 	ld	(hl), #0x00
      0005F2                       1452 00190$:
      0005F2 21 B6 01              1453 	ld	hl, #438
      0005F5 39                    1454 	add	hl, sp
      0005F6 7E                    1455 	ld	a, (hl)
      0005F7 D6 12                 1456 	sub	a, #0x12
      0005F9 D2r40r09              1457 	jp	NC, 00194$
                                   1458 ;main.c:156: uint8_t tile_data = board[x][y];
      0005FC 21 A4 01              1459 	ld	hl,#0x1a4
      0005FF 39                    1460 	add	hl,sp
      000600 2A                    1461 	ld	a, (hl+)
      000601 5F                    1462 	ld	e, a
      000602 56                    1463 	ld	d, (hl)
      000603 21 B6 01              1464 	ld	hl, #438
      000606 39                    1465 	add	hl, sp
      000607 6E                    1466 	ld	l, (hl)
      000608 26 00                 1467 	ld	h, #0x00
      00060A 19                    1468 	add	hl, de
      00060B E5                    1469 	push	hl
      00060C 7D                    1470 	ld	a, l
      00060D 21 A9 01              1471 	ld	hl, #425
      000610 39                    1472 	add	hl, sp
      000611 77                    1473 	ld	(hl), a
      000612 E1                    1474 	pop	hl
      000613 7C                    1475 	ld	a, h
      000614 21 A8 01              1476 	ld	hl, #424
      000617 39                    1477 	add	hl, sp
      000618 32                    1478 	ld	(hl-), a
      000619 2A                    1479 	ld	a, (hl+)
      00061A 5F                    1480 	ld	e, a
      00061B 2A                    1481 	ld	a, (hl+)
      00061C 57                    1482 	ld	d, a
      00061D 1A                    1483 	ld	a, (de)
                                   1484 ;main.c:157: uint8_t neighbour_count = 0;
      00061E 22                    1485 	ld	(hl+), a
      00061F 36 00                 1486 	ld	(hl), #0x00
                                   1487 ;main.c:147: board[x][y] = (tile_data & ~k_tile_was_alive_mask) | ((tile_data & k_tile_is_alive_mask) << 1);
      000621 FArE2r02              1488 	ld	a, (#_k_tile_was_alive_mask)
      000624 21 AB 01              1489 	ld	hl, #427
      000627 39                    1490 	add	hl, sp
      000628 77                    1491 	ld	(hl), a
                                   1492 ;main.c:161: && (board[x][y - 1] & k_tile_was_alive_mask) != 0x00)
      000629 21 B6 01              1493 	ld	hl, #438
      00062C 39                    1494 	add	hl, sp
      00062D 7E                    1495 	ld	a, (hl)
      00062E 21 B2 01              1496 	ld	hl, #434
      000631 39                    1497 	add	hl, sp
      000632 77                    1498 	ld	(hl), a
      000633 7E                    1499 	ld	a, (hl)
      000634 3D                    1500 	dec	a
      000635 21 AC 01              1501 	ld	hl, #428
      000638 39                    1502 	add	hl, sp
      000639 77                    1503 	ld	(hl), a
                                   1504 ;main.c:160: if (y > 0
      00063A 21 B6 01              1505 	ld	hl, #438
      00063D 39                    1506 	add	hl, sp
      00063E 7E                    1507 	ld	a, (hl)
      00063F B7                    1508 	or	a, a
      000640 28 1C                 1509 	jr	Z, 00109$
                                   1510 ;main.c:161: && (board[x][y - 1] & k_tile_was_alive_mask) != 0x00)
      000642 21 A4 01              1511 	ld	hl,#0x1a4
      000645 39                    1512 	add	hl,sp
      000646 2A                    1513 	ld	a, (hl+)
      000647 5F                    1514 	ld	e, a
      000648 56                    1515 	ld	d, (hl)
      000649 21 AC 01              1516 	ld	hl, #428
      00064C 39                    1517 	add	hl, sp
      00064D 6E                    1518 	ld	l, (hl)
      00064E 26 00                 1519 	ld	h, #0x00
      000650 19                    1520 	add	hl, de
      000651 4D                    1521 	ld	c, l
      000652 44                    1522 	ld	b, h
      000653 0A                    1523 	ld	a, (bc)
      000654 21 AB 01              1524 	ld	hl, #427
      000657 39                    1525 	add	hl, sp
      000658 A6                    1526 	and	a,(hl)
      000659 28 03                 1527 	jr	Z, 00109$
                                   1528 ;main.c:163: neighbour_count += 1;
      00065B 2B                    1529 	dec	hl
      00065C 36 01                 1530 	ld	(hl), #0x01
      00065E                       1531 00109$:
                                   1532 ;main.c:169: && (board[x + 1][y - 1] & k_tile_was_alive_mask) != 0x00)
      00065E 21 B5 01              1533 	ld	hl, #437
      000661 39                    1534 	add	hl, sp
      000662 7E                    1535 	ld	a, (hl)
      000663 21 AD 01              1536 	ld	hl, #429
      000666 39                    1537 	add	hl, sp
      000667 22                    1538 	ld	(hl+), a
      000668 AF                    1539 	xor	a, a
      000669 32                    1540 	ld	(hl-), a
      00066A 2A                    1541 	ld	a, (hl+)
      00066B 4F                    1542 	ld	c, a
      00066C 46                    1543 	ld	b, (hl)
      00066D 03                    1544 	inc	bc
      00066E 69                    1545 	ld	l, c
      00066F 60                    1546 	ld	h, b
      000670 29                    1547 	add	hl, hl
      000671 29                    1548 	add	hl, hl
      000672 29                    1549 	add	hl, hl
      000673 09                    1550 	add	hl, bc
      000674 29                    1551 	add	hl, hl
      000675 4D                    1552 	ld	c, l
      000676 44                    1553 	ld	b, h
      000677 21 9E 01              1554 	ld	hl, #414
      00067A 39                    1555 	add	hl, sp
      00067B 2A                    1556 	ld	a,	(hl+)
      00067C 66                    1557 	ld	h, (hl)
      00067D 6F                    1558 	ld	l, a
      00067E 09                    1559 	add	hl, bc
      00067F E5                    1560 	push	hl
      000680 7D                    1561 	ld	a, l
      000681 21 B1 01              1562 	ld	hl, #433
      000684 39                    1563 	add	hl, sp
      000685 77                    1564 	ld	(hl), a
      000686 E1                    1565 	pop	hl
      000687 7C                    1566 	ld	a, h
      000688 21 B0 01              1567 	ld	hl, #432
      00068B 39                    1568 	add	hl, sp
      00068C 77                    1569 	ld	(hl), a
                                   1570 ;main.c:168: && y > 0
      00068D 21 A6 01              1571 	ld	hl, #422
      000690 39                    1572 	add	hl, sp
      000691 7E                    1573 	ld	a, (hl)
      000692 B7                    1574 	or	a, a
      000693 28 27                 1575 	jr	Z, 00112$
      000695 21 B6 01              1576 	ld	hl, #438
      000698 39                    1577 	add	hl, sp
      000699 7E                    1578 	ld	a, (hl)
      00069A B7                    1579 	or	a, a
      00069B 28 1F                 1580 	jr	Z, 00112$
                                   1581 ;main.c:169: && (board[x + 1][y - 1] & k_tile_was_alive_mask) != 0x00)
      00069D 21 AF 01              1582 	ld	hl,#0x1af
      0006A0 39                    1583 	add	hl,sp
      0006A1 2A                    1584 	ld	a, (hl+)
      0006A2 5F                    1585 	ld	e, a
      0006A3 56                    1586 	ld	d, (hl)
      0006A4 21 AC 01              1587 	ld	hl, #428
      0006A7 39                    1588 	add	hl, sp
      0006A8 6E                    1589 	ld	l, (hl)
      0006A9 26 00                 1590 	ld	h, #0x00
      0006AB 19                    1591 	add	hl, de
      0006AC 33                    1592 	inc	sp
      0006AD 33                    1593 	inc	sp
      0006AE 5D                    1594 	ld	e, l
      0006AF 54                    1595 	ld	d, h
      0006B0 D5                    1596 	push	de
      0006B1 1A                    1597 	ld	a, (de)
      0006B2 21 AB 01              1598 	ld	hl, #427
      0006B5 39                    1599 	add	hl, sp
      0006B6 A6                    1600 	and	a,(hl)
      0006B7 28 03                 1601 	jr	Z, 00112$
                                   1602 ;main.c:171: neighbour_count += 1;
      0006B9 2B                    1603 	dec	hl
      0006BA 34                    1604 	inc	(hl)
      0006BB 7E                    1605 	ld	a, (hl)
      0006BC                       1606 00112$:
                                   1607 ;main.c:176: && (board[x + 1][y] & k_tile_was_alive_mask) != 0x00)
      0006BC 21 A6 01              1608 	ld	hl, #422
      0006BF 39                    1609 	add	hl, sp
      0006C0 7E                    1610 	ld	a, (hl)
      0006C1 B7                    1611 	or	a, a
      0006C2 28 1C                 1612 	jr	Z, 00116$
      0006C4 21 AF 01              1613 	ld	hl,#0x1af
      0006C7 39                    1614 	add	hl,sp
      0006C8 2A                    1615 	ld	a, (hl+)
      0006C9 5F                    1616 	ld	e, a
      0006CA 56                    1617 	ld	d, (hl)
      0006CB 21 B6 01              1618 	ld	hl, #438
      0006CE 39                    1619 	add	hl, sp
      0006CF 6E                    1620 	ld	l, (hl)
      0006D0 26 00                 1621 	ld	h, #0x00
      0006D2 19                    1622 	add	hl, de
      0006D3 4D                    1623 	ld	c, l
      0006D4 44                    1624 	ld	b, h
      0006D5 0A                    1625 	ld	a, (bc)
      0006D6 21 AB 01              1626 	ld	hl, #427
      0006D9 39                    1627 	add	hl, sp
      0006DA A6                    1628 	and	a,(hl)
      0006DB 28 03                 1629 	jr	Z, 00116$
                                   1630 ;main.c:178: neighbour_count += 1;
      0006DD 2B                    1631 	dec	hl
      0006DE 34                    1632 	inc	(hl)
      0006DF 7E                    1633 	ld	a, (hl)
      0006E0                       1634 00116$:
                                   1635 ;main.c:184: && (board[x + 1][y + 1] & k_tile_was_alive_mask) != 0x00)
      0006E0 21 B6 01              1636 	ld	hl, #438
      0006E3 39                    1637 	add	hl, sp
      0006E4 7E                    1638 	ld	a, (hl)
      0006E5 D6 11                 1639 	sub	a, #0x11
      0006E7 3E 00                 1640 	ld	a, #0x00
      0006E9 17                    1641 	rla
      0006EA 21 B1 01              1642 	ld	hl, #433
      0006ED 39                    1643 	add	hl, sp
      0006EE 22                    1644 	ld	(hl+), a
      0006EF 34                    1645 	inc	(hl)
                                   1646 ;main.c:183: && y < 17
      0006F0 21 A6 01              1647 	ld	hl, #422
      0006F3 39                    1648 	add	hl, sp
      0006F4 7E                    1649 	ld	a, (hl)
      0006F5 B7                    1650 	or	a, a
      0006F6 28 20                 1651 	jr	Z, 00119$
                                   1652 ;main.c:184: && (board[x + 1][y + 1] & k_tile_was_alive_mask) != 0x00)
      0006F8 21 B1 01              1653 	ld	hl, #433
      0006FB 39                    1654 	add	hl, sp
      0006FC 7E                    1655 	ld	a, (hl)
      0006FD B7                    1656 	or	a, a
      0006FE 28 18                 1657 	jr	Z, 00119$
      000700 2B                    1658 	dec	hl
      000701 2B                    1659 	dec	hl
      000702 2A                    1660 	ld	a, (hl+)
      000703 5F                    1661 	ld	e, a
      000704 2A                    1662 	ld	a, (hl+)
      000705 23                    1663 	inc	hl
      000706 57                    1664 	ld	d, a
      000707 6E                    1665 	ld	l, (hl)
      000708 26 00                 1666 	ld	h, #0x00
      00070A 19                    1667 	add	hl, de
      00070B 4D                    1668 	ld	c, l
      00070C 44                    1669 	ld	b, h
      00070D 0A                    1670 	ld	a, (bc)
      00070E 21 AB 01              1671 	ld	hl, #427
      000711 39                    1672 	add	hl, sp
      000712 A6                    1673 	and	a,(hl)
      000713 28 03                 1674 	jr	Z, 00119$
                                   1675 ;main.c:186: neighbour_count += 1;
      000715 2B                    1676 	dec	hl
      000716 34                    1677 	inc	(hl)
      000717 7E                    1678 	ld	a, (hl)
      000718                       1679 00119$:
                                   1680 ;main.c:191: && (board[x][y + 1] & k_tile_was_alive_mask) != 0x00)
      000718 21 B1 01              1681 	ld	hl, #433
      00071B 39                    1682 	add	hl, sp
      00071C 7E                    1683 	ld	a, (hl)
      00071D B7                    1684 	or	a, a
      00071E 28 2B                 1685 	jr	Z, 00123$
      000720 21 A4 01              1686 	ld	hl,#0x1a4
      000723 39                    1687 	add	hl,sp
      000724 2A                    1688 	ld	a, (hl+)
      000725 5F                    1689 	ld	e, a
      000726 56                    1690 	ld	d, (hl)
      000727 21 B2 01              1691 	ld	hl, #434
      00072A 39                    1692 	add	hl, sp
      00072B 6E                    1693 	ld	l, (hl)
      00072C 26 00                 1694 	ld	h, #0x00
      00072E 19                    1695 	add	hl, de
      00072F E5                    1696 	push	hl
      000730 7D                    1697 	ld	a, l
      000731 21 B1 01              1698 	ld	hl, #433
      000734 39                    1699 	add	hl, sp
      000735 77                    1700 	ld	(hl), a
      000736 E1                    1701 	pop	hl
      000737 7C                    1702 	ld	a, h
      000738 21 B0 01              1703 	ld	hl, #432
      00073B 39                    1704 	add	hl, sp
      00073C 32                    1705 	ld	(hl-), a
      00073D 2A                    1706 	ld	a, (hl+)
      00073E 5F                    1707 	ld	e, a
      00073F 56                    1708 	ld	d, (hl)
      000740 1A                    1709 	ld	a, (de)
      000741 21 AB 01              1710 	ld	hl, #427
      000744 39                    1711 	add	hl, sp
      000745 A6                    1712 	and	a,(hl)
      000746 28 03                 1713 	jr	Z, 00123$
                                   1714 ;main.c:193: neighbour_count += 1;
      000748 2B                    1715 	dec	hl
      000749 34                    1716 	inc	(hl)
      00074A 7E                    1717 	ld	a, (hl)
      00074B                       1718 00123$:
                                   1719 ;main.c:199: && (board[x - 1][y + 1] & k_tile_was_alive_mask) != 0x00)
      00074B 21 AD 01              1720 	ld	hl,#0x1ad
      00074E 39                    1721 	add	hl,sp
      00074F 2A                    1722 	ld	a, (hl+)
      000750 4F                    1723 	ld	c, a
      000751 46                    1724 	ld	b, (hl)
      000752 0B                    1725 	dec	bc
      000753 69                    1726 	ld	l, c
      000754 60                    1727 	ld	h, b
      000755 29                    1728 	add	hl, hl
      000756 29                    1729 	add	hl, hl
      000757 29                    1730 	add	hl, hl
      000758 09                    1731 	add	hl, bc
      000759 29                    1732 	add	hl, hl
      00075A 4D                    1733 	ld	c, l
      00075B 44                    1734 	ld	b, h
      00075C 21 9E 01              1735 	ld	hl, #414
      00075F 39                    1736 	add	hl, sp
      000760 2A                    1737 	ld	a,	(hl+)
      000761 66                    1738 	ld	h, (hl)
      000762 6F                    1739 	ld	l, a
      000763 09                    1740 	add	hl, bc
      000764 E5                    1741 	push	hl
      000765 7D                    1742 	ld	a, l
      000766 21 B1 01              1743 	ld	hl, #433
      000769 39                    1744 	add	hl, sp
      00076A 77                    1745 	ld	(hl), a
      00076B E1                    1746 	pop	hl
      00076C 7C                    1747 	ld	a, h
      00076D 21 B0 01              1748 	ld	hl, #432
      000770 39                    1749 	add	hl, sp
      000771 77                    1750 	ld	(hl), a
                                   1751 ;main.c:197: if (x > 0
      000772 21 B5 01              1752 	ld	hl, #437
      000775 39                    1753 	add	hl, sp
      000776 7E                    1754 	ld	a, (hl)
      000777 B7                    1755 	or	a, a
      000778 28 21                 1756 	jr	Z, 00126$
                                   1757 ;main.c:199: && (board[x - 1][y + 1] & k_tile_was_alive_mask) != 0x00)
      00077A 21 B1 01              1758 	ld	hl, #433
      00077D 39                    1759 	add	hl, sp
      00077E 7E                    1760 	ld	a, (hl)
      00077F B7                    1761 	or	a, a
      000780 28 19                 1762 	jr	Z, 00126$
      000782 23                    1763 	inc	hl
      000783 5E                    1764 	ld	e, (hl)
      000784 16 00                 1765 	ld	d, #0x00
      000786 21 AF 01              1766 	ld	hl, #431
      000789 39                    1767 	add	hl, sp
      00078A 2A                    1768 	ld	a,	(hl+)
      00078B 66                    1769 	ld	h, (hl)
      00078C 6F                    1770 	ld	l, a
      00078D 19                    1771 	add	hl, de
      00078E 4D                    1772 	ld	c, l
      00078F 44                    1773 	ld	b, h
      000790 0A                    1774 	ld	a, (bc)
      000791 21 AB 01              1775 	ld	hl, #427
      000794 39                    1776 	add	hl, sp
      000795 A6                    1777 	and	a,(hl)
      000796 28 03                 1778 	jr	Z, 00126$
                                   1779 ;main.c:201: neighbour_count += 1;
      000798 2B                    1780 	dec	hl
      000799 34                    1781 	inc	(hl)
      00079A 7E                    1782 	ld	a, (hl)
      00079B                       1783 00126$:
                                   1784 ;main.c:205: if (x > 0
      00079B 21 B5 01              1785 	ld	hl, #437
      00079E 39                    1786 	add	hl, sp
      00079F 7E                    1787 	ld	a, (hl)
      0007A0 B7                    1788 	or	a, a
      0007A1 28 1C                 1789 	jr	Z, 00130$
                                   1790 ;main.c:206: && (board[x - 1][y] & k_tile_was_alive_mask) != 0x00)
      0007A3 21 AF 01              1791 	ld	hl,#0x1af
      0007A6 39                    1792 	add	hl,sp
      0007A7 2A                    1793 	ld	a, (hl+)
      0007A8 5F                    1794 	ld	e, a
      0007A9 56                    1795 	ld	d, (hl)
      0007AA 21 B6 01              1796 	ld	hl, #438
      0007AD 39                    1797 	add	hl, sp
      0007AE 6E                    1798 	ld	l, (hl)
      0007AF 26 00                 1799 	ld	h, #0x00
      0007B1 19                    1800 	add	hl, de
      0007B2 4D                    1801 	ld	c, l
      0007B3 44                    1802 	ld	b, h
      0007B4 0A                    1803 	ld	a, (bc)
      0007B5 21 AB 01              1804 	ld	hl, #427
      0007B8 39                    1805 	add	hl, sp
      0007B9 A6                    1806 	and	a,(hl)
      0007BA 28 03                 1807 	jr	Z, 00130$
                                   1808 ;main.c:208: neighbour_count += 1;
      0007BC 2B                    1809 	dec	hl
      0007BD 34                    1810 	inc	(hl)
      0007BE 7E                    1811 	ld	a, (hl)
      0007BF                       1812 00130$:
                                   1813 ;main.c:212: if (x > 0
      0007BF 21 B5 01              1814 	ld	hl, #437
      0007C2 39                    1815 	add	hl, sp
      0007C3 7E                    1816 	ld	a, (hl)
      0007C4 B7                    1817 	or	a, a
      0007C5 28 30                 1818 	jr	Z, 00133$
                                   1819 ;main.c:213: && y > 0
      0007C7 23                    1820 	inc	hl
      0007C8 7E                    1821 	ld	a, (hl)
      0007C9 B7                    1822 	or	a, a
      0007CA 28 2B                 1823 	jr	Z, 00133$
                                   1824 ;main.c:214: && (board[x - 1][y - 1] & k_tile_was_alive_mask) != 0x00)
      0007CC 21 AC 01              1825 	ld	hl, #428
      0007CF 39                    1826 	add	hl, sp
      0007D0 5E                    1827 	ld	e, (hl)
      0007D1 16 00                 1828 	ld	d, #0x00
      0007D3 21 AF 01              1829 	ld	hl, #431
      0007D6 39                    1830 	add	hl, sp
      0007D7 2A                    1831 	ld	a,	(hl+)
      0007D8 66                    1832 	ld	h, (hl)
      0007D9 6F                    1833 	ld	l, a
      0007DA 19                    1834 	add	hl, de
      0007DB E5                    1835 	push	hl
      0007DC 7D                    1836 	ld	a, l
      0007DD 21 B3 01              1837 	ld	hl, #435
      0007E0 39                    1838 	add	hl, sp
      0007E1 77                    1839 	ld	(hl), a
      0007E2 E1                    1840 	pop	hl
      0007E3 7C                    1841 	ld	a, h
      0007E4 21 B2 01              1842 	ld	hl, #434
      0007E7 39                    1843 	add	hl, sp
      0007E8 32                    1844 	ld	(hl-), a
      0007E9 2A                    1845 	ld	a, (hl+)
      0007EA 5F                    1846 	ld	e, a
      0007EB 56                    1847 	ld	d, (hl)
      0007EC 1A                    1848 	ld	a, (de)
      0007ED 21 AB 01              1849 	ld	hl, #427
      0007F0 39                    1850 	add	hl, sp
      0007F1 A6                    1851 	and	a,(hl)
      0007F2 28 03                 1852 	jr	Z, 00133$
                                   1853 ;main.c:216: neighbour_count += 1;
      0007F4 2B                    1854 	dec	hl
      0007F5 34                    1855 	inc	(hl)
      0007F6 7E                    1856 	ld	a, (hl)
      0007F7                       1857 00133$:
                                   1858 ;main.c:147: board[x][y] = (tile_data & ~k_tile_was_alive_mask) | ((tile_data & k_tile_is_alive_mask) << 1);
      0007F7 21rE1r02              1859 	ld	hl, #_k_tile_is_alive_mask
      0007FA 4E                    1860 	ld	c, (hl)
                                   1861 ;main.c:220: uint8_t is_alive = (tile_data & k_tile_is_alive_mask) != 0x00;
      0007FB 21 A9 01              1862 	ld	hl, #425
      0007FE 39                    1863 	add	hl, sp
      0007FF 7E                    1864 	ld	a, (hl)
      000800 A1                    1865 	and	a, c
      000801 D6 01                 1866 	sub	a,#0x01
      000803 3E 00                 1867 	ld	a, #0x00
      000805 17                    1868 	rla
      000806 EE 01                 1869 	xor	a, #0x01
                                   1870 ;main.c:221: uint8_t come_to_life = !is_alive && neighbour_count == 3;
      000808 5F                    1871 	ld	e, a
      000809 B7                    1872 	or	a, a
      00080A 20 06                 1873 	jr	NZ, 00199$
      00080C 23                    1874 	inc	hl
      00080D 7E                    1875 	ld	a, (hl)
      00080E D6 03                 1876 	sub	a, #0x03
      000810 28 03                 1877 	jr	Z, 00200$
      000812                       1878 00199$:
      000812 AF                    1879 	xor	a, a
      000813 18 02                 1880 	jr	00201$
      000815                       1881 00200$:
      000815 3E 01                 1882 	ld	a, #0x01
      000817                       1883 00201$:
      000817 21 B0 01              1884 	ld	hl, #432
      00081A 39                    1885 	add	hl, sp
      00081B 77                    1886 	ld	(hl), a
                                   1887 ;main.c:226: uint8_t remain_alive = is_alive && neighbour_count >= 2 && neighbour_count <= 3;
      00081C 7B                    1888 	ld	a, e
      00081D B7                    1889 	or	a, a
      00081E 28 0E                 1890 	jr	Z, 00202$
      000820 21 AA 01              1891 	ld	hl, #426
      000823 39                    1892 	add	hl, sp
      000824 7E                    1893 	ld	a, (hl)
      000825 D6 02                 1894 	sub	a, #0x02
      000827 38 05                 1895 	jr	C, 00202$
      000829 3E 03                 1896 	ld	a, #0x03
      00082B 96                    1897 	sub	a, (hl)
      00082C 30 04                 1898 	jr	NC, 00203$
      00082E                       1899 00202$:
      00082E 1E 00                 1900 	ld	e, #0x00
      000830 18 02                 1901 	jr	00204$
      000832                       1902 00203$:
      000832 1E 01                 1903 	ld	e, #0x01
      000834                       1904 00204$:
                                   1905 ;main.c:229: tile_data &= ~k_tile_is_alive_mask;
      000834 79                    1906 	ld	a, c
      000835 2F                    1907 	cpl
      000836 21 B1 01              1908 	ld	hl, #433
      000839 39                    1909 	add	hl, sp
      00083A 77                    1910 	ld	(hl), a
      00083B 21 A9 01              1911 	ld	hl, #425
      00083E 39                    1912 	add	hl, sp
      00083F 7E                    1913 	ld	a, (hl)
      000840 21 B1 01              1914 	ld	hl, #433
      000843 39                    1915 	add	hl, sp
      000844 A6                    1916 	and	a, (hl)
      000845 23                    1917 	inc	hl
                                   1918 ;main.c:230: if ((come_to_life | remain_alive) != 0x00)
      000846 32                    1919 	ld	(hl-), a
      000847 2B                    1920 	dec	hl
      000848 7E                    1921 	ld	a, (hl)
      000849 B3                    1922 	or	a, e
      00084A B7                    1923 	or	a, a
      00084B 28 05                 1924 	jr	Z, 00137$
                                   1925 ;main.c:232: tile_data |= k_tile_is_alive_mask;
      00084D 23                    1926 	inc	hl
      00084E 23                    1927 	inc	hl
      00084F 7E                    1928 	ld	a, (hl)
      000850 B1                    1929 	or	a, c
      000851 77                    1930 	ld	(hl), a
      000852                       1931 00137$:
                                   1932 ;main.c:236: is_alive = (tile_data & k_tile_is_alive_mask) != 0x00;
      000852 21 B2 01              1933 	ld	hl, #434
      000855 39                    1934 	add	hl, sp
      000856 3A                    1935 	ld	a, (hl-)
      000857 2B                    1936 	dec	hl
      000858 A1                    1937 	and	a, c
      000859 D6 01                 1938 	sub	a, #0x01
      00085B 3E 00                 1939 	ld	a, #0x00
      00085D 17                    1940 	rla
      00085E EE 01                 1941 	xor	a, #0x01
                                   1942 ;main.c:237: uint8_t was_alive = (tile_data & k_tile_was_alive_mask) != 0x00;
      000860 22                    1943 	ld	(hl+), a
      000861 23                    1944 	inc	hl
      000862 7E                    1945 	ld	a, (hl)
      000863 21 AB 01              1946 	ld	hl, #427
      000866 39                    1947 	add	hl, sp
      000867 A6                    1948 	and	a, (hl)
      000868 23                    1949 	inc	hl
      000869 23                    1950 	inc	hl
      00086A D6 01                 1951 	sub	a, #0x01
      00086C 3E 00                 1952 	ld	a, #0x00
      00086E 17                    1953 	rla
      00086F EE 01                 1954 	xor	a, #0x01
      000871 77                    1955 	ld	(hl), a
      000872 2A                    1956 	ld	a, (hl+)
      000873 77                    1957 	ld	(hl), a
                                   1958 ;main.c:250: update_tile_position(tile_data & k_tile_sprite_index_mask, x, y);
      000874 FArE0r02              1959 	ld	a, (#_k_tile_sprite_index_mask)
      000877 21 AF 01              1960 	ld	hl, #431
      00087A 39                    1961 	add	hl, sp
                                   1962 ;main.c:240: if (!was_alive && is_alive)
      00087B 32                    1963 	ld	(hl-), a
      00087C 2B                    1964 	dec	hl
      00087D 7E                    1965 	ld	a, (hl)
      00087E B7                    1966 	or	a, a
      00087F 20 60                 1967 	jr	NZ, 00145$
      000881 21 B0 01              1968 	ld	hl, #432
      000884 39                    1969 	add	hl, sp
      000885 7E                    1970 	ld	a, (hl)
      000886 B7                    1971 	or	a, a
      000887 28 58                 1972 	jr	Z, 00145$
                                   1973 ;main.c:243: if (next_available_sprite_index < 39)
      000889 21 B4 01              1974 	ld	hl, #436
      00088C 39                    1975 	add	hl, sp
      00088D 7E                    1976 	ld	a, (hl)
      00088E D6 27                 1977 	sub	a, #0x27
      000890 30 45                 1978 	jr	NC, 00139$
                                   1979 ;main.c:246: tile_data |= available_sprites[next_available_sprite_index];
      000892 21 A2 01              1980 	ld	hl,#0x1a2
      000895 39                    1981 	add	hl,sp
      000896 2A                    1982 	ld	a, (hl+)
      000897 5F                    1983 	ld	e, a
      000898 56                    1984 	ld	d, (hl)
      000899 21 B4 01              1985 	ld	hl, #436
      00089C 39                    1986 	add	hl, sp
      00089D 6E                    1987 	ld	l, (hl)
      00089E 26 00                 1988 	ld	h, #0x00
      0008A0 19                    1989 	add	hl, de
      0008A1 E5                    1990 	push	hl
      0008A2 7D                    1991 	ld	a, l
      0008A3 21 B2 01              1992 	ld	hl, #434
      0008A6 39                    1993 	add	hl, sp
      0008A7 77                    1994 	ld	(hl), a
      0008A8 E1                    1995 	pop	hl
      0008A9 7C                    1996 	ld	a, h
      0008AA 21 B1 01              1997 	ld	hl, #433
      0008AD 39                    1998 	add	hl, sp
      0008AE 32                    1999 	ld	(hl-), a
      0008AF 2A                    2000 	ld	a, (hl+)
      0008B0 5F                    2001 	ld	e, a
      0008B1 2A                    2002 	ld	a, (hl+)
      0008B2 57                    2003 	ld	d, a
      0008B3 1A                    2004 	ld	a, (de)
      0008B4 B6                    2005 	or	a, (hl)
                                   2006 ;main.c:247: next_available_sprite_index++;
      0008B5 22                    2007 	ld	(hl+), a
      0008B6 23                    2008 	inc	hl
      0008B7 34                    2009 	inc	(hl)
                                   2010 ;main.c:250: update_tile_position(tile_data & k_tile_sprite_index_mask, x, y);
      0008B8 2B                    2011 	dec	hl
      0008B9 2B                    2012 	dec	hl
      0008BA 7E                    2013 	ld	a, (hl)
      0008BB 21 AF 01              2014 	ld	hl, #431
      0008BE 39                    2015 	add	hl, sp
      0008BF A6                    2016 	and	a, (hl)
      0008C0 21 B6 01              2017 	ld	hl, #438
      0008C3 39                    2018 	add	hl, sp
      0008C4 66                    2019 	ld	h, (hl)
                                   2020 ;	spillPairReg hl
                                   2021 ;	spillPairReg hl
      0008C5 E5                    2022 	push	hl
      0008C6 33                    2023 	inc	sp
      0008C7 21 B6 01              2024 	ld	hl, #438
      0008CA 39                    2025 	add	hl, sp
      0008CB 66                    2026 	ld	h, (hl)
                                   2027 ;	spillPairReg hl
                                   2028 ;	spillPairReg hl
      0008CC E5                    2029 	push	hl
      0008CD 33                    2030 	inc	sp
      0008CE F5                    2031 	push	af
      0008CF 33                    2032 	inc	sp
      0008D0 CDr31r03              2033 	call	_update_tile_position
      0008D3 E8 03                 2034 	add	sp, #3
      0008D5 18 54                 2035 	jr	00146$
      0008D7                       2036 00139$:
                                   2037 ;main.c:255: tile_data &= ~k_tile_is_alive_mask;
      0008D7 21 B2 01              2038 	ld	hl, #434
      0008DA 39                    2039 	add	hl, sp
      0008DB 3A                    2040 	ld	a, (hl-)
      0008DC A6                    2041 	and	a, (hl)
      0008DD 23                    2042 	inc	hl
      0008DE 77                    2043 	ld	(hl), a
      0008DF 18 4A                 2044 	jr	00146$
      0008E1                       2045 00145$:
                                   2046 ;main.c:258: else if (was_alive && !is_alive)
      0008E1 21 AE 01              2047 	ld	hl, #430
      0008E4 39                    2048 	add	hl, sp
      0008E5 7E                    2049 	ld	a, (hl)
      0008E6 B7                    2050 	or	a, a
      0008E7 28 42                 2051 	jr	Z, 00146$
      0008E9 23                    2052 	inc	hl
      0008EA 23                    2053 	inc	hl
      0008EB 7E                    2054 	ld	a, (hl)
      0008EC B7                    2055 	or	a, a
      0008ED 20 3C                 2056 	jr	NZ, 00146$
                                   2057 ;main.c:261: update_tile_position(tile_data & k_tile_sprite_index_mask, 0, 19);
      0008EF 23                    2058 	inc	hl
      0008F0 23                    2059 	inc	hl
      0008F1 7E                    2060 	ld	a, (hl)
      0008F2 21 AF 01              2061 	ld	hl, #431
      0008F5 39                    2062 	add	hl, sp
      0008F6 A6                    2063 	and	a, (hl)
      0008F7 26 13                 2064 	ld	h, #0x13
                                   2065 ;	spillPairReg hl
                                   2066 ;	spillPairReg hl
      0008F9 E5                    2067 	push	hl
      0008FA 33                    2068 	inc	sp
      0008FB 26 00                 2069 	ld	h, #0x00
                                   2070 ;	spillPairReg hl
                                   2071 ;	spillPairReg hl
      0008FD E5                    2072 	push	hl
      0008FE 33                    2073 	inc	sp
      0008FF F5                    2074 	push	af
      000900 33                    2075 	inc	sp
      000901 CDr31r03              2076 	call	_update_tile_position
      000904 E8 03                 2077 	add	sp, #3
                                   2078 ;main.c:264: next_available_sprite_index--;
      000906 21 B4 01              2079 	ld	hl, #436
      000909 39                    2080 	add	hl, sp
      00090A 35                    2081 	dec	(hl)
                                   2082 ;main.c:265: available_sprites[next_available_sprite_index] = tile_data & k_tile_sprite_index_mask;
      00090B 21 A0 01              2083 	ld	hl,#0x1a0
      00090E 39                    2084 	add	hl,sp
      00090F 2A                    2085 	ld	a, (hl+)
      000910 5F                    2086 	ld	e, a
      000911 56                    2087 	ld	d, (hl)
      000912 21 B4 01              2088 	ld	hl, #436
      000915 39                    2089 	add	hl, sp
      000916 6E                    2090 	ld	l, (hl)
      000917 26 00                 2091 	ld	h, #0x00
      000919 19                    2092 	add	hl, de
      00091A 5D                    2093 	ld	e, l
      00091B 54                    2094 	ld	d, h
      00091C 21rE0r02              2095 	ld	hl, #_k_tile_sprite_index_mask
      00091F 4E                    2096 	ld	c, (hl)
      000920 21 B2 01              2097 	ld	hl, #434
      000923 39                    2098 	add	hl, sp
      000924 7E                    2099 	ld	a, (hl)
      000925 A1                    2100 	and	a, c
      000926 12                    2101 	ld	(de), a
                                   2102 ;main.c:268: tile_data &= ~k_tile_sprite_index_mask;
      000927 79                    2103 	ld	a, c
      000928 2F                    2104 	cpl
      000929 A6                    2105 	and	a, (hl)
      00092A 77                    2106 	ld	(hl), a
      00092B                       2107 00146$:
                                   2108 ;main.c:271: board[x][y] = tile_data;
      00092B 21 A7 01              2109 	ld	hl,#0x1a7
      00092E 39                    2110 	add	hl,sp
      00092F 2A                    2111 	ld	a, (hl+)
      000930 5F                    2112 	ld	e, a
      000931 56                    2113 	ld	d, (hl)
      000932 21 B2 01              2114 	ld	hl, #434
      000935 39                    2115 	add	hl, sp
      000936 7E                    2116 	ld	a, (hl)
      000937 12                    2117 	ld	(de), a
                                   2118 ;main.c:154: for (uint8_t y = 0; y < 18; ++y)
      000938 21 B6 01              2119 	ld	hl, #438
      00093B 39                    2120 	add	hl, sp
      00093C 34                    2121 	inc	(hl)
      00093D C3rF2r05              2122 	jp	00190$
      000940                       2123 00194$:
                                   2124 ;main.c:152: for (uint8_t x = 0; x < 20; ++x)
      000940 21 B5 01              2125 	ld	hl, #437
      000943 39                    2126 	add	hl, sp
      000944 34                    2127 	inc	(hl)
      000945 C3rB1r05              2128 	jp	00193$
      000948                       2129 00169$:
                                   2130 ;main.c:284: if (was_input_depressed(&input_state, btn_up))
      000948 21 96 01              2131 	ld	hl, #406
      00094B 39                    2132 	add	hl, sp
      00094C 7E                    2133 	ld	a, (hl)
      00094D 21 B5 01              2134 	ld	hl, #437
      000950 39                    2135 	add	hl, sp
      000951 77                    2136 	ld	(hl), a
      000952 21 97 01              2137 	ld	hl, #407
      000955 39                    2138 	add	hl, sp
      000956 7E                    2139 	ld	a, (hl)
      000957 21 B6 01              2140 	ld	hl, #438
      00095A 39                    2141 	add	hl, sp
      00095B 32                    2142 	ld	(hl-), a
      00095C 3E 02                 2143 	ld	a, #0x02
      00095E F5                    2144 	push	af
      00095F 33                    2145 	inc	sp
      000960 2A                    2146 	ld	a, (hl+)
      000961 5F                    2147 	ld	e, a
      000962 56                    2148 	ld	d, (hl)
      000963 D5                    2149 	push	de
      000964 CDr77r02              2150 	call	_was_input_depressed
      000967 E8 03                 2151 	add	sp, #3
      000969 21 B6 01              2152 	ld	hl, #438
      00096C 39                    2153 	add	hl, sp
      00096D 73                    2154 	ld	(hl), e
                                   2155 ;main.c:286: cursor_tile_y -= 1;
      00096E 21 99 01              2156 	ld	hl, #409
      000971 39                    2157 	add	hl, sp
      000972 7E                    2158 	ld	a, (hl)
      000973 21 B2 01              2159 	ld	hl, #434
      000976 39                    2160 	add	hl, sp
      000977 77                    2161 	ld	(hl), a
                                   2162 ;main.c:284: if (was_input_depressed(&input_state, btn_up))
      000978 21 B6 01              2163 	ld	hl, #438
      00097B 39                    2164 	add	hl, sp
      00097C 7E                    2165 	ld	a, (hl)
      00097D B7                    2166 	or	a, a
      00097E 28 0E                 2167 	jr	Z, 00159$
                                   2168 ;main.c:286: cursor_tile_y -= 1;
      000980 21 B2 01              2169 	ld	hl, #434
      000983 39                    2170 	add	hl, sp
      000984 7E                    2171 	ld	a, (hl)
      000985 3D                    2172 	dec	a
      000986 21 99 01              2173 	ld	hl, #409
      000989 39                    2174 	add	hl, sp
      00098A 77                    2175 	ld	(hl), a
      00098B C3r28r0A              2176 	jp	00160$
      00098E                       2177 00159$:
                                   2178 ;main.c:288: else if (was_input_depressed(&input_state, btn_down))
      00098E 21 96 01              2179 	ld	hl, #406
      000991 39                    2180 	add	hl, sp
      000992 7E                    2181 	ld	a, (hl)
      000993 21 B5 01              2182 	ld	hl, #437
      000996 39                    2183 	add	hl, sp
      000997 77                    2184 	ld	(hl), a
      000998 21 97 01              2185 	ld	hl, #407
      00099B 39                    2186 	add	hl, sp
      00099C 7E                    2187 	ld	a, (hl)
      00099D 21 B6 01              2188 	ld	hl, #438
      0009A0 39                    2189 	add	hl, sp
      0009A1 32                    2190 	ld	(hl-), a
      0009A2 3E 03                 2191 	ld	a, #0x03
      0009A4 F5                    2192 	push	af
      0009A5 33                    2193 	inc	sp
      0009A6 2A                    2194 	ld	a, (hl+)
      0009A7 5F                    2195 	ld	e, a
      0009A8 56                    2196 	ld	d, (hl)
      0009A9 D5                    2197 	push	de
      0009AA CDr77r02              2198 	call	_was_input_depressed
      0009AD E8 03                 2199 	add	sp, #3
      0009AF 7B                    2200 	ld	a, e
      0009B0 B7                    2201 	or	a, a
      0009B1 28 0D                 2202 	jr	Z, 00156$
                                   2203 ;main.c:290: cursor_tile_y += 1;
      0009B3 21 B2 01              2204 	ld	hl, #434
      0009B6 39                    2205 	add	hl, sp
      0009B7 7E                    2206 	ld	a, (hl)
      0009B8 3C                    2207 	inc	a
      0009B9 21 99 01              2208 	ld	hl, #409
      0009BC 39                    2209 	add	hl, sp
      0009BD 77                    2210 	ld	(hl), a
      0009BE 18 68                 2211 	jr	00160$
      0009C0                       2212 00156$:
                                   2213 ;main.c:292: else if (was_input_depressed(&input_state, btn_left))
      0009C0 21 96 01              2214 	ld	hl, #406
      0009C3 39                    2215 	add	hl, sp
      0009C4 7E                    2216 	ld	a, (hl)
      0009C5 21 B5 01              2217 	ld	hl, #437
      0009C8 39                    2218 	add	hl, sp
      0009C9 77                    2219 	ld	(hl), a
      0009CA 21 97 01              2220 	ld	hl, #407
      0009CD 39                    2221 	add	hl, sp
      0009CE 7E                    2222 	ld	a, (hl)
      0009CF 21 B6 01              2223 	ld	hl, #438
      0009D2 39                    2224 	add	hl, sp
      0009D3 32                    2225 	ld	(hl-), a
      0009D4 3E 04                 2226 	ld	a, #0x04
      0009D6 F5                    2227 	push	af
      0009D7 33                    2228 	inc	sp
      0009D8 2A                    2229 	ld	a, (hl+)
      0009D9 5F                    2230 	ld	e, a
      0009DA 56                    2231 	ld	d, (hl)
      0009DB D5                    2232 	push	de
      0009DC CDr77r02              2233 	call	_was_input_depressed
      0009DF E8 03                 2234 	add	sp, #3
                                   2235 ;main.c:294: cursor_tile_x -= 1;
      0009E1 21 98 01              2236 	ld	hl, #408
      0009E4 39                    2237 	add	hl, sp
      0009E5 7E                    2238 	ld	a, (hl)
      0009E6 21 B2 01              2239 	ld	hl, #434
      0009E9 39                    2240 	add	hl, sp
      0009EA 77                    2241 	ld	(hl), a
                                   2242 ;main.c:292: else if (was_input_depressed(&input_state, btn_left))
      0009EB 7B                    2243 	ld	a, e
      0009EC B7                    2244 	or	a, a
      0009ED 28 09                 2245 	jr	Z, 00153$
                                   2246 ;main.c:294: cursor_tile_x -= 1;
      0009EF 7E                    2247 	ld	a, (hl)
      0009F0 3D                    2248 	dec	a
      0009F1 21 98 01              2249 	ld	hl, #408
      0009F4 39                    2250 	add	hl, sp
      0009F5 77                    2251 	ld	(hl), a
      0009F6 18 30                 2252 	jr	00160$
      0009F8                       2253 00153$:
                                   2254 ;main.c:296: else if (was_input_depressed(&input_state, btn_right))
      0009F8 21 96 01              2255 	ld	hl, #406
      0009FB 39                    2256 	add	hl, sp
      0009FC 7E                    2257 	ld	a, (hl)
      0009FD 21 B5 01              2258 	ld	hl, #437
      000A00 39                    2259 	add	hl, sp
      000A01 77                    2260 	ld	(hl), a
      000A02 21 97 01              2261 	ld	hl, #407
      000A05 39                    2262 	add	hl, sp
      000A06 7E                    2263 	ld	a, (hl)
      000A07 21 B6 01              2264 	ld	hl, #438
      000A0A 39                    2265 	add	hl, sp
      000A0B 32                    2266 	ld	(hl-), a
      000A0C 3E 05                 2267 	ld	a, #0x05
      000A0E F5                    2268 	push	af
      000A0F 33                    2269 	inc	sp
      000A10 2A                    2270 	ld	a, (hl+)
      000A11 5F                    2271 	ld	e, a
      000A12 56                    2272 	ld	d, (hl)
      000A13 D5                    2273 	push	de
      000A14 CDr77r02              2274 	call	_was_input_depressed
      000A17 E8 03                 2275 	add	sp, #3
      000A19 7B                    2276 	ld	a, e
      000A1A B7                    2277 	or	a, a
      000A1B 28 0B                 2278 	jr	Z, 00160$
                                   2279 ;main.c:298: cursor_tile_x += 1;
      000A1D 21 B2 01              2280 	ld	hl, #434
      000A20 39                    2281 	add	hl, sp
      000A21 7E                    2282 	ld	a, (hl)
      000A22 3C                    2283 	inc	a
      000A23 21 98 01              2284 	ld	hl, #408
      000A26 39                    2285 	add	hl, sp
      000A27 77                    2286 	ld	(hl), a
      000A28                       2287 00160$:
                                   2288 ;main.c:303: ? 19
      000A28 21 98 01              2289 	ld	hl, #408
      000A2B 39                    2290 	add	hl, sp
      000A2C 7E                    2291 	ld	a, (hl)
      000A2D 3C                    2292 	inc	a
      000A2E 20 0B                 2293 	jr	NZ, 00208$
      000A30 21 B5 01              2294 	ld	hl, #437
      000A33 39                    2295 	add	hl, sp
      000A34 3E 13                 2296 	ld	a, #0x13
      000A36 22                    2297 	ld	(hl+), a
      000A37 AF                    2298 	xor	a, a
      000A38 77                    2299 	ld	(hl), a
      000A39 18 1E                 2300 	jr	00209$
      000A3B                       2301 00208$:
                                   2302 ;main.c:305: ? 0
      000A3B 3E 13                 2303 	ld	a, #0x13
      000A3D 21 98 01              2304 	ld	hl, #408
      000A40 39                    2305 	add	hl, sp
      000A41 96                    2306 	sub	a, (hl)
      000A42 30 09                 2307 	jr	NC, 00210$
      000A44 AF                    2308 	xor	a, a
      000A45 21 B5 01              2309 	ld	hl, #437
      000A48 39                    2310 	add	hl, sp
      000A49 22                    2311 	ld	(hl+), a
      000A4A 77                    2312 	ld	(hl), a
      000A4B 18 0C                 2313 	jr	00211$
      000A4D                       2314 00210$:
                                   2315 ;main.c:306: : cursor_tile_x;
      000A4D 21 98 01              2316 	ld	hl, #408
      000A50 39                    2317 	add	hl, sp
      000A51 7E                    2318 	ld	a, (hl)
      000A52 21 B5 01              2319 	ld	hl, #437
      000A55 39                    2320 	add	hl, sp
      000A56 22                    2321 	ld	(hl+), a
      000A57 36 00                 2322 	ld	(hl), #0x00
      000A59                       2323 00211$:
      000A59                       2324 00209$:
      000A59 21 B5 01              2325 	ld	hl, #437
      000A5C 39                    2326 	add	hl, sp
      000A5D 7E                    2327 	ld	a, (hl)
      000A5E 21 98 01              2328 	ld	hl, #408
      000A61 39                    2329 	add	hl, sp
                                   2330 ;main.c:310: ? 17
      000A62 22                    2331 	ld	(hl+), a
      000A63 7E                    2332 	ld	a, (hl)
      000A64 3C                    2333 	inc	a
      000A65 20 0B                 2334 	jr	NZ, 00212$
      000A67 21 B5 01              2335 	ld	hl, #437
      000A6A 39                    2336 	add	hl, sp
      000A6B 3E 11                 2337 	ld	a, #0x11
      000A6D 22                    2338 	ld	(hl+), a
      000A6E AF                    2339 	xor	a, a
      000A6F 77                    2340 	ld	(hl), a
      000A70 18 1E                 2341 	jr	00213$
      000A72                       2342 00212$:
                                   2343 ;main.c:312: ? 0
      000A72 3E 11                 2344 	ld	a, #0x11
      000A74 21 99 01              2345 	ld	hl, #409
      000A77 39                    2346 	add	hl, sp
      000A78 96                    2347 	sub	a, (hl)
      000A79 30 09                 2348 	jr	NC, 00214$
      000A7B AF                    2349 	xor	a, a
      000A7C 21 B5 01              2350 	ld	hl, #437
      000A7F 39                    2351 	add	hl, sp
      000A80 22                    2352 	ld	(hl+), a
      000A81 77                    2353 	ld	(hl), a
      000A82 18 0C                 2354 	jr	00215$
      000A84                       2355 00214$:
                                   2356 ;main.c:313: : cursor_tile_y;
      000A84 21 99 01              2357 	ld	hl, #409
      000A87 39                    2358 	add	hl, sp
      000A88 7E                    2359 	ld	a, (hl)
      000A89 21 B5 01              2360 	ld	hl, #437
      000A8C 39                    2361 	add	hl, sp
      000A8D 22                    2362 	ld	(hl+), a
      000A8E 36 00                 2363 	ld	(hl), #0x00
      000A90                       2364 00215$:
      000A90                       2365 00213$:
      000A90 21 B5 01              2366 	ld	hl, #437
      000A93 39                    2367 	add	hl, sp
      000A94 7E                    2368 	ld	a, (hl)
      000A95 21 99 01              2369 	ld	hl, #409
      000A98 39                    2370 	add	hl, sp
      000A99 77                    2371 	ld	(hl), a
                                   2372 ;main.c:315: update_cursor_position(cursor_tile_x, cursor_tile_y);
      000A9A 3A                    2373 	ld	a, (hl-)
      000A9B 57                    2374 	ld	d, a
      000A9C 5E                    2375 	ld	e, (hl)
      000A9D D5                    2376 	push	de
      000A9E CDrE8r02              2377 	call	_update_cursor_position
      000AA1 E1                    2378 	pop	hl
                                   2379 ;main.c:318: if (was_input_depressed(&input_state, btn_b))
      000AA2 21 96 01              2380 	ld	hl, #406
      000AA5 39                    2381 	add	hl, sp
      000AA6 2A                    2382 	ld	a, (hl+)
      000AA7 4F                    2383 	ld	c, a
      000AA8 46                    2384 	ld	b, (hl)
      000AA9 3E 01                 2385 	ld	a, #0x01
      000AAB F5                    2386 	push	af
      000AAC 33                    2387 	inc	sp
      000AAD C5                    2388 	push	bc
      000AAE CDr77r02              2389 	call	_was_input_depressed
      000AB1 E8 03                 2390 	add	sp, #3
      000AB3 7B                    2391 	ld	a, e
      000AB4 B7                    2392 	or	a, a
      000AB5 CArCFr0B              2393 	jp	Z, 00170$
                                   2394 ;main.c:320: uint8_t tile_data = board[cursor_tile_x][cursor_tile_y];
      000AB8 21 98 01              2395 	ld	hl, #408
      000ABB 39                    2396 	add	hl, sp
      000ABC 4E                    2397 	ld	c, (hl)
      000ABD 06 00                 2398 	ld	b, #0x00
      000ABF 69                    2399 	ld	l, c
      000AC0 60                    2400 	ld	h, b
      000AC1 29                    2401 	add	hl, hl
      000AC2 29                    2402 	add	hl, hl
      000AC3 29                    2403 	add	hl, hl
      000AC4 09                    2404 	add	hl, bc
      000AC5 29                    2405 	add	hl, hl
      000AC6 4D                    2406 	ld	c, l
      000AC7 44                    2407 	ld	b, h
      000AC8 21 9C 01              2408 	ld	hl, #412
      000ACB 39                    2409 	add	hl, sp
      000ACC 2A                    2410 	ld	a,	(hl+)
      000ACD 66                    2411 	ld	h, (hl)
      000ACE 6F                    2412 	ld	l, a
      000ACF 09                    2413 	add	hl, bc
      000AD0 4D                    2414 	ld	c, l
      000AD1 44                    2415 	ld	b, h
      000AD2 21 99 01              2416 	ld	hl, #409
      000AD5 39                    2417 	add	hl, sp
      000AD6 6E                    2418 	ld	l, (hl)
      000AD7 26 00                 2419 	ld	h, #0x00
      000AD9 09                    2420 	add	hl, bc
      000ADA E5                    2421 	push	hl
      000ADB 7D                    2422 	ld	a, l
      000ADC 21 B3 01              2423 	ld	hl, #435
      000ADF 39                    2424 	add	hl, sp
      000AE0 77                    2425 	ld	(hl), a
      000AE1 E1                    2426 	pop	hl
      000AE2 7C                    2427 	ld	a, h
      000AE3 21 B2 01              2428 	ld	hl, #434
      000AE6 39                    2429 	add	hl, sp
      000AE7 32                    2430 	ld	(hl-), a
      000AE8 2A                    2431 	ld	a, (hl+)
      000AE9 5F                    2432 	ld	e, a
      000AEA 56                    2433 	ld	d, (hl)
      000AEB 1A                    2434 	ld	a, (de)
      000AEC 21 B6 01              2435 	ld	hl, #438
      000AEF 39                    2436 	add	hl, sp
      000AF0 77                    2437 	ld	(hl), a
                                   2438 ;main.c:321: uint8_t is_alive = tile_data & k_tile_is_alive_mask;
      000AF1 21rE1r02              2439 	ld	hl, #_k_tile_is_alive_mask
      000AF4 4E                    2440 	ld	c, (hl)
                                   2441 ;main.c:250: update_tile_position(tile_data & k_tile_sprite_index_mask, x, y);
      000AF5 FArE0r02              2442 	ld	a, (#_k_tile_sprite_index_mask)
      000AF8 21 B5 01              2443 	ld	hl, #437
      000AFB 39                    2444 	add	hl, sp
                                   2445 ;main.c:321: uint8_t is_alive = tile_data & k_tile_is_alive_mask;
      000AFC 22                    2446 	ld	(hl+), a
      000AFD 7E                    2447 	ld	a, (hl)
      000AFE A1                    2448 	and	a, c
      000AFF 21 B0 01              2449 	ld	hl, #432
      000B02 39                    2450 	add	hl, sp
      000B03 77                    2451 	ld	(hl), a
                                   2452 ;main.c:323: if (!is_alive)
      000B04 7E                    2453 	ld	a, (hl)
      000B05 B7                    2454 	or	a, a
      000B06 20 4A                 2455 	jr	NZ, 00164$
                                   2456 ;main.c:325: if (next_available_sprite_index < 39)
      000B08 21 B4 01              2457 	ld	hl, #436
      000B0B 39                    2458 	add	hl, sp
      000B0C 7E                    2459 	ld	a, (hl)
      000B0D D6 27                 2460 	sub	a, #0x27
      000B0F D2rC2r0B              2461 	jp	NC, 00165$
                                   2462 ;main.c:328: tile_data |= available_sprites[next_available_sprite_index];
      000B12 21 9A 01              2463 	ld	hl,#0x19a
      000B15 39                    2464 	add	hl,sp
      000B16 2A                    2465 	ld	a, (hl+)
      000B17 5F                    2466 	ld	e, a
      000B18 56                    2467 	ld	d, (hl)
      000B19 21 B4 01              2468 	ld	hl, #436
      000B1C 39                    2469 	add	hl, sp
      000B1D 6E                    2470 	ld	l, (hl)
      000B1E 26 00                 2471 	ld	h, #0x00
      000B20 19                    2472 	add	hl, de
      000B21 4D                    2473 	ld	c, l
      000B22 44                    2474 	ld	b, h
      000B23 0A                    2475 	ld	a, (bc)
      000B24 21 B6 01              2476 	ld	hl, #438
      000B27 39                    2477 	add	hl, sp
      000B28 B6                    2478 	or	a, (hl)
                                   2479 ;main.c:329: next_available_sprite_index++;
      000B29 2B                    2480 	dec	hl
      000B2A 2B                    2481 	dec	hl
      000B2B 4F                    2482 	ld	c, a
      000B2C 34                    2483 	inc	(hl)
                                   2484 ;main.c:332: update_tile_position(tile_data & k_tile_sprite_index_mask, cursor_tile_x, cursor_tile_y);
      000B2D 23                    2485 	inc	hl
      000B2E 79                    2486 	ld	a, c
      000B2F A6                    2487 	and	a, (hl)
      000B30 C5                    2488 	push	bc
      000B31 21 9B 01              2489 	ld	hl, #411
      000B34 39                    2490 	add	hl, sp
      000B35 66                    2491 	ld	h, (hl)
                                   2492 ;	spillPairReg hl
                                   2493 ;	spillPairReg hl
      000B36 E5                    2494 	push	hl
      000B37 33                    2495 	inc	sp
      000B38 21 9B 01              2496 	ld	hl, #411
      000B3B 39                    2497 	add	hl, sp
      000B3C 66                    2498 	ld	h, (hl)
                                   2499 ;	spillPairReg hl
                                   2500 ;	spillPairReg hl
      000B3D E5                    2501 	push	hl
      000B3E 33                    2502 	inc	sp
      000B3F F5                    2503 	push	af
      000B40 33                    2504 	inc	sp
      000B41 CDr31r03              2505 	call	_update_tile_position
      000B44 E8 03                 2506 	add	sp, #3
      000B46 C1                    2507 	pop	bc
                                   2508 ;main.c:335: tile_data |= k_tile_is_alive_mask;
      000B47 FArE1r02              2509 	ld	a, (#_k_tile_is_alive_mask)
      000B4A B1                    2510 	or	a, c
      000B4B 21 B6 01              2511 	ld	hl, #438
      000B4E 39                    2512 	add	hl, sp
      000B4F 77                    2513 	ld	(hl), a
      000B50 18 70                 2514 	jr	00165$
      000B52                       2515 00164$:
                                   2516 ;main.c:341: update_tile_position(tile_data & k_tile_sprite_index_mask, 0, 19);
      000B52 21 B5 01              2517 	ld	hl, #437
      000B55 39                    2518 	add	hl, sp
      000B56 2A                    2519 	ld	a, (hl+)
      000B57 A6                    2520 	and	a, (hl)
      000B58 2B                    2521 	dec	hl
      000B59 77                    2522 	ld	(hl), a
      000B5A 3E 13                 2523 	ld	a, #0x13
      000B5C F5                    2524 	push	af
      000B5D 33                    2525 	inc	sp
      000B5E AF                    2526 	xor	a, a
      000B5F F5                    2527 	push	af
      000B60 33                    2528 	inc	sp
      000B61 7E                    2529 	ld	a, (hl)
      000B62 F5                    2530 	push	af
      000B63 33                    2531 	inc	sp
      000B64 CDr31r03              2532 	call	_update_tile_position
      000B67 E8 03                 2533 	add	sp, #3
                                   2534 ;main.c:344: next_available_sprite_index--;
      000B69 21 B4 01              2535 	ld	hl, #436
      000B6C 39                    2536 	add	hl, sp
      000B6D 35                    2537 	dec	(hl)
                                   2538 ;main.c:345: available_sprites[next_available_sprite_index] = tile_data & k_tile_sprite_index_mask;
      000B6E 21 9A 01              2539 	ld	hl,#0x19a
      000B71 39                    2540 	add	hl,sp
      000B72 2A                    2541 	ld	a, (hl+)
      000B73 5F                    2542 	ld	e, a
      000B74 56                    2543 	ld	d, (hl)
      000B75 21 B4 01              2544 	ld	hl, #436
      000B78 39                    2545 	add	hl, sp
      000B79 6E                    2546 	ld	l, (hl)
      000B7A 26 00                 2547 	ld	h, #0x00
      000B7C 19                    2548 	add	hl, de
      000B7D E5                    2549 	push	hl
      000B7E 7D                    2550 	ld	a, l
      000B7F 21 B1 01              2551 	ld	hl, #433
      000B82 39                    2552 	add	hl, sp
      000B83 77                    2553 	ld	(hl), a
      000B84 E1                    2554 	pop	hl
      000B85 7C                    2555 	ld	a, h
      000B86 21 B0 01              2556 	ld	hl, #432
      000B89 39                    2557 	add	hl, sp
      000B8A 77                    2558 	ld	(hl), a
      000B8B FArE0r02              2559 	ld	a, (#_k_tile_sprite_index_mask)
      000B8E 21 B5 01              2560 	ld	hl, #437
      000B91 39                    2561 	add	hl, sp
      000B92 22                    2562 	ld	(hl+), a
      000B93 3A                    2563 	ld	a, (hl-)
      000B94 A6                    2564 	and	a, (hl)
      000B95 4F                    2565 	ld	c, a
      000B96 21 AF 01              2566 	ld	hl, #431
      000B99 39                    2567 	add	hl, sp
      000B9A 2A                    2568 	ld	a,	(hl+)
      000B9B 66                    2569 	ld	h, (hl)
      000B9C 6F                    2570 	ld	l, a
      000B9D 71                    2571 	ld	(hl), c
                                   2572 ;main.c:348: tile_data &= ~k_tile_sprite_index_mask;
      000B9E 21 B5 01              2573 	ld	hl, #437
      000BA1 39                    2574 	add	hl, sp
      000BA2 7E                    2575 	ld	a, (hl)
      000BA3 2F                    2576 	cpl
      000BA4 21 B0 01              2577 	ld	hl, #432
      000BA7 39                    2578 	add	hl, sp
      000BA8 77                    2579 	ld	(hl), a
      000BA9 21 B6 01              2580 	ld	hl, #438
      000BAC 39                    2581 	add	hl, sp
      000BAD 7E                    2582 	ld	a, (hl)
      000BAE 21 B0 01              2583 	ld	hl, #432
      000BB1 39                    2584 	add	hl, sp
      000BB2 A6                    2585 	and	a, (hl)
      000BB3 21 B6 01              2586 	ld	hl, #438
      000BB6 39                    2587 	add	hl, sp
      000BB7 77                    2588 	ld	(hl), a
                                   2589 ;main.c:351: tile_data &= ~k_tile_is_alive_mask;
      000BB8 FArE1r02              2590 	ld	a, (#_k_tile_is_alive_mask)
      000BBB 2F                    2591 	cpl
      000BBC 21 B6 01              2592 	ld	hl, #438
      000BBF 39                    2593 	add	hl, sp
      000BC0 A6                    2594 	and	a, (hl)
      000BC1 77                    2595 	ld	(hl), a
      000BC2                       2596 00165$:
                                   2597 ;main.c:355: board[cursor_tile_x][cursor_tile_y] = tile_data;
      000BC2 21 B1 01              2598 	ld	hl,#0x1b1
      000BC5 39                    2599 	add	hl,sp
      000BC6 2A                    2600 	ld	a, (hl+)
      000BC7 5F                    2601 	ld	e, a
      000BC8 56                    2602 	ld	d, (hl)
      000BC9 21 B6 01              2603 	ld	hl, #438
      000BCC 39                    2604 	add	hl, sp
      000BCD 7E                    2605 	ld	a, (hl)
      000BCE 12                    2606 	ld	(de), a
      000BCF                       2607 00170$:
                                   2608 ;main.c:360: wait_vbls_done(1);
      000BCF 3E 01                 2609 	ld	a, #0x01
      000BD1 F5                    2610 	push	af
      000BD2 33                    2611 	inc	sp
      000BD3 CDrBFr02              2612 	call	_wait_vbls_done
      000BD6 33                    2613 	inc	sp
      000BD7 C3r8Br04              2614 	jp	00172$
                                   2615 ;main.c:362: }
      000BDA 21 B7 01              2616 	ld	hl, #439
      000BDD 39                    2617 	add	hl, sp
      000BDE F9                    2618 	ld	sp, hl
      000BDF C9                    2619 	ret
                                   2620 	.area _CODE
                                   2621 	.area _INITIALIZER
      000000                       2622 __xinit__k_sprites:
      000000 00                    2623 	.db #0x00	; 0
      000001 00                    2624 	.db #0x00	; 0
      000002 00                    2625 	.db #0x00	; 0
      000003 00                    2626 	.db #0x00	; 0
      000004 00                    2627 	.db #0x00	; 0
      000005 00                    2628 	.db #0x00	; 0
      000006 00                    2629 	.db #0x00	; 0
      000007 00                    2630 	.db #0x00	; 0
      000008 00                    2631 	.db #0x00	; 0
      000009 00                    2632 	.db #0x00	; 0
      00000A 00                    2633 	.db #0x00	; 0
      00000B 00                    2634 	.db #0x00	; 0
      00000C 00                    2635 	.db #0x00	; 0
      00000D 00                    2636 	.db #0x00	; 0
      00000E 00                    2637 	.db #0x00	; 0
      00000F 00                    2638 	.db #0x00	; 0
      000010 00                    2639 	.db #0x00	; 0
      000011 00                    2640 	.db #0x00	; 0
      000012 7F                    2641 	.db #0x7f	; 127
      000013 7F                    2642 	.db #0x7f	; 127
      000014 7F                    2643 	.db #0x7f	; 127
      000015 7F                    2644 	.db #0x7f	; 127
      000016 7F                    2645 	.db #0x7f	; 127
      000017 7F                    2646 	.db #0x7f	; 127
      000018 7F                    2647 	.db #0x7f	; 127
      000019 7F                    2648 	.db #0x7f	; 127
      00001A 7F                    2649 	.db #0x7f	; 127
      00001B 7F                    2650 	.db #0x7f	; 127
      00001C 7F                    2651 	.db #0x7f	; 127
      00001D 7F                    2652 	.db #0x7f	; 127
      00001E 7F                    2653 	.db #0x7f	; 127
      00001F 7F                    2654 	.db #0x7f	; 127
      000020 00                    2655 	.db #0x00	; 0
      000021 00                    2656 	.db #0x00	; 0
      000022 00                    2657 	.db #0x00	; 0
      000023 3E                    2658 	.db #0x3e	; 62
      000024 00                    2659 	.db #0x00	; 0
      000025 41                    2660 	.db #0x41	; 65	'A'
      000026 00                    2661 	.db #0x00	; 0
      000027 41                    2662 	.db #0x41	; 65	'A'
      000028 00                    2663 	.db #0x00	; 0
      000029 41                    2664 	.db #0x41	; 65	'A'
      00002A 00                    2665 	.db #0x00	; 0
      00002B 41                    2666 	.db #0x41	; 65	'A'
      00002C 00                    2667 	.db #0x00	; 0
      00002D 41                    2668 	.db #0x41	; 65	'A'
      00002E 00                    2669 	.db #0x00	; 0
      00002F 3E                    2670 	.db #0x3e	; 62
      000030 00                    2671 	.db #0x00	; 0
      000031 00                    2672 	.db #0x00	; 0
      000032 41                    2673 	.db #0x41	; 65	'A'
      000033 7F                    2674 	.db #0x7f	; 127
      000034 3E                    2675 	.db #0x3e	; 62
      000035 7F                    2676 	.db #0x7f	; 127
      000036 3E                    2677 	.db #0x3e	; 62
      000037 7F                    2678 	.db #0x7f	; 127
      000038 3E                    2679 	.db #0x3e	; 62
      000039 7F                    2680 	.db #0x7f	; 127
      00003A 3E                    2681 	.db #0x3e	; 62
      00003B 7F                    2682 	.db #0x7f	; 127
      00003C 3E                    2683 	.db #0x3e	; 62
      00003D 7F                    2684 	.db #0x7f	; 127
      00003E 41                    2685 	.db #0x41	; 65	'A'
      00003F 7F                    2686 	.db #0x7f	; 127
                                   2687 	.area _CABS (ABS)
